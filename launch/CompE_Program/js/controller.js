var app = angular.module("main", []);
app.controller("main", function($scope) { 
$scope.selectedPlan = "TraditionalPlan";
var that = this;
this.render = function(plan) {
            this.disable(this.previousPlan);
            this.enable(plan);
            this.previousPlan = plan;
};
var radios = document.querySelectorAll("input[type=radio][name=planselector]");
Array.prototype.forEach.call(radios, function (radio) {
    radio.addEventListener("change", function () { 
that.setDefaults($scope.selectedPlan);
that.render($scope.selectedPlan);
   });
});
this.highlightElement = function(element, category) {
        if (element.classList.contains(category + "-highlighted")) {
            return;
        }
        element.classList.remove(category);
        element.classList.add(category + "-highlighted");
    };
this.unHighlightElement = function(element, category) {
        if (!element.classList.contains(category + "-highlighted")) {
            return;
        }
        element.classList.remove(category + "-highlighted");
        element.classList.add(category);
    };
this.TraditionalPlanList = [];
this.TraditionalPlanClicked = [];
this.TraditionalPlanLegendBtns = [];
this.TraditionalPlanLegendBtnsClicked = [];
this.TraditionalPlanClickedMap = new Map();
this.TraditionalPlanTerms = 8;
this.TraditionalPlanMaxCourses = 7;
this.CoopPlanList = [];
this.CoopPlanClicked = [];
this.CoopPlanLegendBtns = [];
this.CoopPlanLegendBtnsClicked = [];
this.CoopPlanClickedMap = new Map();
this.CoopPlanTerms = 13;
this.CoopPlanMaxCourses = 8;
this.NanoTraditionalPlanList = [];
this.NanoTraditionalPlanClicked = [];
this.NanoTraditionalPlanLegendBtns = [];
this.NanoTraditionalPlanLegendBtnsClicked = [];
this.NanoTraditionalPlanClickedMap = new Map();
this.NanoTraditionalPlanTerms = 8;
this.NanoTraditionalPlanMaxCourses = 7;
this.NanoCoopPlanList = [];
this.NanoCoopPlanClicked = [];
this.NanoCoopPlanLegendBtns = [];
this.NanoCoopPlanLegendBtnsClicked = [];
this.NanoCoopPlanClickedMap = new Map();
this.NanoCoopPlanTerms = 13;
this.NanoCoopPlanMaxCourses = 7;
this.SoftwareCoopPlanList = [];
this.SoftwareCoopPlanClicked = [];
this.SoftwareCoopPlanLegendBtns = [];
this.SoftwareCoopPlanLegendBtnsClicked = [];
this.SoftwareCoopPlanClickedMap = new Map();
this.SoftwareCoopPlanTerms = 13;
this.SoftwareCoopPlanMaxCourses = 8;
this.previousPlan = $scope.selectedPlan
this.setDefaults = function(plan) { 
  switch(plan) { 
      case "TraditionalPlan": 
          $scope.$apply();
          break;
      case "CoopPlan": 
          $scope.$apply();
          break;
      case "NanoTraditionalPlan": 
          $scope.$apply();
          break;
      case "NanoCoopPlan": 
          $scope.$apply();
          break;
      case "SoftwareCoopPlan": 
          $scope.$apply();
          break;
    default:
    console.log("shouldn't be here");
    }
};
$scope.globalSubGroupChange = function () { 
that.render($scope.selectedPlan);
};
this.disable = function(plan) {
    switch (plan) { 
  case "TraditionalPlan": 
    for (let i = 0; i < this.TraditionalPlanList.length; i++) {
        this.TraditionalPlanList[i][0].hide(true);
    }
    break; 
  case "CoopPlan": 
    for (let i = 0; i < this.CoopPlanList.length; i++) {
        this.CoopPlanList[i][0].hide(true);
    }
    break; 
  case "NanoTraditionalPlan": 
    for (let i = 0; i < this.NanoTraditionalPlanList.length; i++) {
        this.NanoTraditionalPlanList[i][0].hide(true);
    }
    break; 
  case "NanoCoopPlan": 
    for (let i = 0; i < this.NanoCoopPlanList.length; i++) {
        this.NanoCoopPlanList[i][0].hide(true);
    }
    break; 
  case "SoftwareCoopPlan": 
    for (let i = 0; i < this.SoftwareCoopPlanList.length; i++) {
        this.SoftwareCoopPlanList[i][0].hide(true);
    }
    break; 
    default:
    console.log("shouldn't be here");
    }
};
  var currbtn = document.getElementById("NaturalSciences");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("EngineeringProfession");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("Other");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("Math");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("EngineeringDesign");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("ComputingScience");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("EngineeringSciences");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("COMP");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("PROG");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
  var currbtn = document.getElementById("ITS");
  that.TraditionalPlanLegendBtns.push(currbtn);
  that.CoopPlanLegendBtns.push(currbtn);
  that.NanoTraditionalPlanLegendBtns.push(currbtn);
  that.NanoCoopPlanLegendBtns.push(currbtn);
  that.SoftwareCoopPlanLegendBtns.push(currbtn);
this.enable = function(plan) {
  switch(plan) {
    case "TraditionalPlan": 
      for (let i = 0; i < this.TraditionalPlanList.length; i++) {
          this.TraditionalPlanList[i][0].show(true);
      }
      width = this.TraditionalPlanTerms*220 + 20;
      widthstr = width.toString() + "px";
      document.getElementById("main").style.width = widthstr;
      height = this.TraditionalPlanMaxCourses*100 + 690;
      heightstr = height.toString() + "px";
      document.getElementById("main").style.height = heightstr;
      for (let i = 0; i < this.TraditionalPlanClicked.length; i++) {
          var element = document.getElementById(this.TraditionalPlanClicked[i][0]);
          this.highlightElement(element, this.TraditionalPlanClicked[i][1]);
      }
      for (let i = 0; i < this.TraditionalPlanLegendBtns.length; i++) {
          var found = false;
          for (let j = 0; j < this.TraditionalPlanLegendBtnsClicked.length; j++) {
              if (this.TraditionalPlanLegendBtnsClicked[j] == this.TraditionalPlanLegendBtns[i]) {
                  found = true;
              }
          }
          if (found == false) {
              this.TraditionalPlanLegendBtns[i].classList.remove("legendbutton-pressed");
              this.TraditionalPlanLegendBtns[i].classList.add("legendbutton");
          }
          if (found == true) {
              this.TraditionalPlanLegendBtns[i].classList.remove("legendbutton");
              this.TraditionalPlanLegendBtns[i].classList.add("legendbutton-pressed");
          }
      }
      break; 
    case "CoopPlan": 
      for (let i = 0; i < this.CoopPlanList.length; i++) {
          this.CoopPlanList[i][0].show(true);
      }
      width = this.CoopPlanTerms*220 + 20;
      widthstr = width.toString() + "px";
      document.getElementById("main").style.width = widthstr;
      height = this.CoopPlanMaxCourses*100 + 690;
      heightstr = height.toString() + "px";
      document.getElementById("main").style.height = heightstr;
      for (let i = 0; i < this.CoopPlanClicked.length; i++) {
          var element = document.getElementById(this.CoopPlanClicked[i][0]);
          this.highlightElement(element, this.CoopPlanClicked[i][1]);
      }
      for (let i = 0; i < this.CoopPlanLegendBtns.length; i++) {
          var found = false;
          for (let j = 0; j < this.CoopPlanLegendBtnsClicked.length; j++) {
              if (this.CoopPlanLegendBtnsClicked[j] == this.CoopPlanLegendBtns[i]) {
                  found = true;
              }
          }
          if (found == false) {
              this.CoopPlanLegendBtns[i].classList.remove("legendbutton-pressed");
              this.CoopPlanLegendBtns[i].classList.add("legendbutton");
          }
          if (found == true) {
              this.CoopPlanLegendBtns[i].classList.remove("legendbutton");
              this.CoopPlanLegendBtns[i].classList.add("legendbutton-pressed");
          }
      }
      break; 
    case "NanoTraditionalPlan": 
      for (let i = 0; i < this.NanoTraditionalPlanList.length; i++) {
          this.NanoTraditionalPlanList[i][0].show(true);
      }
      width = this.NanoTraditionalPlanTerms*220 + 20;
      widthstr = width.toString() + "px";
      document.getElementById("main").style.width = widthstr;
      height = this.NanoTraditionalPlanMaxCourses*100 + 690;
      heightstr = height.toString() + "px";
      document.getElementById("main").style.height = heightstr;
      for (let i = 0; i < this.NanoTraditionalPlanClicked.length; i++) {
          var element = document.getElementById(this.NanoTraditionalPlanClicked[i][0]);
          this.highlightElement(element, this.NanoTraditionalPlanClicked[i][1]);
      }
      for (let i = 0; i < this.NanoTraditionalPlanLegendBtns.length; i++) {
          var found = false;
          for (let j = 0; j < this.NanoTraditionalPlanLegendBtnsClicked.length; j++) {
              if (this.NanoTraditionalPlanLegendBtnsClicked[j] == this.NanoTraditionalPlanLegendBtns[i]) {
                  found = true;
              }
          }
          if (found == false) {
              this.NanoTraditionalPlanLegendBtns[i].classList.remove("legendbutton-pressed");
              this.NanoTraditionalPlanLegendBtns[i].classList.add("legendbutton");
          }
          if (found == true) {
              this.NanoTraditionalPlanLegendBtns[i].classList.remove("legendbutton");
              this.NanoTraditionalPlanLegendBtns[i].classList.add("legendbutton-pressed");
          }
      }
      break; 
    case "NanoCoopPlan": 
      for (let i = 0; i < this.NanoCoopPlanList.length; i++) {
          this.NanoCoopPlanList[i][0].show(true);
      }
      width = this.NanoCoopPlanTerms*220 + 20;
      widthstr = width.toString() + "px";
      document.getElementById("main").style.width = widthstr;
      height = this.NanoCoopPlanMaxCourses*100 + 690;
      heightstr = height.toString() + "px";
      document.getElementById("main").style.height = heightstr;
      for (let i = 0; i < this.NanoCoopPlanClicked.length; i++) {
          var element = document.getElementById(this.NanoCoopPlanClicked[i][0]);
          this.highlightElement(element, this.NanoCoopPlanClicked[i][1]);
      }
      for (let i = 0; i < this.NanoCoopPlanLegendBtns.length; i++) {
          var found = false;
          for (let j = 0; j < this.NanoCoopPlanLegendBtnsClicked.length; j++) {
              if (this.NanoCoopPlanLegendBtnsClicked[j] == this.NanoCoopPlanLegendBtns[i]) {
                  found = true;
              }
          }
          if (found == false) {
              this.NanoCoopPlanLegendBtns[i].classList.remove("legendbutton-pressed");
              this.NanoCoopPlanLegendBtns[i].classList.add("legendbutton");
          }
          if (found == true) {
              this.NanoCoopPlanLegendBtns[i].classList.remove("legendbutton");
              this.NanoCoopPlanLegendBtns[i].classList.add("legendbutton-pressed");
          }
      }
      break; 
    case "SoftwareCoopPlan": 
      for (let i = 0; i < this.SoftwareCoopPlanList.length; i++) {
          this.SoftwareCoopPlanList[i][0].show(true);
      }
      width = this.SoftwareCoopPlanTerms*220 + 20;
      widthstr = width.toString() + "px";
      document.getElementById("main").style.width = widthstr;
      height = this.SoftwareCoopPlanMaxCourses*100 + 690;
      heightstr = height.toString() + "px";
      document.getElementById("main").style.height = heightstr;
      for (let i = 0; i < this.SoftwareCoopPlanClicked.length; i++) {
          var element = document.getElementById(this.SoftwareCoopPlanClicked[i][0]);
          this.highlightElement(element, this.SoftwareCoopPlanClicked[i][1]);
      }
      for (let i = 0; i < this.SoftwareCoopPlanLegendBtns.length; i++) {
          var found = false;
          for (let j = 0; j < this.SoftwareCoopPlanLegendBtnsClicked.length; j++) {
              if (this.SoftwareCoopPlanLegendBtnsClicked[j] == this.SoftwareCoopPlanLegendBtns[i]) {
                  found = true;
              }
          }
          if (found == false) {
              this.SoftwareCoopPlanLegendBtns[i].classList.remove("legendbutton-pressed");
              this.SoftwareCoopPlanLegendBtns[i].classList.add("legendbutton");
          }
          if (found == true) {
              this.SoftwareCoopPlanLegendBtns[i].classList.remove("legendbutton");
              this.SoftwareCoopPlanLegendBtns[i].classList.add("legendbutton-pressed");
          }
      }
      break; 
    default:
    console.log("shouldn't be here");
    }
};
this.addLine = function(line) {
switch($scope.selectedPlan) { 
 case "TraditionalPlan":
    var index = this.TraditionalPlanList.findIndex((element) => element[0] == line);
    if (index == -1) {
        line.show(false);
        this.TraditionalPlanList.push([line, 1])
    }
    else {
        this.TraditionalPlanList[index][1]++;
    }
    break;
 case "CoopPlan":
    var index = this.CoopPlanList.findIndex((element) => element[0] == line);
    if (index == -1) {
        line.show(false);
        this.CoopPlanList.push([line, 1])
    }
    else {
        this.CoopPlanList[index][1]++;
    }
    break;
 case "NanoTraditionalPlan":
    var index = this.NanoTraditionalPlanList.findIndex((element) => element[0] == line);
    if (index == -1) {
        line.show(false);
        this.NanoTraditionalPlanList.push([line, 1])
    }
    else {
        this.NanoTraditionalPlanList[index][1]++;
    }
    break;
 case "NanoCoopPlan":
    var index = this.NanoCoopPlanList.findIndex((element) => element[0] == line);
    if (index == -1) {
        line.show(false);
        this.NanoCoopPlanList.push([line, 1])
    }
    else {
        this.NanoCoopPlanList[index][1]++;
    }
    break;
 case "SoftwareCoopPlan":
    var index = this.SoftwareCoopPlanList.findIndex((element) => element[0] == line);
    if (index == -1) {
        line.show(false);
        this.SoftwareCoopPlanList.push([line, 1])
    }
    else {
        this.SoftwareCoopPlanList[index][1]++;
    }
    break;
    default:
    console.log("shouldn't be here");
    }
};
this.removeLine = function(line) {
switch($scope.selectedPlan) { 
 case "TraditionalPlan":
    var index = this.TraditionalPlanList.findIndex((element) => element[0] == line);
    if (index != -1) {
        this.TraditionalPlanList[index][1]--
        if (this.TraditionalPlanList[index][1] <= 0) {
            line.hide(false);
            this.TraditionalPlanList.splice(index, 1);
        }
    }
    break; case "CoopPlan":
    var index = this.CoopPlanList.findIndex((element) => element[0] == line);
    if (index != -1) {
        this.CoopPlanList[index][1]--
        if (this.CoopPlanList[index][1] <= 0) {
            line.hide(false);
            this.CoopPlanList.splice(index, 1);
        }
    }
    break; case "NanoTraditionalPlan":
    var index = this.NanoTraditionalPlanList.findIndex((element) => element[0] == line);
    if (index != -1) {
        this.NanoTraditionalPlanList[index][1]--
        if (this.NanoTraditionalPlanList[index][1] <= 0) {
            line.hide(false);
            this.NanoTraditionalPlanList.splice(index, 1);
        }
    }
    break; case "NanoCoopPlan":
    var index = this.NanoCoopPlanList.findIndex((element) => element[0] == line);
    if (index != -1) {
        this.NanoCoopPlanList[index][1]--
        if (this.NanoCoopPlanList[index][1] <= 0) {
            line.hide(false);
            this.NanoCoopPlanList.splice(index, 1);
        }
    }
    break; case "SoftwareCoopPlan":
    var index = this.SoftwareCoopPlanList.findIndex((element) => element[0] == line);
    if (index != -1) {
        this.SoftwareCoopPlanList[index][1]--
        if (this.SoftwareCoopPlanList[index][1] <= 0) {
            line.hide(false);
            this.SoftwareCoopPlanList.splice(index, 1);
        }
    }
    break;    default:
    console.log("shouldn't be here");
    }
};
this.addToClicked = function(element, category) {
switch($scope.selectedPlan) { 
 case "TraditionalPlan":
    var index = this.TraditionalPlanClicked.findIndex((item) => item[0] == element);
    if (index == -1) {
        this.TraditionalPlanClicked.push([element, category, 1]);
    }
    else {
        this.TraditionalPlanClicked[index][1] = category;
        this.TraditionalPlanClicked[index][2]++;
    }
    this.TraditionalPlanClickedMap.get(element).push(category);
    break; case "CoopPlan":
    var index = this.CoopPlanClicked.findIndex((item) => item[0] == element);
    if (index == -1) {
        this.CoopPlanClicked.push([element, category, 1]);
    }
    else {
        this.CoopPlanClicked[index][1] = category;
        this.CoopPlanClicked[index][2]++;
    }
    this.CoopPlanClickedMap.get(element).push(category);
    break; case "NanoTraditionalPlan":
    var index = this.NanoTraditionalPlanClicked.findIndex((item) => item[0] == element);
    if (index == -1) {
        this.NanoTraditionalPlanClicked.push([element, category, 1]);
    }
    else {
        this.NanoTraditionalPlanClicked[index][1] = category;
        this.NanoTraditionalPlanClicked[index][2]++;
    }
    this.NanoTraditionalPlanClickedMap.get(element).push(category);
    break; case "NanoCoopPlan":
    var index = this.NanoCoopPlanClicked.findIndex((item) => item[0] == element);
    if (index == -1) {
        this.NanoCoopPlanClicked.push([element, category, 1]);
    }
    else {
        this.NanoCoopPlanClicked[index][1] = category;
        this.NanoCoopPlanClicked[index][2]++;
    }
    this.NanoCoopPlanClickedMap.get(element).push(category);
    break; case "SoftwareCoopPlan":
    var index = this.SoftwareCoopPlanClicked.findIndex((item) => item[0] == element);
    if (index == -1) {
        this.SoftwareCoopPlanClicked.push([element, category, 1]);
    }
    else {
        this.SoftwareCoopPlanClicked[index][1] = category;
        this.SoftwareCoopPlanClicked[index][2]++;
    }
    this.SoftwareCoopPlanClickedMap.get(element).push(category);
    break;    default:
    console.log("shouldn't be here");
    }
};
this.removeFromClicked = function(element, category) {
switch($scope.selectedPlan) { 
 case "TraditionalPlan":
    var index = this.TraditionalPlanClicked.findIndex((item) => item[0] == element);
    if (index != -1) {
        var indexMap = this.TraditionalPlanClickedMap.get(element).lastIndexOf(category);
        if (indexMap != -1) {
            this.TraditionalPlanClickedMap.get(element).splice(indexMap, 1);
        }
        this.TraditionalPlanClicked[index][2]--;
        if (this.TraditionalPlanClicked[index][2] <= 0) {
            this.TraditionalPlanClicked.splice(index, 1);
            return "";
        }
        var maxIndex = this.TraditionalPlanClickedMap.get(element).length - 1
        return this.TraditionalPlanClickedMap.get(element)[maxIndex];
    }
    return "";
    break; case "CoopPlan":
    var index = this.CoopPlanClicked.findIndex((item) => item[0] == element);
    if (index != -1) {
        var indexMap = this.CoopPlanClickedMap.get(element).lastIndexOf(category);
        if (indexMap != -1) {
            this.CoopPlanClickedMap.get(element).splice(indexMap, 1);
        }
        this.CoopPlanClicked[index][2]--;
        if (this.CoopPlanClicked[index][2] <= 0) {
            this.CoopPlanClicked.splice(index, 1);
            return "";
        }
        var maxIndex = this.CoopPlanClickedMap.get(element).length - 1
        return this.CoopPlanClickedMap.get(element)[maxIndex];
    }
    return "";
    break; case "NanoTraditionalPlan":
    var index = this.NanoTraditionalPlanClicked.findIndex((item) => item[0] == element);
    if (index != -1) {
        var indexMap = this.NanoTraditionalPlanClickedMap.get(element).lastIndexOf(category);
        if (indexMap != -1) {
            this.NanoTraditionalPlanClickedMap.get(element).splice(indexMap, 1);
        }
        this.NanoTraditionalPlanClicked[index][2]--;
        if (this.NanoTraditionalPlanClicked[index][2] <= 0) {
            this.NanoTraditionalPlanClicked.splice(index, 1);
            return "";
        }
        var maxIndex = this.NanoTraditionalPlanClickedMap.get(element).length - 1
        return this.NanoTraditionalPlanClickedMap.get(element)[maxIndex];
    }
    return "";
    break; case "NanoCoopPlan":
    var index = this.NanoCoopPlanClicked.findIndex((item) => item[0] == element);
    if (index != -1) {
        var indexMap = this.NanoCoopPlanClickedMap.get(element).lastIndexOf(category);
        if (indexMap != -1) {
            this.NanoCoopPlanClickedMap.get(element).splice(indexMap, 1);
        }
        this.NanoCoopPlanClicked[index][2]--;
        if (this.NanoCoopPlanClicked[index][2] <= 0) {
            this.NanoCoopPlanClicked.splice(index, 1);
            return "";
        }
        var maxIndex = this.NanoCoopPlanClickedMap.get(element).length - 1
        return this.NanoCoopPlanClickedMap.get(element)[maxIndex];
    }
    return "";
    break; case "SoftwareCoopPlan":
    var index = this.SoftwareCoopPlanClicked.findIndex((item) => item[0] == element);
    if (index != -1) {
        var indexMap = this.SoftwareCoopPlanClickedMap.get(element).lastIndexOf(category);
        if (indexMap != -1) {
            this.SoftwareCoopPlanClickedMap.get(element).splice(indexMap, 1);
        }
        this.SoftwareCoopPlanClicked[index][2]--;
        if (this.SoftwareCoopPlanClicked[index][2] <= 0) {
            this.SoftwareCoopPlanClicked.splice(index, 1);
            return "";
        }
        var maxIndex = this.SoftwareCoopPlanClickedMap.get(element).length - 1
        return this.SoftwareCoopPlanClickedMap.get(element)[maxIndex];
    }
    return "";
    break;    default:
    console.log("shouldn't be here");
    }
};
var NaturalSciencesTraditionalPlanflag = false;
var NaturalSciencesCoopPlanflag = false;
var NaturalSciencesNanoTraditionalPlanflag = false;
var NaturalSciencesNanoCoopPlanflag = false;
var NaturalSciencesSoftwareCoopPlanflag = false;
var EngineeringProfessionTraditionalPlanflag = false;
var EngineeringProfessionCoopPlanflag = false;
var EngineeringProfessionNanoTraditionalPlanflag = false;
var EngineeringProfessionNanoCoopPlanflag = false;
var EngineeringProfessionSoftwareCoopPlanflag = false;
var OtherTraditionalPlanflag = false;
var OtherCoopPlanflag = false;
var OtherNanoTraditionalPlanflag = false;
var OtherNanoCoopPlanflag = false;
var OtherSoftwareCoopPlanflag = false;
var MathTraditionalPlanflag = false;
var MathCoopPlanflag = false;
var MathNanoTraditionalPlanflag = false;
var MathNanoCoopPlanflag = false;
var MathSoftwareCoopPlanflag = false;
var EngineeringDesignTraditionalPlanflag = false;
var EngineeringDesignCoopPlanflag = false;
var EngineeringDesignNanoTraditionalPlanflag = false;
var EngineeringDesignNanoCoopPlanflag = false;
var EngineeringDesignSoftwareCoopPlanflag = false;
var ComputingScienceTraditionalPlanflag = false;
var ComputingScienceCoopPlanflag = false;
var ComputingScienceNanoTraditionalPlanflag = false;
var ComputingScienceNanoCoopPlanflag = false;
var ComputingScienceSoftwareCoopPlanflag = false;
var EngineeringSciencesTraditionalPlanflag = false;
var EngineeringSciencesCoopPlanflag = false;
var EngineeringSciencesNanoTraditionalPlanflag = false;
var EngineeringSciencesNanoCoopPlanflag = false;
var EngineeringSciencesSoftwareCoopPlanflag = false;
var COMPTraditionalPlanflag = false;
var COMPCoopPlanflag = false;
var COMPNanoTraditionalPlanflag = false;
var COMPNanoCoopPlanflag = false;
var COMPSoftwareCoopPlanflag = false;
var PROGTraditionalPlanflag = false;
var PROGCoopPlanflag = false;
var PROGNanoTraditionalPlanflag = false;
var PROGNanoCoopPlanflag = false;
var PROGSoftwareCoopPlanflag = false;
var ITSTraditionalPlanflag = false;
var ITSCoopPlanflag = false;
var ITSNanoTraditionalPlanflag = false;
var ITSNanoCoopPlanflag = false;
var ITSSoftwareCoopPlanflag = false;
$scope.NaturalSciencesclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("NaturalSciences");
    var checkFlag = "!NaturalSciences" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("NaturalSciences", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "NaturalSciences" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("NaturalSciences", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "NaturalSciences" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.EngineeringProfessionclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("EngineeringProfession");
    var checkFlag = "!EngineeringProfession" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("EngineeringProfession", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "EngineeringProfession" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("EngineeringProfession", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "EngineeringProfession" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.OtherclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("Other");
    var checkFlag = "!Other" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("Other", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "Other" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("Other", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "Other" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.MathclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("Math");
    var checkFlag = "!Math" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("Math", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "Math" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("Math", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "Math" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.EngineeringDesignclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("EngineeringDesign");
    var checkFlag = "!EngineeringDesign" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("EngineeringDesign", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "EngineeringDesign" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("EngineeringDesign", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "EngineeringDesign" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.ComputingScienceclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("ComputingScience");
    var checkFlag = "!ComputingScience" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("ComputingScience", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "ComputingScience" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("ComputingScience", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "ComputingScience" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.EngineeringSciencesclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("EngineeringSciences");
    var checkFlag = "!EngineeringSciences" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("EngineeringSciences", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "EngineeringSciences" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("EngineeringSciences", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "EngineeringSciences" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.COMPclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("COMP");
    var checkFlag = "!COMP" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("COMP", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "COMP" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("COMP", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "COMP" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.PROGclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("PROG");
    var checkFlag = "!PROG" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("PROG", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "PROG" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("PROG", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "PROG" + planName + "flag";
        eval(flagName + " = false");
    }
}
$scope.ITSclickListener = function() {
    var planName = $scope.selectedPlan;
    var pressedbtn = document.getElementById("ITS");
    var checkFlag = "!ITS" + planName + "flag";
    var flagBool = eval(checkFlag);
    if (flagBool) {
        that.highlightCategory("ITS", planName);
        pressedbtn.classList.remove("legendbutton");
        pressedbtn.classList.add("legendbutton-pressed");
        var addClick = "that." + planName + "LegendBtnsClicked.push(pressedbtn)";
        eval(addClick);
        var flagName = "ITS" + planName + "flag";
        eval(flagName + " = true");
    }
    else {
        that.unhighlightCategory("ITS", planName);
        pressedbtn.classList.remove("legendbutton-pressed");
        pressedbtn.classList.add("legendbutton");
        var findIndex = "var index = that." + planName + "LegendBtnsClicked.findIndex((element) => element[0] == pressedbtn)";
        eval(findIndex);
        var removeClick = "that." + planName + "LegendBtnsClicked.splice(index, 1)";
        eval(removeClick);
        var flagName = "ITS" + planName + "flag";
        eval(flagName + " = false");
    }
}
this.highlightCategory = function(categoryName, planName) {
switch(categoryName) { 
  case "NaturalSciences":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("CHEM103TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CHEM103TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CHEM103TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CHEM103TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM103TraditionalPlan", categoryName);
 var element = document.getElementById("ENGG130TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGG130TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGG130TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGG130TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG130TraditionalPlan", categoryName);
 var element = document.getElementById("PHYS130TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("PHYS130TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("PHYS130TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("PHYS130TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS130TraditionalPlan", categoryName);
 var element = document.getElementById("CHEM105TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CHEM105TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CHEM105TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CHEM105TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM105TraditionalPlan", categoryName);
 var element = document.getElementById("ENCMP100TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENCMP100TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENCMP100TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENCMP100TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENCMP100TraditionalPlan", categoryName);
 var element = document.getElementById("ENPH131TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENPH131TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENPH131TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENPH131TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENPH131TraditionalPlan", categoryName);
 var element = document.getElementById("PHYS230TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("PHYS230TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("PHYS230TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("PHYS230TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS230TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("CHEM103CoopPlan");
                            if (this.CoopPlanClickedMap.get("CHEM103CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CHEM103CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CHEM103CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM103CoopPlan", categoryName);
 var element = document.getElementById("ENGG130CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGG130CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGG130CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGG130CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG130CoopPlan", categoryName);
 var element = document.getElementById("PHYS130CoopPlan");
                            if (this.CoopPlanClickedMap.get("PHYS130CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("PHYS130CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("PHYS130CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS130CoopPlan", categoryName);
 var element = document.getElementById("CHEM105CoopPlan");
                            if (this.CoopPlanClickedMap.get("CHEM105CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CHEM105CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CHEM105CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM105CoopPlan", categoryName);
 var element = document.getElementById("ENCMP100CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENCMP100CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENCMP100CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENCMP100CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENCMP100CoopPlan", categoryName);
 var element = document.getElementById("ENPH131CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENPH131CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENPH131CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENPH131CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENPH131CoopPlan", categoryName);
 var element = document.getElementById("PHYS230CoopPlan");
                            if (this.CoopPlanClickedMap.get("PHYS230CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("PHYS230CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("PHYS230CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS230CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("CHEM103NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CHEM103NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CHEM103NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CHEM103NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM103NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENGG130NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGG130NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGG130NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGG130NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG130NanoTraditionalPlan", categoryName);
 var element = document.getElementById("PHYS130NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("PHYS130NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("PHYS130NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("PHYS130NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS130NanoTraditionalPlan", categoryName);
 var element = document.getElementById("CHEM105NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CHEM105NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CHEM105NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CHEM105NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM105NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENCMP100NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENCMP100NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENCMP100NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENCMP100NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENCMP100NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENPH131NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENPH131NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENPH131NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENPH131NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENPH131NanoTraditionalPlan", categoryName);
 var element = document.getElementById("PHYS230NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("PHYS230NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("PHYS230NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("PHYS230NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS230NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("CHEM103NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CHEM103NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CHEM103NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CHEM103NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM103NanoCoopPlan", categoryName);
 var element = document.getElementById("ENGG130NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGG130NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGG130NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGG130NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG130NanoCoopPlan", categoryName);
 var element = document.getElementById("PHYS130NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("PHYS130NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("PHYS130NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("PHYS130NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS130NanoCoopPlan", categoryName);
 var element = document.getElementById("CHEM105NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CHEM105NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CHEM105NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CHEM105NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM105NanoCoopPlan", categoryName);
 var element = document.getElementById("ENCMP100NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENCMP100NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENCMP100NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENCMP100NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENCMP100NanoCoopPlan", categoryName);
 var element = document.getElementById("ENPH131NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENPH131NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENPH131NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENPH131NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENPH131NanoCoopPlan", categoryName);
 var element = document.getElementById("PHYS230NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("PHYS230NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("PHYS230NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("PHYS230NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS230NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("CHEM103SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CHEM103SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CHEM103SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CHEM103SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM103SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENGG130SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGG130SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGG130SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGG130SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG130SoftwareCoopPlan", categoryName);
 var element = document.getElementById("PHYS130SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("PHYS130SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("PHYS130SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("PHYS130SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS130SoftwareCoopPlan", categoryName);
 var element = document.getElementById("CHEM105SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CHEM105SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CHEM105SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CHEM105SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CHEM105SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENCMP100SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENCMP100SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENCMP100SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENCMP100SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENCMP100SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENPH131SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENPH131SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENPH131SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENPH131SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENPH131SoftwareCoopPlan", categoryName);
 var element = document.getElementById("PHYS230SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("PHYS230SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("PHYS230SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("PHYS230SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("PHYS230SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "EngineeringProfession":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("ENGG100TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGG100TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGG100TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGG100TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG100TraditionalPlan", categoryName);
 var element = document.getElementById("ENGG404TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGG404TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGG404TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGG404TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG404TraditionalPlan", categoryName);
 var element = document.getElementById("ENGG400TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGG400TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGG400TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGG400TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG400TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("ENGG100CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGG100CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGG100CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGG100CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG100CoopPlan", categoryName);
 var element = document.getElementById("ENGG299CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGG299CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGG299CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGG299CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG299CoopPlan", categoryName);
 var element = document.getElementById("WKEXP901CoopPlan");
                            if (this.CoopPlanClickedMap.get("WKEXP901CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("WKEXP901CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("WKEXP901CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP901CoopPlan", categoryName);
 var element = document.getElementById("WKEXP902CoopPlan");
                            if (this.CoopPlanClickedMap.get("WKEXP902CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("WKEXP902CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("WKEXP902CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP902CoopPlan", categoryName);
 var element = document.getElementById("WKEXP903CoopPlan");
                            if (this.CoopPlanClickedMap.get("WKEXP903CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("WKEXP903CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("WKEXP903CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP903CoopPlan", categoryName);
 var element = document.getElementById("WKEXP904CoopPlan");
                            if (this.CoopPlanClickedMap.get("WKEXP904CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("WKEXP904CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("WKEXP904CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP904CoopPlan", categoryName);
 var element = document.getElementById("WKEXP905CoopPlan");
                            if (this.CoopPlanClickedMap.get("WKEXP905CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("WKEXP905CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("WKEXP905CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP905CoopPlan", categoryName);
 var element = document.getElementById("ENGG400CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGG400CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGG400CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGG400CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG400CoopPlan", categoryName);
 var element = document.getElementById("ENGG404CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGG404CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGG404CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGG404CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG404CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("ENGG100NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGG100NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGG100NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGG100NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG100NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENGG404NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGG404NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGG404NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGG404NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG404NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENGG400NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGG400NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGG400NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGG400NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG400NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("ENGG100NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGG100NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGG100NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGG100NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG100NanoCoopPlan", categoryName);
 var element = document.getElementById("ENGG299NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGG299NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGG299NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGG299NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG299NanoCoopPlan", categoryName);
 var element = document.getElementById("WKEXP901NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("WKEXP901NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("WKEXP901NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("WKEXP901NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP901NanoCoopPlan", categoryName);
 var element = document.getElementById("WKEXP902NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("WKEXP902NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("WKEXP902NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("WKEXP902NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP902NanoCoopPlan", categoryName);
 var element = document.getElementById("WKEXP903NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("WKEXP903NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("WKEXP903NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("WKEXP903NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP903NanoCoopPlan", categoryName);
 var element = document.getElementById("ENGG404NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGG404NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGG404NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGG404NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG404NanoCoopPlan", categoryName);
 var element = document.getElementById("WKEXP904NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("WKEXP904NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("WKEXP904NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("WKEXP904NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP904NanoCoopPlan", categoryName);
 var element = document.getElementById("WKEXP905NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("WKEXP905NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("WKEXP905NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("WKEXP905NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP905NanoCoopPlan", categoryName);
 var element = document.getElementById("ENGG400NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGG400NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGG400NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGG400NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG400NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("ENGG100SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGG100SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGG100SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGG100SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG100SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENGG299SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGG299SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGG299SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGG299SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG299SoftwareCoopPlan", categoryName);
 var element = document.getElementById("WKEXP901SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("WKEXP901SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("WKEXP901SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("WKEXP901SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP901SoftwareCoopPlan", categoryName);
 var element = document.getElementById("WKEXP902SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("WKEXP902SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("WKEXP902SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("WKEXP902SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP902SoftwareCoopPlan", categoryName);
 var element = document.getElementById("WKEXP903SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("WKEXP903SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("WKEXP903SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("WKEXP903SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP903SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENGG404SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGG404SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGG404SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGG404SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG404SoftwareCoopPlan", categoryName);
 var element = document.getElementById("WKEXP904SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("WKEXP904SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("WKEXP904SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("WKEXP904SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP904SoftwareCoopPlan", categoryName);
 var element = document.getElementById("WKEXP905SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("WKEXP905SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("WKEXP905SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("WKEXP905SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("WKEXP905SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENGG400SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGG400SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGG400SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGG400SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG400SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "Other":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("ENGL199TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGL199TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGL199TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGL199TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGL199TraditionalPlan", categoryName);
 var element = document.getElementById("ENGM310TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGM310TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGM310TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGM310TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM310TraditionalPlan", categoryName);
 var element = document.getElementById("ENGM401TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGM401TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGM401TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGM401TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM401TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("ENGL199CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGL199CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGL199CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGL199CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGL199CoopPlan", categoryName);
 var element = document.getElementById("ENGM310CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGM310CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGM310CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGM310CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM310CoopPlan", categoryName);
 var element = document.getElementById("ENGM401CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGM401CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGM401CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGM401CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM401CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("ENGL199NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGL199NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGL199NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGL199NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGL199NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENGM310NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGM310NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGM310NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGM310NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM310NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ENGM401NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGM401NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGM401NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGM401NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM401NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("ENGL199NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGL199NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGL199NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGL199NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGL199NanoCoopPlan", categoryName);
 var element = document.getElementById("ENGM310NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGM310NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGM310NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGM310NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM310NanoCoopPlan", categoryName);
 var element = document.getElementById("ENGM401NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGM401NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGM401NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGM401NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM401NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("ENGL199SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGL199SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGL199SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGL199SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGL199SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENGM310SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGM310SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGM310SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGM310SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM310SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ENGM401SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGM401SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGM401SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGM401SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGM401SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "Math":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("MATH100TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("MATH100TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("MATH100TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("MATH100TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH100TraditionalPlan", categoryName);
 var element = document.getElementById("MATH101TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("MATH101TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("MATH101TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("MATH101TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH101TraditionalPlan", categoryName);
 var element = document.getElementById("MATH102TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("MATH102TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("MATH102TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("MATH102TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH102TraditionalPlan", categoryName);
 var element = document.getElementById("MATH201TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("MATH201TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("MATH201TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("MATH201TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH201TraditionalPlan", categoryName);
 var element = document.getElementById("MATH209TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("MATH209TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("MATH209TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("MATH209TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH209TraditionalPlan", categoryName);
 var element = document.getElementById("ECE342TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE342TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE342TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE342TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE342TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("MATH100CoopPlan");
                            if (this.CoopPlanClickedMap.get("MATH100CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("MATH100CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("MATH100CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH100CoopPlan", categoryName);
 var element = document.getElementById("MATH101CoopPlan");
                            if (this.CoopPlanClickedMap.get("MATH101CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("MATH101CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("MATH101CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH101CoopPlan", categoryName);
 var element = document.getElementById("MATH102CoopPlan");
                            if (this.CoopPlanClickedMap.get("MATH102CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("MATH102CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("MATH102CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH102CoopPlan", categoryName);
 var element = document.getElementById("MATH201CoopPlan");
                            if (this.CoopPlanClickedMap.get("MATH201CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("MATH201CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("MATH201CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH201CoopPlan", categoryName);
 var element = document.getElementById("MATH209CoopPlan");
                            if (this.CoopPlanClickedMap.get("MATH209CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("MATH209CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("MATH209CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH209CoopPlan", categoryName);
 var element = document.getElementById("ECE342CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE342CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE342CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE342CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE342CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("MATH100NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("MATH100NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("MATH100NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("MATH100NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH100NanoTraditionalPlan", categoryName);
 var element = document.getElementById("MATH101NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("MATH101NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("MATH101NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("MATH101NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH101NanoTraditionalPlan", categoryName);
 var element = document.getElementById("MATH102NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("MATH102NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("MATH102NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("MATH102NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH102NanoTraditionalPlan", categoryName);
 var element = document.getElementById("MATH201NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("MATH201NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("MATH201NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("MATH201NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH201NanoTraditionalPlan", categoryName);
 var element = document.getElementById("MATH209NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("MATH209NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("MATH209NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("MATH209NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH209NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE342NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE342NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE342NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE342NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE342NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("MATH100NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("MATH100NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("MATH100NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("MATH100NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH100NanoCoopPlan", categoryName);
 var element = document.getElementById("MATH101NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("MATH101NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("MATH101NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("MATH101NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH101NanoCoopPlan", categoryName);
 var element = document.getElementById("MATH102NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("MATH102NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("MATH102NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("MATH102NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH102NanoCoopPlan", categoryName);
 var element = document.getElementById("MATH201NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("MATH201NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("MATH201NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("MATH201NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH201NanoCoopPlan", categoryName);
 var element = document.getElementById("MATH209NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("MATH209NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("MATH209NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("MATH209NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH209NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE342NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE342NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE342NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE342NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE342NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("MATH100SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("MATH100SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("MATH100SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("MATH100SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH100SoftwareCoopPlan", categoryName);
 var element = document.getElementById("MATH101SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("MATH101SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("MATH101SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("MATH101SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH101SoftwareCoopPlan", categoryName);
 var element = document.getElementById("MATH102SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("MATH102SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("MATH102SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("MATH102SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH102SoftwareCoopPlan", categoryName);
 var element = document.getElementById("MATH201SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("MATH201SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("MATH201SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("MATH201SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH201SoftwareCoopPlan", categoryName);
 var element = document.getElementById("MATH209SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("MATH209SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("MATH209SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("MATH209SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("MATH209SoftwareCoopPlan", categoryName);
 var element = document.getElementById("STAT235SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("STAT235SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("STAT235SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("STAT235SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("STAT235SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "EngineeringDesign":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("ENGG160TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ENGG160TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ENGG160TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ENGG160TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG160TraditionalPlan", categoryName);
 var element = document.getElementById("ECE325TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE325TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE325TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE325TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE325TraditionalPlan", categoryName);
 var element = document.getElementById("ECE410TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE410TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE410TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE410TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE410TraditionalPlan", categoryName);
 var element = document.getElementById("ECE492TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE492TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE492TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE492TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE492TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("ENGG160CoopPlan");
                            if (this.CoopPlanClickedMap.get("ENGG160CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ENGG160CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ENGG160CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG160CoopPlan", categoryName);
 var element = document.getElementById("ECE325CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE325CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE325CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE325CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE325CoopPlan", categoryName);
 var element = document.getElementById("ECE410CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE410CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE410CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE410CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE410CoopPlan", categoryName);
 var element = document.getElementById("ECE492CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE492CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE492CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE492CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE492CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("ENGG160NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ENGG160NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ENGG160NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ENGG160NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG160NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE325NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE325NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE325NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE325NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE325NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE410NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE410NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE410NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE410NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE410NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE492NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE492NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE492NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE492NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE492NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("ENGG160NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ENGG160NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ENGG160NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ENGG160NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG160NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE325NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE325NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE325NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE325NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE325NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE410NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE410NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE410NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE410NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE410NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE492NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE492NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE492NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE492NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE492NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("ENGG160SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ENGG160SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ENGG160SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ENGG160SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ENGG160SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE325SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE325SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE325SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE325SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE325SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "ComputingScience":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("CMPUT274TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CMPUT274TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CMPUT274TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CMPUT274TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT274TraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT272TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CMPUT272TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CMPUT272TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CMPUT272TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT272TraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT275TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CMPUT275TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CMPUT275TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CMPUT275TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT275TraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT291TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CMPUT291TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CMPUT291TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CMPUT291TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT291TraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT379TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CMPUT379TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CMPUT379TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CMPUT379TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT379TraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT301TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("CMPUT301TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("CMPUT301TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("CMPUT301TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT301TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("CMPUT274CoopPlan");
                            if (this.CoopPlanClickedMap.get("CMPUT274CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CMPUT274CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CMPUT274CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT274CoopPlan", categoryName);
 var element = document.getElementById("CMPUT272CoopPlan");
                            if (this.CoopPlanClickedMap.get("CMPUT272CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CMPUT272CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CMPUT272CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT272CoopPlan", categoryName);
 var element = document.getElementById("CMPUT275CoopPlan");
                            if (this.CoopPlanClickedMap.get("CMPUT275CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CMPUT275CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CMPUT275CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT275CoopPlan", categoryName);
 var element = document.getElementById("CMPUT291CoopPlan");
                            if (this.CoopPlanClickedMap.get("CMPUT291CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CMPUT291CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CMPUT291CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT291CoopPlan", categoryName);
 var element = document.getElementById("CMPUT379CoopPlan");
                            if (this.CoopPlanClickedMap.get("CMPUT379CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CMPUT379CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CMPUT379CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT379CoopPlan", categoryName);
 var element = document.getElementById("CMPUT301CoopPlan");
                            if (this.CoopPlanClickedMap.get("CMPUT301CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("CMPUT301CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("CMPUT301CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT301CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("CMPUT274NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CMPUT274NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CMPUT274NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CMPUT274NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT274NanoTraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT272NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CMPUT272NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CMPUT272NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CMPUT272NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT272NanoTraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT275NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CMPUT275NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CMPUT275NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CMPUT275NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT275NanoTraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT291NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CMPUT291NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CMPUT291NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CMPUT291NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT291NanoTraditionalPlan", categoryName);
 var element = document.getElementById("CMPUT301NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("CMPUT301NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("CMPUT301NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("CMPUT301NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT301NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("CMPUT274NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CMPUT274NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CMPUT274NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CMPUT274NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT274NanoCoopPlan", categoryName);
 var element = document.getElementById("CMPUT272NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CMPUT272NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CMPUT272NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CMPUT272NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT272NanoCoopPlan", categoryName);
 var element = document.getElementById("CMPUT275NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CMPUT275NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CMPUT275NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CMPUT275NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT275NanoCoopPlan", categoryName);
 var element = document.getElementById("CMPUT291NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CMPUT291NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CMPUT291NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CMPUT291NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT291NanoCoopPlan", categoryName);
 var element = document.getElementById("CMPUT301NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("CMPUT301NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("CMPUT301NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("CMPUT301NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT301NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("CMPUT274SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CMPUT274SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CMPUT274SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CMPUT274SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT274SoftwareCoopPlan", categoryName);
 var element = document.getElementById("CMPUT272SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CMPUT272SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CMPUT272SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CMPUT272SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT272SoftwareCoopPlan", categoryName);
 var element = document.getElementById("CMPUT275SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CMPUT275SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CMPUT275SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CMPUT275SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT275SoftwareCoopPlan", categoryName);
 var element = document.getElementById("CMPUT291SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CMPUT291SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CMPUT291SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CMPUT291SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT291SoftwareCoopPlan", categoryName);
 var element = document.getElementById("CMPUT301SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CMPUT301SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CMPUT301SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CMPUT301SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT301SoftwareCoopPlan", categoryName);
 var element = document.getElementById("CMPUT379SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("CMPUT379SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("CMPUT379SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("CMPUT379SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("CMPUT379SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "EngineeringSciences":
    switch(planName) {
      case "TraditionalPlan":
 var element = document.getElementById("ECE202TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE202TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE202TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE202TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE202TraditionalPlan", categoryName);
 var element = document.getElementById("ECE210TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE210TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE210TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE210TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE210TraditionalPlan", categoryName);
 var element = document.getElementById("ECE203TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE203TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE203TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE203TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE203TraditionalPlan", categoryName);
 var element = document.getElementById("ECE212TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE212TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE212TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE212TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE212TraditionalPlan", categoryName);
 var element = document.getElementById("ECE240TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE240TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE240TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE240TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE240TraditionalPlan", categoryName);
 var element = document.getElementById("ECE302TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE302TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE302TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE302TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE302TraditionalPlan", categoryName);
 var element = document.getElementById("ECE311TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE311TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE311TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE311TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE311TraditionalPlan", categoryName);
 var element = document.getElementById("ECE340TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE340TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE340TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE340TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE340TraditionalPlan", categoryName);
 var element = document.getElementById("ECE315TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE315TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE315TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE315TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE315TraditionalPlan", categoryName);
 var element = document.getElementById("ECE304TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE304TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE304TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE304TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE304TraditionalPlan", categoryName);
 var element = document.getElementById("ECE420TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE420TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE420TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE420TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE420TraditionalPlan", categoryName);
 var element = document.getElementById("ECE487TraditionalPlan");
                            if (this.TraditionalPlanClickedMap.get("ECE487TraditionalPlan").length > 0) {
                                var mapLen = this.TraditionalPlanClickedMap.get("ECE487TraditionalPlan").length - 1
                                var prevCate = this.TraditionalPlanClickedMap.get("ECE487TraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE487TraditionalPlan", categoryName);
       break;
      case "CoopPlan":
 var element = document.getElementById("ECE202CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE202CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE202CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE202CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE202CoopPlan", categoryName);
 var element = document.getElementById("ECE210CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE210CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE210CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE210CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE210CoopPlan", categoryName);
 var element = document.getElementById("ECE203CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE203CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE203CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE203CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE203CoopPlan", categoryName);
 var element = document.getElementById("ECE212CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE212CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE212CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE212CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE212CoopPlan", categoryName);
 var element = document.getElementById("ECE240CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE240CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE240CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE240CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE240CoopPlan", categoryName);
 var element = document.getElementById("ECE302CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE302CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE302CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE302CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE302CoopPlan", categoryName);
 var element = document.getElementById("ECE311CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE311CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE311CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE311CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE311CoopPlan", categoryName);
 var element = document.getElementById("ECE340CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE340CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE340CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE340CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE340CoopPlan", categoryName);
 var element = document.getElementById("ECE304CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE304CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE304CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE304CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE304CoopPlan", categoryName);
 var element = document.getElementById("ECE315CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE315CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE315CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE315CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE315CoopPlan", categoryName);
 var element = document.getElementById("ECE420CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE420CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE420CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE420CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE420CoopPlan", categoryName);
 var element = document.getElementById("ECE487CoopPlan");
                            if (this.CoopPlanClickedMap.get("ECE487CoopPlan").length > 0) {
                                var mapLen = this.CoopPlanClickedMap.get("ECE487CoopPlan").length - 1
                                var prevCate = this.CoopPlanClickedMap.get("ECE487CoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE487CoopPlan", categoryName);
       break;
      case "NanoTraditionalPlan":
 var element = document.getElementById("ECE202NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE202NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE202NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE202NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE202NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE210NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE210NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE210NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE210NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE210NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE203NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE203NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE203NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE203NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE203NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE212NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE212NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE212NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE212NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE212NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE240NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE240NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE240NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE240NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE240NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE302NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE302NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE302NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE302NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE302NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE311NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE311NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE311NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE311NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE311NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE315NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE315NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE315NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE315NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE315NanoTraditionalPlan", categoryName);
 var element = document.getElementById("ECE304NanoTraditionalPlan");
                            if (this.NanoTraditionalPlanClickedMap.get("ECE304NanoTraditionalPlan").length > 0) {
                                var mapLen = this.NanoTraditionalPlanClickedMap.get("ECE304NanoTraditionalPlan").length - 1
                                var prevCate = this.NanoTraditionalPlanClickedMap.get("ECE304NanoTraditionalPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE304NanoTraditionalPlan", categoryName);
       break;
      case "NanoCoopPlan":
 var element = document.getElementById("ECE202NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE202NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE202NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE202NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE202NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE210NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE210NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE210NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE210NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE210NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE203NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE203NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE203NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE203NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE203NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE212NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE212NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE212NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE212NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE212NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE240NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE240NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE240NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE240NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE240NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE302NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE302NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE302NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE302NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE302NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE311NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE311NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE311NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE311NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE311NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE304NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE304NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE304NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE304NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE304NanoCoopPlan", categoryName);
 var element = document.getElementById("ECE315NanoCoopPlan");
                            if (this.NanoCoopPlanClickedMap.get("ECE315NanoCoopPlan").length > 0) {
                                var mapLen = this.NanoCoopPlanClickedMap.get("ECE315NanoCoopPlan").length - 1
                                var prevCate = this.NanoCoopPlanClickedMap.get("ECE315NanoCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE315NanoCoopPlan", categoryName);
       break;
      case "SoftwareCoopPlan":
 var element = document.getElementById("ECE202SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE202SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE202SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE202SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE202SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE210SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE210SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE210SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE210SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE210SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE212SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE212SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE212SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE212SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE212SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE240SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE240SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE240SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE240SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE240SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE311SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE311SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE311SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE311SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE311SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE315SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE315SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE315SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE315SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE315SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE487SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE487SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE487SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE487SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE487SoftwareCoopPlan", categoryName);
 var element = document.getElementById("ECE420SoftwareCoopPlan");
                            if (this.SoftwareCoopPlanClickedMap.get("ECE420SoftwareCoopPlan").length > 0) {
                                var mapLen = this.SoftwareCoopPlanClickedMap.get("ECE420SoftwareCoopPlan").length - 1
                                var prevCate = this.SoftwareCoopPlanClickedMap.get("ECE420SoftwareCoopPlan")[mapLen];
                                this.unHighlightElement(element, prevCate);
                            }
                            this.highlightElement(element, categoryName);
                            this.addToClicked("ECE420SoftwareCoopPlan", categoryName);
       break;
       }
      break;
  case "COMP":
  case "ComplementaryElective":
    switch(planName) {
      case "TraditionalPlan":
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "CoopPlan":
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "NanoTraditionalPlan":
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "NanoCoopPlan":
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "SoftwareCoopPlan":
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP");
        var i = 0;
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ComplementaryElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
       }
      break;
  case "PROG":
  case "ProgramTechnicalElective":
    switch(planName) {
      case "TraditionalPlan":
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "CoopPlan":
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "NanoTraditionalPlan":
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "NanoCoopPlan":
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "SoftwareCoopPlan":
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG");
        var i = 0;
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
       }
      break;
  case "ITS":
    switch(planName) {
      case "TraditionalPlan":
        var ITSelements = document.getElementsByClassName("ITS");
        var i = 0;
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          if (this.TraditionalPlanClickedMap.get("ITSElectiveTraditionalPlan" + i).length > 0) {
                var mapLen = this.TraditionalPlanClickedMap.get("ITSElectiveTraditionalPlan" + i).length - 1
                var prevCate = this.TraditionalPlanClickedMap.get("ITSElectiveTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ITSElectiveTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "CoopPlan":
        var ITSelements = document.getElementsByClassName("ITS");
        var i = 0;
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          if (this.CoopPlanClickedMap.get("ITSElectiveCoopPlan" + i).length > 0) {
                var mapLen = this.CoopPlanClickedMap.get("ITSElectiveCoopPlan" + i).length - 1
                var prevCate = this.CoopPlanClickedMap.get("ITSElectiveCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ITSElectiveCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "NanoTraditionalPlan":
        var ITSelements = document.getElementsByClassName("ITS");
        var i = 0;
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          if (this.NanoTraditionalPlanClickedMap.get("ITSElectiveNanoTraditionalPlan" + i).length > 0) {
                var mapLen = this.NanoTraditionalPlanClickedMap.get("ITSElectiveNanoTraditionalPlan" + i).length - 1
                var prevCate = this.NanoTraditionalPlanClickedMap.get("ITSElectiveNanoTraditionalPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ITSElectiveNanoTraditionalPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "NanoCoopPlan":
        var ITSelements = document.getElementsByClassName("ITS");
        var i = 0;
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          if (this.NanoCoopPlanClickedMap.get("ITSElectiveNanoCoopPlan" + i).length > 0) {
                var mapLen = this.NanoCoopPlanClickedMap.get("ITSElectiveNanoCoopPlan" + i).length - 1
                var prevCate = this.NanoCoopPlanClickedMap.get("ITSElectiveNanoCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ITSElectiveNanoCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
      case "SoftwareCoopPlan":
        var ITSelements = document.getElementsByClassName("ITS");
        var i = 0;
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          if (this.SoftwareCoopPlanClickedMap.get("ITSElectiveSoftwareCoopPlan" + i).length > 0) {
                var mapLen = this.SoftwareCoopPlanClickedMap.get("ITSElectiveSoftwareCoopPlan" + i).length - 1
                var prevCate = this.SoftwareCoopPlanClickedMap.get("ITSElectiveSoftwareCoopPlan" + i)[mapLen];
                this.unHighlightElement(currelement, prevCate);
          }
          this.highlightElement(currelement, categoryName);
          this.addToClicked("ITSElectiveSoftwareCoopPlan" + i, categoryName);
          i = i + 1;
        }
       break;
       }
      break;
break;   default:
    console.log("shouldn't be here");
    }
};
this.unhighlightCategory = function(categoryName, planName) {
switch(categoryName) { 
  case "NaturalSciences":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("CHEM103TraditionalPlan");
                            var prevCate = this.removeFromClicked("CHEM103TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG130TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG130TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS130TraditionalPlan");
                            var prevCate = this.removeFromClicked("PHYS130TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CHEM105TraditionalPlan");
                            var prevCate = this.removeFromClicked("CHEM105TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENCMP100TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENCMP100TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENPH131TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENPH131TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS230TraditionalPlan");
                            var prevCate = this.removeFromClicked("PHYS230TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("CHEM103CoopPlan");
                            var prevCate = this.removeFromClicked("CHEM103CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG130CoopPlan");
                            var prevCate = this.removeFromClicked("ENGG130CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS130CoopPlan");
                            var prevCate = this.removeFromClicked("PHYS130CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CHEM105CoopPlan");
                            var prevCate = this.removeFromClicked("CHEM105CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENCMP100CoopPlan");
                            var prevCate = this.removeFromClicked("ENCMP100CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENPH131CoopPlan");
                            var prevCate = this.removeFromClicked("ENPH131CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS230CoopPlan");
                            var prevCate = this.removeFromClicked("PHYS230CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("CHEM103NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CHEM103NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG130NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG130NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS130NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("PHYS130NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CHEM105NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CHEM105NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENCMP100NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENCMP100NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENPH131NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENPH131NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS230NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("PHYS230NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("CHEM103NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CHEM103NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG130NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG130NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS130NanoCoopPlan");
                            var prevCate = this.removeFromClicked("PHYS130NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CHEM105NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CHEM105NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENCMP100NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENCMP100NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENPH131NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENPH131NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS230NanoCoopPlan");
                            var prevCate = this.removeFromClicked("PHYS230NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("CHEM103SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CHEM103SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG130SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG130SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS130SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("PHYS130SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CHEM105SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CHEM105SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENCMP100SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENCMP100SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENPH131SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENPH131SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("PHYS230SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("PHYS230SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "EngineeringProfession":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("ENGG100TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG100TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG404TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG404TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG400TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG400TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("ENGG100CoopPlan");
                            var prevCate = this.removeFromClicked("ENGG100CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG299CoopPlan");
                            var prevCate = this.removeFromClicked("ENGG299CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP901CoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP901CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP902CoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP902CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP903CoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP903CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP904CoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP904CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP905CoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP905CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG400CoopPlan");
                            var prevCate = this.removeFromClicked("ENGG400CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG404CoopPlan");
                            var prevCate = this.removeFromClicked("ENGG404CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("ENGG100NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG100NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG404NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG404NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG400NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG400NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("ENGG100NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG100NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG299NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG299NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP901NanoCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP901NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP902NanoCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP902NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP903NanoCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP903NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG404NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG404NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP904NanoCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP904NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP905NanoCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP905NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG400NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG400NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("ENGG100SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG100SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG299SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG299SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP901SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP901SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP902SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP902SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP903SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP903SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG404SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG404SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP904SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP904SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("WKEXP905SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("WKEXP905SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGG400SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG400SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "Other":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("ENGL199TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGL199TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM310TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGM310TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM401TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGM401TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("ENGL199CoopPlan");
                            var prevCate = this.removeFromClicked("ENGL199CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM310CoopPlan");
                            var prevCate = this.removeFromClicked("ENGM310CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM401CoopPlan");
                            var prevCate = this.removeFromClicked("ENGM401CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("ENGL199NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGL199NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM310NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGM310NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM401NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGM401NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("ENGL199NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGL199NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM310NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGM310NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM401NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGM401NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("ENGL199SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGL199SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM310SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGM310SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ENGM401SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGM401SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "Math":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("MATH100TraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH100TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH101TraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH101TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH102TraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH102TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH201TraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH201TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH209TraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH209TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE342TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE342TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("MATH100CoopPlan");
                            var prevCate = this.removeFromClicked("MATH100CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH101CoopPlan");
                            var prevCate = this.removeFromClicked("MATH101CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH102CoopPlan");
                            var prevCate = this.removeFromClicked("MATH102CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH201CoopPlan");
                            var prevCate = this.removeFromClicked("MATH201CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH209CoopPlan");
                            var prevCate = this.removeFromClicked("MATH209CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE342CoopPlan");
                            var prevCate = this.removeFromClicked("ECE342CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("MATH100NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH100NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH101NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH101NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH102NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH102NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH201NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH201NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH209NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("MATH209NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE342NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE342NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("MATH100NanoCoopPlan");
                            var prevCate = this.removeFromClicked("MATH100NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH101NanoCoopPlan");
                            var prevCate = this.removeFromClicked("MATH101NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH102NanoCoopPlan");
                            var prevCate = this.removeFromClicked("MATH102NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH201NanoCoopPlan");
                            var prevCate = this.removeFromClicked("MATH201NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH209NanoCoopPlan");
                            var prevCate = this.removeFromClicked("MATH209NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE342NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE342NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("MATH100SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("MATH100SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH101SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("MATH101SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH102SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("MATH102SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH201SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("MATH201SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("MATH209SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("MATH209SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("STAT235SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("STAT235SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "EngineeringDesign":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("ENGG160TraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG160TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE325TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE325TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE410TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE410TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE492TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE492TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("ENGG160CoopPlan");
                            var prevCate = this.removeFromClicked("ENGG160CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE325CoopPlan");
                            var prevCate = this.removeFromClicked("ECE325CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE410CoopPlan");
                            var prevCate = this.removeFromClicked("ECE410CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE492CoopPlan");
                            var prevCate = this.removeFromClicked("ECE492CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("ENGG160NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ENGG160NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE325NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE325NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE410NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE410NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE492NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE492NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("ENGG160NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG160NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE325NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE325NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE410NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE410NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE492NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE492NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("ENGG160SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ENGG160SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE325SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE325SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "ComputingScience":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("CMPUT274TraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT274TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT272TraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT272TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT275TraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT275TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT291TraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT291TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT379TraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT379TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT301TraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT301TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("CMPUT274CoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT274CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT272CoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT272CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT275CoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT275CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT291CoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT291CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT379CoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT379CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT301CoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT301CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("CMPUT274NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT274NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT272NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT272NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT275NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT275NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT291NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT291NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT301NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("CMPUT301NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("CMPUT274NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT274NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT272NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT272NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT275NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT275NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT291NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT291NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT301NanoCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT301NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("CMPUT274SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT274SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT272SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT272SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT275SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT275SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT291SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT291SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT301SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT301SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("CMPUT379SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("CMPUT379SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "EngineeringSciences":
    switch(planName) {
      case "TraditionalPlan":
     var element = document.getElementById("ECE202TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE202TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE210TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE210TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE203TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE203TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE212TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE212TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE240TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE240TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE302TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE302TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE311TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE311TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE340TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE340TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE315TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE315TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE304TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE304TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE420TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE420TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE487TraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE487TraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "CoopPlan":
     var element = document.getElementById("ECE202CoopPlan");
                            var prevCate = this.removeFromClicked("ECE202CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE210CoopPlan");
                            var prevCate = this.removeFromClicked("ECE210CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE203CoopPlan");
                            var prevCate = this.removeFromClicked("ECE203CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE212CoopPlan");
                            var prevCate = this.removeFromClicked("ECE212CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE240CoopPlan");
                            var prevCate = this.removeFromClicked("ECE240CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE302CoopPlan");
                            var prevCate = this.removeFromClicked("ECE302CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE311CoopPlan");
                            var prevCate = this.removeFromClicked("ECE311CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE340CoopPlan");
                            var prevCate = this.removeFromClicked("ECE340CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE304CoopPlan");
                            var prevCate = this.removeFromClicked("ECE304CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE315CoopPlan");
                            var prevCate = this.removeFromClicked("ECE315CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE420CoopPlan");
                            var prevCate = this.removeFromClicked("ECE420CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE487CoopPlan");
                            var prevCate = this.removeFromClicked("ECE487CoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoTraditionalPlan":
     var element = document.getElementById("ECE202NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE202NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE210NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE210NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE203NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE203NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE212NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE212NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE240NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE240NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE302NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE302NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE311NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE311NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE315NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE315NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE304NanoTraditionalPlan");
                            var prevCate = this.removeFromClicked("ECE304NanoTraditionalPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "NanoCoopPlan":
     var element = document.getElementById("ECE202NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE202NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE210NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE210NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE203NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE203NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE212NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE212NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE240NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE240NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE302NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE302NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE311NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE311NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE304NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE304NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE315NanoCoopPlan");
                            var prevCate = this.removeFromClicked("ECE315NanoCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
      case "SoftwareCoopPlan":
     var element = document.getElementById("ECE202SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE202SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE210SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE210SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE212SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE212SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE240SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE240SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE311SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE311SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE315SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE315SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE487SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE487SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
     var element = document.getElementById("ECE420SoftwareCoopPlan");
                            var prevCate = this.removeFromClicked("ECE420SoftwareCoopPlan", categoryName);
                                if (element.classList.contains(categoryName+"-highlighted")) {
                                    this.unHighlightElement(element, categoryName);
                                    if (prevCate != "") {
                                        this.highlightElement(element, prevCate);
                                    }
                                }
       break;
       }
      break;
  case "COMP":
  case "ComplementaryElective":
    switch(planName) {
      case "TraditionalPlan":
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveTraditionalPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveTraditionalPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "CoopPlan":
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveCoopPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveCoopPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "NanoTraditionalPlan":
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveNanoTraditionalPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveNanoTraditionalPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "NanoCoopPlan":
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveNanoCoopPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveNanoCoopPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "SoftwareCoopPlan":
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveSoftwareCoopPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var COMPelements = document.getElementsByClassName("COMP-highlighted");
        var i = 0;        
        while (COMPelements.length > 0) {
          var currelement = document.getElementById(COMPelements.item(0).id);
          var prevCate = this.removeFromClicked("ComplementaryElectiveSoftwareCoopPlan" + i, "COMP");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
       }
      break;
  case "PROG":
  case "ProgramTechnicalElective":
    switch(planName) {
      case "TraditionalPlan":
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "CoopPlan":
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "NanoTraditionalPlan":
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "NanoCoopPlan":
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "SoftwareCoopPlan":
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
        var PROGelements = document.getElementsByClassName("PROG-highlighted");
        var i = 0;        
        while (PROGelements.length > 0) {
          var currelement = document.getElementById(PROGelements.item(0).id);
          var prevCate = this.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan" + i, "PROG");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
       }
      break;
  case "ITS":
    switch(planName) {
      case "TraditionalPlan":
        var ITSelements = document.getElementsByClassName("ITS-highlighted");
        var i = 0;        
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          var prevCate = this.removeFromClicked("ITSElectiveTraditionalPlan" + i, "ITS");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "CoopPlan":
        var ITSelements = document.getElementsByClassName("ITS-highlighted");
        var i = 0;        
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          var prevCate = this.removeFromClicked("ITSElectiveCoopPlan" + i, "ITS");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "NanoTraditionalPlan":
        var ITSelements = document.getElementsByClassName("ITS-highlighted");
        var i = 0;        
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          var prevCate = this.removeFromClicked("ITSElectiveNanoTraditionalPlan" + i, "ITS");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "NanoCoopPlan":
        var ITSelements = document.getElementsByClassName("ITS-highlighted");
        var i = 0;        
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          var prevCate = this.removeFromClicked("ITSElectiveNanoCoopPlan" + i, "ITS");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
      case "SoftwareCoopPlan":
        var ITSelements = document.getElementsByClassName("ITS-highlighted");
        var i = 0;        
        while (ITSelements.length > 0) {
          var currelement = document.getElementById(ITSelements.item(0).id);
          var prevCate = this.removeFromClicked("ITSElectiveSoftwareCoopPlan" + i, "ITS");
                if (!currelement.classList.contains(categoryName+"-highlighted")) {
                    return;
                }
                else {
                    this.unHighlightElement(currelement, categoryName);
                    if (prevCate != "") {
                        this.highlightElement(currelement, prevCate);
                    }
                }      
          i = i + 1;
        }
       break;
       }
      break;
break;   default:
    console.log("shouldn't be here");
    }
};
  var CHEM103TraditionalPlanflag = false;
  var CHEM103TraditionalPlanrflag = false;
 var CHEM103TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CHEM103TraditionalPlan", []);
  var ENGG100TraditionalPlanflag = false;
  var ENGG100TraditionalPlanrflag = false;
 var ENGG100TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGG100TraditionalPlan", []);
  var ENGG130TraditionalPlanflag = false;
  var ENGG130TraditionalPlanrflag = false;
 var ENGG130TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGG130TraditionalPlan", []);
  var ENGL199TraditionalPlanflag = false;
  var ENGL199TraditionalPlanrflag = false;
 var ENGL199TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGL199TraditionalPlan", []);
  var MATH100TraditionalPlanflag = false;
  var MATH100TraditionalPlanrflag = false;
 var MATH100TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("MATH100TraditionalPlan", []);
  var PHYS130TraditionalPlanflag = false;
  var PHYS130TraditionalPlanrflag = false;
 var PHYS130TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("PHYS130TraditionalPlan", []);
  var CHEM105TraditionalPlanflag = false;
  var CHEM105TraditionalPlanrflag = false;
 var CHEM105TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CHEM105TraditionalPlan", []);
  var ENCMP100TraditionalPlanflag = false;
  var ENCMP100TraditionalPlanrflag = false;
 var ENCMP100TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENCMP100TraditionalPlan", []);
  var ENGG160TraditionalPlanflag = false;
  var ENGG160TraditionalPlanrflag = false;
 var ENGG160TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGG160TraditionalPlan", []);
  var ENPH131TraditionalPlanflag = false;
  var ENPH131TraditionalPlanrflag = false;
 var ENPH131TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENPH131TraditionalPlan", []);
  var MATH101TraditionalPlanflag = false;
  var MATH101TraditionalPlanrflag = false;
 var MATH101TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("MATH101TraditionalPlan", []);
  var MATH102TraditionalPlanflag = false;
  var MATH102TraditionalPlanrflag = false;
 var MATH102TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("MATH102TraditionalPlan", []);
  var CMPUT274TraditionalPlanflag = false;
  var CMPUT274TraditionalPlanrflag = false;
 var CMPUT274TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CMPUT274TraditionalPlan", []);
  var ECE202TraditionalPlanflag = false;
  var ECE202TraditionalPlanrflag = false;
 var ECE202TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE202TraditionalPlan", []);
  var ECE210TraditionalPlanflag = false;
  var ECE210TraditionalPlanrflag = false;
 var ECE210TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE210TraditionalPlan", []);
  var MATH201TraditionalPlanflag = false;
  var MATH201TraditionalPlanrflag = false;
 var MATH201TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("MATH201TraditionalPlan", []);
  var MATH209TraditionalPlanflag = false;
  var MATH209TraditionalPlanrflag = false;
 var MATH209TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("MATH209TraditionalPlan", []);
  var ComplementaryElectiveTraditionalPlan0flag = false;
  var ComplementaryElectiveTraditionalPlan0rflag = false;
 var ComplementaryElectiveTraditionalPlan0Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ComplementaryElectiveTraditionalPlan0", []);
  var CMPUT272TraditionalPlanflag = false;
  var CMPUT272TraditionalPlanrflag = false;
 var CMPUT272TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CMPUT272TraditionalPlan", []);
  var CMPUT275TraditionalPlanflag = false;
  var CMPUT275TraditionalPlanrflag = false;
 var CMPUT275TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CMPUT275TraditionalPlan", []);
  var ECE203TraditionalPlanflag = false;
  var ECE203TraditionalPlanrflag = false;
 var ECE203TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE203TraditionalPlan", []);
  var ECE212TraditionalPlanflag = false;
  var ECE212TraditionalPlanrflag = false;
 var ECE212TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE212TraditionalPlan", []);
  var ECE240TraditionalPlanflag = false;
  var ECE240TraditionalPlanrflag = false;
 var ECE240TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE240TraditionalPlan", []);
  var PHYS230TraditionalPlanflag = false;
  var PHYS230TraditionalPlanrflag = false;
 var PHYS230TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("PHYS230TraditionalPlan", []);
  var ECE302TraditionalPlanflag = false;
  var ECE302TraditionalPlanrflag = false;
 var ECE302TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE302TraditionalPlan", []);
  var ECE311TraditionalPlanflag = false;
  var ECE311TraditionalPlanrflag = false;
 var ECE311TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE311TraditionalPlan", []);
  var ECE325TraditionalPlanflag = false;
  var ECE325TraditionalPlanrflag = false;
 var ECE325TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE325TraditionalPlan", []);
  var ECE340TraditionalPlanflag = false;
  var ECE340TraditionalPlanrflag = false;
 var ECE340TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE340TraditionalPlan", []);
  var ProgramTechnicalElectiveTraditionalPlan0flag = false;
  var ProgramTechnicalElectiveTraditionalPlan0rflag = false;
 var ProgramTechnicalElectiveTraditionalPlan0Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ProgramTechnicalElectiveTraditionalPlan0", []);
  var ENGM310TraditionalPlanflag = false;
  var ENGM310TraditionalPlanrflag = false;
 var ENGM310TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGM310TraditionalPlan", []);
  var ENGM401TraditionalPlanflag = false;
  var ENGM401TraditionalPlanrflag = false;
 var ENGM401TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGM401TraditionalPlan", []);
  var CMPUT291TraditionalPlanflag = false;
  var CMPUT291TraditionalPlanrflag = false;
 var CMPUT291TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CMPUT291TraditionalPlan", []);
  var CMPUT379TraditionalPlanflag = false;
  var CMPUT379TraditionalPlanrflag = false;
 var CMPUT379TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CMPUT379TraditionalPlan", []);
  var ECE315TraditionalPlanflag = false;
  var ECE315TraditionalPlanrflag = false;
 var ECE315TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE315TraditionalPlan", []);
  var ComplementaryElectiveTraditionalPlan1flag = false;
  var ComplementaryElectiveTraditionalPlan1rflag = false;
 var ComplementaryElectiveTraditionalPlan1Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ComplementaryElectiveTraditionalPlan1", []);
  var ProgramTechnicalElectiveTraditionalPlan1flag = false;
  var ProgramTechnicalElectiveTraditionalPlan1rflag = false;
 var ProgramTechnicalElectiveTraditionalPlan1Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ProgramTechnicalElectiveTraditionalPlan1", []);
  var ITSElectiveTraditionalPlan0flag = false;
  var ITSElectiveTraditionalPlan0rflag = false;
 var ITSElectiveTraditionalPlan0Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ITSElectiveTraditionalPlan0", []);
  var CMPUT301TraditionalPlanflag = false;
  var CMPUT301TraditionalPlanrflag = false;
 var CMPUT301TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("CMPUT301TraditionalPlan", []);
  var ECE304TraditionalPlanflag = false;
  var ECE304TraditionalPlanrflag = false;
 var ECE304TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE304TraditionalPlan", []);
  var ECE342TraditionalPlanflag = false;
  var ECE342TraditionalPlanrflag = false;
 var ECE342TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE342TraditionalPlan", []);
  var ECE410TraditionalPlanflag = false;
  var ECE410TraditionalPlanrflag = false;
 var ECE410TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE410TraditionalPlan", []);
  var ENGG404TraditionalPlanflag = false;
  var ENGG404TraditionalPlanrflag = false;
 var ENGG404TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGG404TraditionalPlan", []);
  var ProgramTechnicalElectiveTraditionalPlan2flag = false;
  var ProgramTechnicalElectiveTraditionalPlan2rflag = false;
 var ProgramTechnicalElectiveTraditionalPlan2Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ProgramTechnicalElectiveTraditionalPlan2", []);
  var ECE420TraditionalPlanflag = false;
  var ECE420TraditionalPlanrflag = false;
 var ECE420TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE420TraditionalPlan", []);
  var ECE487TraditionalPlanflag = false;
  var ECE487TraditionalPlanrflag = false;
 var ECE487TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE487TraditionalPlan", []);
  var ECE492TraditionalPlanflag = false;
  var ECE492TraditionalPlanrflag = false;
 var ECE492TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ECE492TraditionalPlan", []);
  var ENGG400TraditionalPlanflag = false;
  var ENGG400TraditionalPlanrflag = false;
 var ENGG400TraditionalPlanTime = new Date().getTime();
this.TraditionalPlanClickedMap.set("ENGG400TraditionalPlan", []);
  var ProgramTechnicalElectiveTraditionalPlan3flag = false;
  var ProgramTechnicalElectiveTraditionalPlan3rflag = false;
 var ProgramTechnicalElectiveTraditionalPlan3Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ProgramTechnicalElectiveTraditionalPlan3", []);
  var ProgramTechnicalElectiveTraditionalPlan4flag = false;
  var ProgramTechnicalElectiveTraditionalPlan4rflag = false;
 var ProgramTechnicalElectiveTraditionalPlan4Time = new Date().getTime();
this.TraditionalPlanClickedMap.set("ProgramTechnicalElectiveTraditionalPlan4", []);
$scope.CHEM103TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM103TraditionalPlanTime <= 200) { 
        CHEM103TraditionalPlanTime = currentTime;
        return;
    }
CHEM103TraditionalPlanTime = currentTime;
  var CHEM103TraditionalPlanelement = document.getElementById("CHEM103TraditionalPlan");
 if (!CHEM103TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CHEM103TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CHEM103TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CHEM103TraditionalPlan")[i];
        if (CHEM103TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM103TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine2());
     that.highlightElement(CHEM103TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("CHEM103TraditionalPlan", "NaturalSciences");
      CHEM103TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine2());
     that.unHighlightElement(CHEM103TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM103TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM103TraditionalPlanelement, category);
}
      CHEM103TraditionalPlanflag=false
  }
};
$scope.ENGG100TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG100TraditionalPlanTime <= 200) { 
        ENGG100TraditionalPlanTime = currentTime;
        return;
    }
ENGG100TraditionalPlanTime = currentTime;
  var ENGG100TraditionalPlanelement = document.getElementById("ENGG100TraditionalPlan");
 if (!ENGG100TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGG100TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGG100TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGG100TraditionalPlan")[i];
        if (ENGG100TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG100TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG100TraditionalPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG100TraditionalPlan", "EngineeringProfession");
      ENGG100TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG100TraditionalPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG100TraditionalPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG100TraditionalPlanelement, category);
}
      ENGG100TraditionalPlanflag=false
  }
};
$scope.ENGG130TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG130TraditionalPlanTime <= 200) { 
        ENGG130TraditionalPlanTime = currentTime;
        return;
    }
ENGG130TraditionalPlanTime = currentTime;
  var ENGG130TraditionalPlanelement = document.getElementById("ENGG130TraditionalPlan");
 if (!ENGG130TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGG130TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGG130TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGG130TraditionalPlan")[i];
        if (ENGG130TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG130TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine0());
      that.addLine(getLine5());
     that.highlightElement(ENGG130TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("ENGG130TraditionalPlan", "NaturalSciences");
      ENGG130TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine0());
      that.removeLine(getLine5());
     that.unHighlightElement(ENGG130TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENGG130TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENGG130TraditionalPlanelement, category);
}
      ENGG130TraditionalPlanflag=false
  }
};
$scope.ENGL199TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGL199TraditionalPlanTime <= 200) { 
        ENGL199TraditionalPlanTime = currentTime;
        return;
    }
ENGL199TraditionalPlanTime = currentTime;
  var ENGL199TraditionalPlanelement = document.getElementById("ENGL199TraditionalPlan");
 if (!ENGL199TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGL199TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGL199TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGL199TraditionalPlan")[i];
        if (ENGL199TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGL199TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine3());
     that.highlightElement(ENGL199TraditionalPlanelement, "Other");
     that.addToClicked("ENGL199TraditionalPlan", "Other");
      ENGL199TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine3());
     that.unHighlightElement(ENGL199TraditionalPlanelement, "Other");
     var category = that.removeFromClicked("ENGL199TraditionalPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGL199TraditionalPlanelement, category);
}
      ENGL199TraditionalPlanflag=false
  }
};
$scope.MATH100TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH100TraditionalPlanTime <= 200) { 
        MATH100TraditionalPlanTime = currentTime;
        return;
    }
MATH100TraditionalPlanTime = currentTime;
  var MATH100TraditionalPlanelement = document.getElementById("MATH100TraditionalPlan");
 if (!MATH100TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("MATH100TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("MATH100TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("MATH100TraditionalPlan")[i];
        if (MATH100TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH100TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine0());
      that.addLine(getLine1());
      that.addLine(getLine4());
      that.addLine(getLine7());
      that.addLine(getLine8());
      that.addLine(getLine22());
     that.highlightElement(MATH100TraditionalPlanelement, "Math");
     that.addToClicked("MATH100TraditionalPlan", "Math");
      MATH100TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine0());
      that.removeLine(getLine1());
      that.removeLine(getLine4());
      that.removeLine(getLine7());
      that.removeLine(getLine8());
      that.removeLine(getLine22());
     that.unHighlightElement(MATH100TraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH100TraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH100TraditionalPlanelement, category);
}
      MATH100TraditionalPlanflag=false
  }
};
$scope.PHYS130TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS130TraditionalPlanTime <= 200) { 
        PHYS130TraditionalPlanTime = currentTime;
        return;
    }
PHYS130TraditionalPlanTime = currentTime;
  var PHYS130TraditionalPlanelement = document.getElementById("PHYS130TraditionalPlan");
 if (!PHYS130TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("PHYS130TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("PHYS130TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("PHYS130TraditionalPlan")[i];
        if (PHYS130TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS130TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine1());
      that.addLine(getLine21());
     that.highlightElement(PHYS130TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("PHYS130TraditionalPlan", "NaturalSciences");
      PHYS130TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine1());
      that.removeLine(getLine21());
     that.unHighlightElement(PHYS130TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS130TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS130TraditionalPlanelement, category);
}
      PHYS130TraditionalPlanflag=false
  }
};
$scope.CHEM105TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM105TraditionalPlanTime <= 200) { 
        CHEM105TraditionalPlanTime = currentTime;
        return;
    }
CHEM105TraditionalPlanTime = currentTime;
  var CHEM105TraditionalPlanelement = document.getElementById("CHEM105TraditionalPlan");
 if (!CHEM105TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CHEM105TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CHEM105TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CHEM105TraditionalPlan")[i];
        if (CHEM105TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM105TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine2());
     that.highlightElement(CHEM105TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("CHEM105TraditionalPlan", "NaturalSciences");
      CHEM105TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine2());
     that.unHighlightElement(CHEM105TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM105TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM105TraditionalPlanelement, category);
}
      CHEM105TraditionalPlanflag=false
  }
};
$scope.ENCMP100TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENCMP100TraditionalPlanTime <= 200) { 
        ENCMP100TraditionalPlanTime = currentTime;
        return;
    }
ENCMP100TraditionalPlanTime = currentTime;
  var ENCMP100TraditionalPlanelement = document.getElementById("ENCMP100TraditionalPlan");
 if (!ENCMP100TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENCMP100TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENCMP100TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENCMP100TraditionalPlan")[i];
        if (ENCMP100TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENCMP100TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENCMP100TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("ENCMP100TraditionalPlan", "NaturalSciences");
      ENCMP100TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENCMP100TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENCMP100TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENCMP100TraditionalPlanelement, category);
}
      ENCMP100TraditionalPlanflag=false
  }
};
$scope.ENGG160TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG160TraditionalPlanTime <= 200) { 
        ENGG160TraditionalPlanTime = currentTime;
        return;
    }
ENGG160TraditionalPlanTime = currentTime;
  var ENGG160TraditionalPlanelement = document.getElementById("ENGG160TraditionalPlan");
 if (!ENGG160TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGG160TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGG160TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGG160TraditionalPlan")[i];
        if (ENGG160TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG160TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine3());
     that.highlightElement(ENGG160TraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ENGG160TraditionalPlan", "EngineeringDesign");
      ENGG160TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine3());
     that.unHighlightElement(ENGG160TraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ENGG160TraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ENGG160TraditionalPlanelement, category);
}
      ENGG160TraditionalPlanflag=false
  }
};
$scope.ENPH131TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENPH131TraditionalPlanTime <= 200) { 
        ENPH131TraditionalPlanTime = currentTime;
        return;
    }
ENPH131TraditionalPlanTime = currentTime;
  var ENPH131TraditionalPlanelement = document.getElementById("ENPH131TraditionalPlan");
 if (!ENPH131TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENPH131TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENPH131TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENPH131TraditionalPlan")[i];
        if (ENPH131TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENPH131TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine4());
      that.addLine(getLine5());
      that.addLine(getLine6());
     that.highlightElement(ENPH131TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("ENPH131TraditionalPlan", "NaturalSciences");
      ENPH131TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine4());
      that.removeLine(getLine5());
      that.removeLine(getLine6());
     that.unHighlightElement(ENPH131TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENPH131TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENPH131TraditionalPlanelement, category);
}
      ENPH131TraditionalPlanflag=false
  }
};
$scope.MATH101TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH101TraditionalPlanTime <= 200) { 
        MATH101TraditionalPlanTime = currentTime;
        return;
    }
MATH101TraditionalPlanTime = currentTime;
  var MATH101TraditionalPlanelement = document.getElementById("MATH101TraditionalPlan");
 if (!MATH101TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("MATH101TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("MATH101TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("MATH101TraditionalPlan")[i];
        if (MATH101TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH101TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine6());
      that.addLine(getLine7());
      that.addLine(getLine9());
      that.addLine(getLine12());
      that.addLine(getLine23());
     that.highlightElement(MATH101TraditionalPlanelement, "Math");
     that.addToClicked("MATH101TraditionalPlan", "Math");
      MATH101TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine6());
      that.removeLine(getLine7());
      that.removeLine(getLine9());
      that.removeLine(getLine12());
      that.removeLine(getLine23());
     that.unHighlightElement(MATH101TraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH101TraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH101TraditionalPlanelement, category);
}
      MATH101TraditionalPlanflag=false
  }
};
$scope.MATH102TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH102TraditionalPlanTime <= 200) { 
        MATH102TraditionalPlanTime = currentTime;
        return;
    }
MATH102TraditionalPlanTime = currentTime;
  var MATH102TraditionalPlanelement = document.getElementById("MATH102TraditionalPlan");
 if (!MATH102TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("MATH102TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("MATH102TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("MATH102TraditionalPlan")[i];
        if (MATH102TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH102TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine8());
      that.addLine(getLine10());
      that.addLine(getLine13());
     that.highlightElement(MATH102TraditionalPlanelement, "Math");
     that.addToClicked("MATH102TraditionalPlan", "Math");
      MATH102TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine8());
      that.removeLine(getLine10());
      that.removeLine(getLine13());
     that.unHighlightElement(MATH102TraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH102TraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH102TraditionalPlanelement, category);
}
      MATH102TraditionalPlanflag=false
  }
};
$scope.CMPUT274TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT274TraditionalPlanTime <= 200) { 
        CMPUT274TraditionalPlanTime = currentTime;
        return;
    }
CMPUT274TraditionalPlanTime = currentTime;
  var CMPUT274TraditionalPlanelement = document.getElementById("CMPUT274TraditionalPlan");
 if (!CMPUT274TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CMPUT274TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CMPUT274TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CMPUT274TraditionalPlan")[i];
        if (CMPUT274TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT274TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine14());
      that.addLine(getLine15());
      that.addLine(getLine28());
     that.highlightElement(CMPUT274TraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT274TraditionalPlan", "ComputingScience");
      CMPUT274TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine14());
      that.removeLine(getLine15());
      that.removeLine(getLine28());
     that.unHighlightElement(CMPUT274TraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT274TraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT274TraditionalPlanelement, category);
}
      CMPUT274TraditionalPlanflag=false
  }
};
$scope.ECE202TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE202TraditionalPlanTime <= 200) { 
        ECE202TraditionalPlanTime = currentTime;
        return;
    }
ECE202TraditionalPlanTime = currentTime;
  var ECE202TraditionalPlanelement = document.getElementById("ECE202TraditionalPlan");
 if (!ECE202TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE202TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE202TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE202TraditionalPlan")[i];
        if (ECE202TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE202TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine9());
      that.addLine(getLine10());
      that.addLine(getLine16());
      that.addLine(getLine19());
     that.highlightElement(ECE202TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE202TraditionalPlan", "EngineeringSciences");
      ECE202TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine9());
      that.removeLine(getLine10());
      that.removeLine(getLine16());
      that.removeLine(getLine19());
     that.unHighlightElement(ECE202TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE202TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE202TraditionalPlanelement, category);
}
      ECE202TraditionalPlanflag=false
  }
};
$scope.ECE210TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE210TraditionalPlanTime <= 200) { 
        ECE210TraditionalPlanTime = currentTime;
        return;
    }
ECE210TraditionalPlanTime = currentTime;
  var ECE210TraditionalPlanelement = document.getElementById("ECE210TraditionalPlan");
 if (!ECE210TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE210TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE210TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE210TraditionalPlan")[i];
        if (ECE210TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE210TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine18());
      that.addLine(getLine35());
     that.highlightElement(ECE210TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE210TraditionalPlan", "EngineeringSciences");
      ECE210TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine18());
      that.removeLine(getLine35());
     that.unHighlightElement(ECE210TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE210TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE210TraditionalPlanelement, category);
}
      ECE210TraditionalPlanflag=false
  }
};
$scope.MATH201TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH201TraditionalPlanTime <= 200) { 
        MATH201TraditionalPlanTime = currentTime;
        return;
    }
MATH201TraditionalPlanTime = currentTime;
  var MATH201TraditionalPlanelement = document.getElementById("MATH201TraditionalPlan");
 if (!MATH201TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("MATH201TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("MATH201TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("MATH201TraditionalPlan")[i];
        if (MATH201TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH201TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine11());
      that.addLine(getLine20());
     that.highlightElement(MATH201TraditionalPlanelement, "Math");
     that.addToClicked("MATH201TraditionalPlan", "Math");
      MATH201TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine11());
      that.removeLine(getLine20());
     that.unHighlightElement(MATH201TraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH201TraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH201TraditionalPlanelement, category);
}
      MATH201TraditionalPlanflag=false
  }
};
$scope.MATH209TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH209TraditionalPlanTime <= 200) { 
        MATH209TraditionalPlanTime = currentTime;
        return;
    }
MATH209TraditionalPlanTime = currentTime;
  var MATH209TraditionalPlanelement = document.getElementById("MATH209TraditionalPlan");
 if (!MATH209TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("MATH209TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("MATH209TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("MATH209TraditionalPlan")[i];
        if (MATH209TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH209TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine11());
      that.addLine(getLine12());
      that.addLine(getLine13());
      that.addLine(getLine37());
     that.highlightElement(MATH209TraditionalPlanelement, "Math");
     that.addToClicked("MATH209TraditionalPlan", "Math");
      MATH209TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine11());
      that.removeLine(getLine12());
      that.removeLine(getLine13());
      that.removeLine(getLine37());
     that.unHighlightElement(MATH209TraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH209TraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH209TraditionalPlanelement, category);
}
      MATH209TraditionalPlanflag=false
  }
};
$scope.ComplementaryElectiveTraditionalPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveTraditionalPlan0Time <= 200) { 
        ComplementaryElectiveTraditionalPlan0Time = currentTime;
        return;
    }
ComplementaryElectiveTraditionalPlan0Time = currentTime;
  var ComplementaryElectiveTraditionalPlan0element = document.getElementById("ComplementaryElectiveTraditionalPlan0");
 if (!ComplementaryElectiveTraditionalPlan0flag) {
     if (that.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan0").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan0")[i];
        if (ComplementaryElectiveTraditionalPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveTraditionalPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveTraditionalPlan0element, "COMP");
     that.addToClicked("ComplementaryElectiveTraditionalPlan0", "COMP");
      ComplementaryElectiveTraditionalPlan0flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveTraditionalPlan0element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveTraditionalPlan0", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveTraditionalPlan0element, category);
}
      ComplementaryElectiveTraditionalPlan0flag=false
  }
};
$scope.CMPUT272TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT272TraditionalPlanTime <= 200) { 
        CMPUT272TraditionalPlanTime = currentTime;
        return;
    }
CMPUT272TraditionalPlanTime = currentTime;
  var CMPUT272TraditionalPlanelement = document.getElementById("CMPUT272TraditionalPlan");
 if (!CMPUT272TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CMPUT272TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CMPUT272TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CMPUT272TraditionalPlan")[i];
        if (CMPUT272TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT272TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine14());
      that.addLine(getLine29());
     that.highlightElement(CMPUT272TraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT272TraditionalPlan", "ComputingScience");
      CMPUT272TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine14());
      that.removeLine(getLine29());
     that.unHighlightElement(CMPUT272TraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT272TraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT272TraditionalPlanelement, category);
}
      CMPUT272TraditionalPlanflag=false
  }
};
$scope.CMPUT275TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT275TraditionalPlanTime <= 200) { 
        CMPUT275TraditionalPlanTime = currentTime;
        return;
    }
CMPUT275TraditionalPlanTime = currentTime;
  var CMPUT275TraditionalPlanelement = document.getElementById("CMPUT275TraditionalPlan");
 if (!CMPUT275TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CMPUT275TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CMPUT275TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CMPUT275TraditionalPlan")[i];
        if (CMPUT275TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT275TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine15());
      that.addLine(getLine26());
      that.addLine(getLine30());
      that.addLine(getLine31());
      that.addLine(getLine34());
      that.addLine(getLine39());
     that.highlightElement(CMPUT275TraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT275TraditionalPlan", "ComputingScience");
      CMPUT275TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine15());
      that.removeLine(getLine26());
      that.removeLine(getLine30());
      that.removeLine(getLine31());
      that.removeLine(getLine34());
      that.removeLine(getLine39());
     that.unHighlightElement(CMPUT275TraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT275TraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT275TraditionalPlanelement, category);
}
      CMPUT275TraditionalPlanflag=false
  }
};
$scope.ECE203TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE203TraditionalPlanTime <= 200) { 
        ECE203TraditionalPlanTime = currentTime;
        return;
    }
ECE203TraditionalPlanTime = currentTime;
  var ECE203TraditionalPlanelement = document.getElementById("ECE203TraditionalPlan");
 if (!ECE203TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE203TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE203TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE203TraditionalPlan")[i];
        if (ECE203TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE203TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine16());
      that.addLine(getLine17());
      that.addLine(getLine24());
     that.highlightElement(ECE203TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE203TraditionalPlan", "EngineeringSciences");
      ECE203TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine16());
      that.removeLine(getLine17());
      that.removeLine(getLine24());
     that.unHighlightElement(ECE203TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE203TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE203TraditionalPlanelement, category);
}
      ECE203TraditionalPlanflag=false
  }
};
$scope.ECE212TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE212TraditionalPlanTime <= 200) { 
        ECE212TraditionalPlanTime = currentTime;
        return;
    }
ECE212TraditionalPlanTime = currentTime;
  var ECE212TraditionalPlanelement = document.getElementById("ECE212TraditionalPlan");
 if (!ECE212TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE212TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE212TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE212TraditionalPlan")[i];
        if (ECE212TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE212TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine18());
      that.addLine(getLine25());
      that.addLine(getLine32());
      that.addLine(getLine33());
     that.highlightElement(ECE212TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE212TraditionalPlan", "EngineeringSciences");
      ECE212TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine18());
      that.removeLine(getLine25());
      that.removeLine(getLine32());
      that.removeLine(getLine33());
     that.unHighlightElement(ECE212TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE212TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE212TraditionalPlanelement, category);
}
      ECE212TraditionalPlanflag=false
  }
};
$scope.ECE240TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE240TraditionalPlanTime <= 200) { 
        ECE240TraditionalPlanTime = currentTime;
        return;
    }
ECE240TraditionalPlanTime = currentTime;
  var ECE240TraditionalPlanelement = document.getElementById("ECE240TraditionalPlan");
 if (!ECE240TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE240TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE240TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE240TraditionalPlan")[i];
        if (ECE240TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE240TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine17());
      that.addLine(getLine19());
      that.addLine(getLine20());
      that.addLine(getLine27());
     that.highlightElement(ECE240TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE240TraditionalPlan", "EngineeringSciences");
      ECE240TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine17());
      that.removeLine(getLine19());
      that.removeLine(getLine20());
      that.removeLine(getLine27());
     that.unHighlightElement(ECE240TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE240TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE240TraditionalPlanelement, category);
}
      ECE240TraditionalPlanflag=false
  }
};
$scope.PHYS230TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS230TraditionalPlanTime <= 200) { 
        PHYS230TraditionalPlanTime = currentTime;
        return;
    }
PHYS230TraditionalPlanTime = currentTime;
  var PHYS230TraditionalPlanelement = document.getElementById("PHYS230TraditionalPlan");
 if (!PHYS230TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("PHYS230TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("PHYS230TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("PHYS230TraditionalPlan")[i];
        if (PHYS230TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS230TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine21());
      that.addLine(getLine22());
      that.addLine(getLine23());
     that.highlightElement(PHYS230TraditionalPlanelement, "NaturalSciences");
     that.addToClicked("PHYS230TraditionalPlan", "NaturalSciences");
      PHYS230TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine21());
      that.removeLine(getLine22());
      that.removeLine(getLine23());
     that.unHighlightElement(PHYS230TraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS230TraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS230TraditionalPlanelement, category);
}
      PHYS230TraditionalPlanflag=false
  }
};
$scope.ECE302TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE302TraditionalPlanTime <= 200) { 
        ECE302TraditionalPlanTime = currentTime;
        return;
    }
ECE302TraditionalPlanTime = currentTime;
  var ECE302TraditionalPlanelement = document.getElementById("ECE302TraditionalPlan");
 if (!ECE302TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE302TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE302TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE302TraditionalPlan")[i];
        if (ECE302TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE302TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine24());
      that.addLine(getLine36());
     that.highlightElement(ECE302TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE302TraditionalPlan", "EngineeringSciences");
      ECE302TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine24());
      that.removeLine(getLine36());
     that.unHighlightElement(ECE302TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE302TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE302TraditionalPlanelement, category);
}
      ECE302TraditionalPlanflag=false
  }
};
$scope.ECE311TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE311TraditionalPlanTime <= 200) { 
        ECE311TraditionalPlanTime = currentTime;
        return;
    }
ECE311TraditionalPlanTime = currentTime;
  var ECE311TraditionalPlanelement = document.getElementById("ECE311TraditionalPlan");
 if (!ECE311TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE311TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE311TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE311TraditionalPlan")[i];
        if (ECE311TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE311TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine25());
     that.highlightElement(ECE311TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE311TraditionalPlan", "EngineeringSciences");
      ECE311TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine25());
     that.unHighlightElement(ECE311TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE311TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE311TraditionalPlanelement, category);
}
      ECE311TraditionalPlanflag=false
  }
};
$scope.ECE325TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE325TraditionalPlanTime <= 200) { 
        ECE325TraditionalPlanTime = currentTime;
        return;
    }
ECE325TraditionalPlanTime = currentTime;
  var ECE325TraditionalPlanelement = document.getElementById("ECE325TraditionalPlan");
 if (!ECE325TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE325TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE325TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE325TraditionalPlan")[i];
        if (ECE325TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE325TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine26());
     that.highlightElement(ECE325TraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ECE325TraditionalPlan", "EngineeringDesign");
      ECE325TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine26());
     that.unHighlightElement(ECE325TraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE325TraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE325TraditionalPlanelement, category);
}
      ECE325TraditionalPlanflag=false
  }
};
$scope.ECE340TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE340TraditionalPlanTime <= 200) { 
        ECE340TraditionalPlanTime = currentTime;
        return;
    }
ECE340TraditionalPlanTime = currentTime;
  var ECE340TraditionalPlanelement = document.getElementById("ECE340TraditionalPlan");
 if (!ECE340TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE340TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE340TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE340TraditionalPlan")[i];
        if (ECE340TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE340TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine27());
     that.highlightElement(ECE340TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE340TraditionalPlan", "EngineeringSciences");
      ECE340TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine27());
     that.unHighlightElement(ECE340TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE340TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE340TraditionalPlanelement, category);
}
      ECE340TraditionalPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveTraditionalPlan0Time <= 200) { 
        ProgramTechnicalElectiveTraditionalPlan0Time = currentTime;
        return;
    }
ProgramTechnicalElectiveTraditionalPlan0Time = currentTime;
  var ProgramTechnicalElectiveTraditionalPlan0element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan0");
 if (!ProgramTechnicalElectiveTraditionalPlan0flag) {
     if (that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan0").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan0")[i];
        if (ProgramTechnicalElectiveTraditionalPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan0element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveTraditionalPlan0", "PROG");
      ProgramTechnicalElectiveTraditionalPlan0flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan0element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan0", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan0element, category);
}
      ProgramTechnicalElectiveTraditionalPlan0flag=false
  }
};
$scope.ENGM310TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM310TraditionalPlanTime <= 200) { 
        ENGM310TraditionalPlanTime = currentTime;
        return;
    }
ENGM310TraditionalPlanTime = currentTime;
  var ENGM310TraditionalPlanelement = document.getElementById("ENGM310TraditionalPlan");
 if (!ENGM310TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGM310TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGM310TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGM310TraditionalPlan")[i];
        if (ENGM310TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM310TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM310TraditionalPlanelement, "Other");
     that.addToClicked("ENGM310TraditionalPlan", "Other");
      ENGM310TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM310TraditionalPlanelement, "Other");
     var category = that.removeFromClicked("ENGM310TraditionalPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM310TraditionalPlanelement, category);
}
      ENGM310TraditionalPlanflag=false
  }
};
$scope.ENGM401TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM401TraditionalPlanTime <= 200) { 
        ENGM401TraditionalPlanTime = currentTime;
        return;
    }
ENGM401TraditionalPlanTime = currentTime;
  var ENGM401TraditionalPlanelement = document.getElementById("ENGM401TraditionalPlan");
 if (!ENGM401TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGM401TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGM401TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGM401TraditionalPlan")[i];
        if (ENGM401TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM401TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM401TraditionalPlanelement, "Other");
     that.addToClicked("ENGM401TraditionalPlan", "Other");
      ENGM401TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM401TraditionalPlanelement, "Other");
     var category = that.removeFromClicked("ENGM401TraditionalPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM401TraditionalPlanelement, category);
}
      ENGM401TraditionalPlanflag=false
  }
};
$scope.CMPUT291TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT291TraditionalPlanTime <= 200) { 
        CMPUT291TraditionalPlanTime = currentTime;
        return;
    }
CMPUT291TraditionalPlanTime = currentTime;
  var CMPUT291TraditionalPlanelement = document.getElementById("CMPUT291TraditionalPlan");
 if (!CMPUT291TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CMPUT291TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CMPUT291TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CMPUT291TraditionalPlan")[i];
        if (CMPUT291TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT291TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine28());
      that.addLine(getLine29());
      that.addLine(getLine30());
     that.highlightElement(CMPUT291TraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT291TraditionalPlan", "ComputingScience");
      CMPUT291TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine28());
      that.removeLine(getLine29());
      that.removeLine(getLine30());
     that.unHighlightElement(CMPUT291TraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT291TraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT291TraditionalPlanelement, category);
}
      CMPUT291TraditionalPlanflag=false
  }
};
$scope.CMPUT379TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT379TraditionalPlanTime <= 200) { 
        CMPUT379TraditionalPlanTime = currentTime;
        return;
    }
CMPUT379TraditionalPlanTime = currentTime;
  var CMPUT379TraditionalPlanelement = document.getElementById("CMPUT379TraditionalPlan");
 if (!CMPUT379TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CMPUT379TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CMPUT379TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CMPUT379TraditionalPlan")[i];
        if (CMPUT379TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT379TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine31());
      that.addLine(getLine32());
      that.addLine(getLine40());
     that.highlightElement(CMPUT379TraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT379TraditionalPlan", "ComputingScience");
      CMPUT379TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine31());
      that.removeLine(getLine32());
      that.removeLine(getLine40());
     that.unHighlightElement(CMPUT379TraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT379TraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT379TraditionalPlanelement, category);
}
      CMPUT379TraditionalPlanflag=false
  }
};
$scope.ECE315TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE315TraditionalPlanTime <= 200) { 
        ECE315TraditionalPlanTime = currentTime;
        return;
    }
ECE315TraditionalPlanTime = currentTime;
  var ECE315TraditionalPlanelement = document.getElementById("ECE315TraditionalPlan");
 if (!ECE315TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE315TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE315TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE315TraditionalPlan")[i];
        if (ECE315TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE315TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine33());
      that.addLine(getLine41());
     that.highlightElement(ECE315TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE315TraditionalPlan", "EngineeringSciences");
      ECE315TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine33());
      that.removeLine(getLine41());
     that.unHighlightElement(ECE315TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE315TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE315TraditionalPlanelement, category);
}
      ECE315TraditionalPlanflag=false
  }
};
$scope.ComplementaryElectiveTraditionalPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveTraditionalPlan1Time <= 200) { 
        ComplementaryElectiveTraditionalPlan1Time = currentTime;
        return;
    }
ComplementaryElectiveTraditionalPlan1Time = currentTime;
  var ComplementaryElectiveTraditionalPlan1element = document.getElementById("ComplementaryElectiveTraditionalPlan1");
 if (!ComplementaryElectiveTraditionalPlan1flag) {
     if (that.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan1").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ComplementaryElectiveTraditionalPlan1")[i];
        if (ComplementaryElectiveTraditionalPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveTraditionalPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveTraditionalPlan1element, "COMP");
     that.addToClicked("ComplementaryElectiveTraditionalPlan1", "COMP");
      ComplementaryElectiveTraditionalPlan1flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveTraditionalPlan1element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveTraditionalPlan1", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveTraditionalPlan1element, category);
}
      ComplementaryElectiveTraditionalPlan1flag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveTraditionalPlan1Time <= 200) { 
        ProgramTechnicalElectiveTraditionalPlan1Time = currentTime;
        return;
    }
ProgramTechnicalElectiveTraditionalPlan1Time = currentTime;
  var ProgramTechnicalElectiveTraditionalPlan1element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan1");
 if (!ProgramTechnicalElectiveTraditionalPlan1flag) {
     if (that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan1").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan1")[i];
        if (ProgramTechnicalElectiveTraditionalPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan1element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveTraditionalPlan1", "PROG");
      ProgramTechnicalElectiveTraditionalPlan1flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan1element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan1", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan1element, category);
}
      ProgramTechnicalElectiveTraditionalPlan1flag=false
  }
};
$scope.ITSElectiveTraditionalPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ITSElectiveTraditionalPlan0Time <= 200) { 
        ITSElectiveTraditionalPlan0Time = currentTime;
        return;
    }
ITSElectiveTraditionalPlan0Time = currentTime;
  var ITSElectiveTraditionalPlan0element = document.getElementById("ITSElectiveTraditionalPlan0");
 if (!ITSElectiveTraditionalPlan0flag) {
     if (that.TraditionalPlanClickedMap.get("ITSElectiveTraditionalPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ITSElectiveTraditionalPlan0").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ITSElectiveTraditionalPlan0")[i];
        if (ITSElectiveTraditionalPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ITSElectiveTraditionalPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ITSElectiveTraditionalPlan0element, "ITS");
     that.addToClicked("ITSElectiveTraditionalPlan0", "ITS");
      ITSElectiveTraditionalPlan0flag=true
  }
 else {
     that.unHighlightElement(ITSElectiveTraditionalPlan0element, "ITS");
     var category = that.removeFromClicked("ITSElectiveTraditionalPlan0", "ITS");
  if (category != "") { 
     that.highlightElement(ITSElectiveTraditionalPlan0element, category);
}
      ITSElectiveTraditionalPlan0flag=false
  }
};
$scope.CMPUT301TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT301TraditionalPlanTime <= 200) { 
        CMPUT301TraditionalPlanTime = currentTime;
        return;
    }
CMPUT301TraditionalPlanTime = currentTime;
  var CMPUT301TraditionalPlanelement = document.getElementById("CMPUT301TraditionalPlan");
 if (!CMPUT301TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("CMPUT301TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("CMPUT301TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("CMPUT301TraditionalPlan")[i];
        if (CMPUT301TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT301TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine34());
     that.highlightElement(CMPUT301TraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT301TraditionalPlan", "ComputingScience");
      CMPUT301TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine34());
     that.unHighlightElement(CMPUT301TraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT301TraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT301TraditionalPlanelement, category);
}
      CMPUT301TraditionalPlanflag=false
  }
};
$scope.ECE304TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE304TraditionalPlanTime <= 200) { 
        ECE304TraditionalPlanTime = currentTime;
        return;
    }
ECE304TraditionalPlanTime = currentTime;
  var ECE304TraditionalPlanelement = document.getElementById("ECE304TraditionalPlan");
 if (!ECE304TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE304TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE304TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE304TraditionalPlan")[i];
        if (ECE304TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE304TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine35());
      that.addLine(getLine36());
      that.addLine(getLine38());
     that.highlightElement(ECE304TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE304TraditionalPlan", "EngineeringSciences");
      ECE304TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine35());
      that.removeLine(getLine36());
      that.removeLine(getLine38());
     that.unHighlightElement(ECE304TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE304TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE304TraditionalPlanelement, category);
}
      ECE304TraditionalPlanflag=false
  }
};
$scope.ECE342TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE342TraditionalPlanTime <= 200) { 
        ECE342TraditionalPlanTime = currentTime;
        return;
    }
ECE342TraditionalPlanTime = currentTime;
  var ECE342TraditionalPlanelement = document.getElementById("ECE342TraditionalPlan");
 if (!ECE342TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE342TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE342TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE342TraditionalPlan")[i];
        if (ECE342TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE342TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine37());
     that.highlightElement(ECE342TraditionalPlanelement, "Math");
     that.addToClicked("ECE342TraditionalPlan", "Math");
      ECE342TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine37());
     that.unHighlightElement(ECE342TraditionalPlanelement, "Math");
     var category = that.removeFromClicked("ECE342TraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(ECE342TraditionalPlanelement, category);
}
      ECE342TraditionalPlanflag=false
  }
};
$scope.ECE410TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE410TraditionalPlanTime <= 200) { 
        ECE410TraditionalPlanTime = currentTime;
        return;
    }
ECE410TraditionalPlanTime = currentTime;
  var ECE410TraditionalPlanelement = document.getElementById("ECE410TraditionalPlan");
 if (!ECE410TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE410TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE410TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE410TraditionalPlan")[i];
        if (ECE410TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE410TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine38());
      that.addLine(getLine42());
     that.highlightElement(ECE410TraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ECE410TraditionalPlan", "EngineeringDesign");
      ECE410TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine38());
      that.removeLine(getLine42());
     that.unHighlightElement(ECE410TraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE410TraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE410TraditionalPlanelement, category);
}
      ECE410TraditionalPlanflag=false
  }
};
$scope.ENGG404TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG404TraditionalPlanTime <= 200) { 
        ENGG404TraditionalPlanTime = currentTime;
        return;
    }
ENGG404TraditionalPlanTime = currentTime;
  var ENGG404TraditionalPlanelement = document.getElementById("ENGG404TraditionalPlan");
 if (!ENGG404TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGG404TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGG404TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGG404TraditionalPlan")[i];
        if (ENGG404TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG404TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG404TraditionalPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG404TraditionalPlan", "EngineeringProfession");
      ENGG404TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG404TraditionalPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG404TraditionalPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG404TraditionalPlanelement, category);
}
      ENGG404TraditionalPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan2Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveTraditionalPlan2Time <= 200) { 
        ProgramTechnicalElectiveTraditionalPlan2Time = currentTime;
        return;
    }
ProgramTechnicalElectiveTraditionalPlan2Time = currentTime;
  var ProgramTechnicalElectiveTraditionalPlan2element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan2");
 if (!ProgramTechnicalElectiveTraditionalPlan2flag) {
     if (that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan2").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan2").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan2")[i];
        if (ProgramTechnicalElectiveTraditionalPlan2element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan2element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan2element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveTraditionalPlan2", "PROG");
      ProgramTechnicalElectiveTraditionalPlan2flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan2element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan2", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan2element, category);
}
      ProgramTechnicalElectiveTraditionalPlan2flag=false
  }
};
$scope.ECE420TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE420TraditionalPlanTime <= 200) { 
        ECE420TraditionalPlanTime = currentTime;
        return;
    }
ECE420TraditionalPlanTime = currentTime;
  var ECE420TraditionalPlanelement = document.getElementById("ECE420TraditionalPlan");
 if (!ECE420TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE420TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE420TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE420TraditionalPlan")[i];
        if (ECE420TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE420TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine39());
      that.addLine(getLine40());
     that.highlightElement(ECE420TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE420TraditionalPlan", "EngineeringSciences");
      ECE420TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine39());
      that.removeLine(getLine40());
     that.unHighlightElement(ECE420TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE420TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE420TraditionalPlanelement, category);
}
      ECE420TraditionalPlanflag=false
  }
};
$scope.ECE487TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE487TraditionalPlanTime <= 200) { 
        ECE487TraditionalPlanTime = currentTime;
        return;
    }
ECE487TraditionalPlanTime = currentTime;
  var ECE487TraditionalPlanelement = document.getElementById("ECE487TraditionalPlan");
 if (!ECE487TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE487TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE487TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE487TraditionalPlan")[i];
        if (ECE487TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE487TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ECE487TraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE487TraditionalPlan", "EngineeringSciences");
      ECE487TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ECE487TraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE487TraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE487TraditionalPlanelement, category);
}
      ECE487TraditionalPlanflag=false
  }
};
$scope.ECE492TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE492TraditionalPlanTime <= 200) { 
        ECE492TraditionalPlanTime = currentTime;
        return;
    }
ECE492TraditionalPlanTime = currentTime;
  var ECE492TraditionalPlanelement = document.getElementById("ECE492TraditionalPlan");
 if (!ECE492TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ECE492TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ECE492TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ECE492TraditionalPlan")[i];
        if (ECE492TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE492TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine41());
      that.addLine(getLine42());
     that.highlightElement(ECE492TraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ECE492TraditionalPlan", "EngineeringDesign");
      ECE492TraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine41());
      that.removeLine(getLine42());
     that.unHighlightElement(ECE492TraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE492TraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE492TraditionalPlanelement, category);
}
      ECE492TraditionalPlanflag=false
  }
};
$scope.ENGG400TraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG400TraditionalPlanTime <= 200) { 
        ENGG400TraditionalPlanTime = currentTime;
        return;
    }
ENGG400TraditionalPlanTime = currentTime;
  var ENGG400TraditionalPlanelement = document.getElementById("ENGG400TraditionalPlan");
 if (!ENGG400TraditionalPlanflag) {
     if (that.TraditionalPlanClickedMap.get("ENGG400TraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ENGG400TraditionalPlan").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ENGG400TraditionalPlan")[i];
        if (ENGG400TraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG400TraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG400TraditionalPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG400TraditionalPlan", "EngineeringProfession");
      ENGG400TraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG400TraditionalPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG400TraditionalPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG400TraditionalPlanelement, category);
}
      ENGG400TraditionalPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan3Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveTraditionalPlan3Time <= 200) { 
        ProgramTechnicalElectiveTraditionalPlan3Time = currentTime;
        return;
    }
ProgramTechnicalElectiveTraditionalPlan3Time = currentTime;
  var ProgramTechnicalElectiveTraditionalPlan3element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan3");
 if (!ProgramTechnicalElectiveTraditionalPlan3flag) {
     if (that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan3").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan3").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan3")[i];
        if (ProgramTechnicalElectiveTraditionalPlan3element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan3element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan3element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveTraditionalPlan3", "PROG");
      ProgramTechnicalElectiveTraditionalPlan3flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan3element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan3", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan3element, category);
}
      ProgramTechnicalElectiveTraditionalPlan3flag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan4Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveTraditionalPlan4Time <= 200) { 
        ProgramTechnicalElectiveTraditionalPlan4Time = currentTime;
        return;
    }
ProgramTechnicalElectiveTraditionalPlan4Time = currentTime;
  var ProgramTechnicalElectiveTraditionalPlan4element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan4");
 if (!ProgramTechnicalElectiveTraditionalPlan4flag) {
     if (that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan4").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan4").length; i++) { 
        var cate = that.TraditionalPlanClickedMap.get("ProgramTechnicalElectiveTraditionalPlan4")[i];
        if (ProgramTechnicalElectiveTraditionalPlan4element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan4element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan4element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveTraditionalPlan4", "PROG");
      ProgramTechnicalElectiveTraditionalPlan4flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveTraditionalPlan4element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveTraditionalPlan4", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveTraditionalPlan4element, category);
}
      ProgramTechnicalElectiveTraditionalPlan4flag=false
  }
};
$scope.CHEM103TraditionalPlanRCListener = function () {
  var element = document.getElementById("CHEM103TraditionalPlandesc");
 if (!CHEM103TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM103TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM103TraditionalPlanrflag=false
  }
};
$scope.ENGG100TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG100TraditionalPlandesc");
 if (!ENGG100TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG100TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG100TraditionalPlanrflag=false
  }
};
$scope.ENGG130TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG130TraditionalPlandesc");
 if (!ENGG130TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG130TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG130TraditionalPlanrflag=false
  }
};
$scope.ENGL199TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGL199TraditionalPlandesc");
 if (!ENGL199TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGL199TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGL199TraditionalPlanrflag=false
  }
};
$scope.MATH100TraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH100TraditionalPlandesc");
 if (!MATH100TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH100TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH100TraditionalPlanrflag=false
  }
};
$scope.PHYS130TraditionalPlanRCListener = function () {
  var element = document.getElementById("PHYS130TraditionalPlandesc");
 if (!PHYS130TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS130TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS130TraditionalPlanrflag=false
  }
};
$scope.CHEM105TraditionalPlanRCListener = function () {
  var element = document.getElementById("CHEM105TraditionalPlandesc");
 if (!CHEM105TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM105TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM105TraditionalPlanrflag=false
  }
};
$scope.ENCMP100TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENCMP100TraditionalPlandesc");
 if (!ENCMP100TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENCMP100TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENCMP100TraditionalPlanrflag=false
  }
};
$scope.ENGG160TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG160TraditionalPlandesc");
 if (!ENGG160TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG160TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG160TraditionalPlanrflag=false
  }
};
$scope.ENPH131TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENPH131TraditionalPlandesc");
 if (!ENPH131TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENPH131TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENPH131TraditionalPlanrflag=false
  }
};
$scope.MATH101TraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH101TraditionalPlandesc");
 if (!MATH101TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH101TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH101TraditionalPlanrflag=false
  }
};
$scope.MATH102TraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH102TraditionalPlandesc");
 if (!MATH102TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH102TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH102TraditionalPlanrflag=false
  }
};
$scope.CMPUT274TraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT274TraditionalPlandesc");
 if (!CMPUT274TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT274TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT274TraditionalPlanrflag=false
  }
};
$scope.ECE202TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE202TraditionalPlandesc");
 if (!ECE202TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE202TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE202TraditionalPlanrflag=false
  }
};
$scope.ECE210TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE210TraditionalPlandesc");
 if (!ECE210TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE210TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE210TraditionalPlanrflag=false
  }
};
$scope.MATH201TraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH201TraditionalPlandesc");
 if (!MATH201TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH201TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH201TraditionalPlanrflag=false
  }
};
$scope.MATH209TraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH209TraditionalPlandesc");
 if (!MATH209TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH209TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH209TraditionalPlanrflag=false
  }
};
$scope.ComplementaryElectiveTraditionalPlan0RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveTraditionalPlan0desc");
 if (!ComplementaryElectiveTraditionalPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveTraditionalPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveTraditionalPlan0rflag=false
  }
};
$scope.CMPUT272TraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT272TraditionalPlandesc");
 if (!CMPUT272TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT272TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT272TraditionalPlanrflag=false
  }
};
$scope.CMPUT275TraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT275TraditionalPlandesc");
 if (!CMPUT275TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT275TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT275TraditionalPlanrflag=false
  }
};
$scope.ECE203TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE203TraditionalPlandesc");
 if (!ECE203TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE203TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE203TraditionalPlanrflag=false
  }
};
$scope.ECE212TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE212TraditionalPlandesc");
 if (!ECE212TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE212TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE212TraditionalPlanrflag=false
  }
};
$scope.ECE240TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE240TraditionalPlandesc");
 if (!ECE240TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE240TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE240TraditionalPlanrflag=false
  }
};
$scope.PHYS230TraditionalPlanRCListener = function () {
  var element = document.getElementById("PHYS230TraditionalPlandesc");
 if (!PHYS230TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS230TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS230TraditionalPlanrflag=false
  }
};
$scope.ECE302TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE302TraditionalPlandesc");
 if (!ECE302TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE302TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE302TraditionalPlanrflag=false
  }
};
$scope.ECE311TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE311TraditionalPlandesc");
 if (!ECE311TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE311TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE311TraditionalPlanrflag=false
  }
};
$scope.ECE325TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE325TraditionalPlandesc");
 if (!ECE325TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE325TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE325TraditionalPlanrflag=false
  }
};
$scope.ECE340TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE340TraditionalPlandesc");
 if (!ECE340TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE340TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE340TraditionalPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan0RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan0desc");
 if (!ProgramTechnicalElectiveTraditionalPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveTraditionalPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveTraditionalPlan0rflag=false
  }
};
$scope.ENGM310TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGM310TraditionalPlandesc");
 if (!ENGM310TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM310TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM310TraditionalPlanrflag=false
  }
};
$scope.ENGM401TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGM401TraditionalPlandesc");
 if (!ENGM401TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM401TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM401TraditionalPlanrflag=false
  }
};
$scope.CMPUT291TraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT291TraditionalPlandesc");
 if (!CMPUT291TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT291TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT291TraditionalPlanrflag=false
  }
};
$scope.CMPUT379TraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT379TraditionalPlandesc");
 if (!CMPUT379TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT379TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT379TraditionalPlanrflag=false
  }
};
$scope.ECE315TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE315TraditionalPlandesc");
 if (!ECE315TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE315TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE315TraditionalPlanrflag=false
  }
};
$scope.ComplementaryElectiveTraditionalPlan1RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveTraditionalPlan1desc");
 if (!ComplementaryElectiveTraditionalPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveTraditionalPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveTraditionalPlan1rflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan1RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan1desc");
 if (!ProgramTechnicalElectiveTraditionalPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveTraditionalPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveTraditionalPlan1rflag=false
  }
};
$scope.ITSElectiveTraditionalPlan0RCListener = function () {
  var element = document.getElementById("ITSElectiveTraditionalPlan0desc");
 if (!ITSElectiveTraditionalPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ITSElectiveTraditionalPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ITSElectiveTraditionalPlan0rflag=false
  }
};
$scope.CMPUT301TraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT301TraditionalPlandesc");
 if (!CMPUT301TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT301TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT301TraditionalPlanrflag=false
  }
};
$scope.ECE304TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE304TraditionalPlandesc");
 if (!ECE304TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE304TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE304TraditionalPlanrflag=false
  }
};
$scope.ECE342TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE342TraditionalPlandesc");
 if (!ECE342TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE342TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE342TraditionalPlanrflag=false
  }
};
$scope.ECE410TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE410TraditionalPlandesc");
 if (!ECE410TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE410TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE410TraditionalPlanrflag=false
  }
};
$scope.ENGG404TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG404TraditionalPlandesc");
 if (!ENGG404TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG404TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG404TraditionalPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan2RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan2desc");
 if (!ProgramTechnicalElectiveTraditionalPlan2rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveTraditionalPlan2rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveTraditionalPlan2rflag=false
  }
};
$scope.ECE420TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE420TraditionalPlandesc");
 if (!ECE420TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE420TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE420TraditionalPlanrflag=false
  }
};
$scope.ECE487TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE487TraditionalPlandesc");
 if (!ECE487TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE487TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE487TraditionalPlanrflag=false
  }
};
$scope.ECE492TraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE492TraditionalPlandesc");
 if (!ECE492TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE492TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE492TraditionalPlanrflag=false
  }
};
$scope.ENGG400TraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG400TraditionalPlandesc");
 if (!ENGG400TraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG400TraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG400TraditionalPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan3RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan3desc");
 if (!ProgramTechnicalElectiveTraditionalPlan3rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveTraditionalPlan3rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveTraditionalPlan3rflag=false
  }
};
$scope.ProgramTechnicalElectiveTraditionalPlan4RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveTraditionalPlan4desc");
 if (!ProgramTechnicalElectiveTraditionalPlan4rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveTraditionalPlan4rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveTraditionalPlan4rflag=false
  }
};
  var CHEM103CoopPlanflag = false;
  var CHEM103CoopPlanrflag = false;
 var CHEM103CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CHEM103CoopPlan", []);
  var ENGG100CoopPlanflag = false;
  var ENGG100CoopPlanrflag = false;
 var ENGG100CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGG100CoopPlan", []);
  var ENGG130CoopPlanflag = false;
  var ENGG130CoopPlanrflag = false;
 var ENGG130CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGG130CoopPlan", []);
  var ENGL199CoopPlanflag = false;
  var ENGL199CoopPlanrflag = false;
 var ENGL199CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGL199CoopPlan", []);
  var MATH100CoopPlanflag = false;
  var MATH100CoopPlanrflag = false;
 var MATH100CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("MATH100CoopPlan", []);
  var PHYS130CoopPlanflag = false;
  var PHYS130CoopPlanrflag = false;
 var PHYS130CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("PHYS130CoopPlan", []);
  var CHEM105CoopPlanflag = false;
  var CHEM105CoopPlanrflag = false;
 var CHEM105CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CHEM105CoopPlan", []);
  var ENCMP100CoopPlanflag = false;
  var ENCMP100CoopPlanrflag = false;
 var ENCMP100CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENCMP100CoopPlan", []);
  var ENGG160CoopPlanflag = false;
  var ENGG160CoopPlanrflag = false;
 var ENGG160CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGG160CoopPlan", []);
  var ENPH131CoopPlanflag = false;
  var ENPH131CoopPlanrflag = false;
 var ENPH131CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENPH131CoopPlan", []);
  var MATH101CoopPlanflag = false;
  var MATH101CoopPlanrflag = false;
 var MATH101CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("MATH101CoopPlan", []);
  var MATH102CoopPlanflag = false;
  var MATH102CoopPlanrflag = false;
 var MATH102CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("MATH102CoopPlan", []);
  var CMPUT274CoopPlanflag = false;
  var CMPUT274CoopPlanrflag = false;
 var CMPUT274CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CMPUT274CoopPlan", []);
  var ECE202CoopPlanflag = false;
  var ECE202CoopPlanrflag = false;
 var ECE202CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE202CoopPlan", []);
  var ECE210CoopPlanflag = false;
  var ECE210CoopPlanrflag = false;
 var ECE210CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE210CoopPlan", []);
  var ENGG299CoopPlanflag = false;
  var ENGG299CoopPlanrflag = false;
 var ENGG299CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGG299CoopPlan", []);
  var MATH201CoopPlanflag = false;
  var MATH201CoopPlanrflag = false;
 var MATH201CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("MATH201CoopPlan", []);
  var MATH209CoopPlanflag = false;
  var MATH209CoopPlanrflag = false;
 var MATH209CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("MATH209CoopPlan", []);
  var CMPUT272CoopPlanflag = false;
  var CMPUT272CoopPlanrflag = false;
 var CMPUT272CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CMPUT272CoopPlan", []);
  var CMPUT275CoopPlanflag = false;
  var CMPUT275CoopPlanrflag = false;
 var CMPUT275CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CMPUT275CoopPlan", []);
  var ECE203CoopPlanflag = false;
  var ECE203CoopPlanrflag = false;
 var ECE203CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE203CoopPlan", []);
  var ECE212CoopPlanflag = false;
  var ECE212CoopPlanrflag = false;
 var ECE212CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE212CoopPlan", []);
  var ECE240CoopPlanflag = false;
  var ECE240CoopPlanrflag = false;
 var ECE240CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE240CoopPlan", []);
  var PHYS230CoopPlanflag = false;
  var PHYS230CoopPlanrflag = false;
 var PHYS230CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("PHYS230CoopPlan", []);
  var WKEXP901CoopPlanflag = false;
  var WKEXP901CoopPlanrflag = false;
 var WKEXP901CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("WKEXP901CoopPlan", []);
  var CMPUT291CoopPlanflag = false;
  var CMPUT291CoopPlanrflag = false;
 var CMPUT291CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CMPUT291CoopPlan", []);
  var ECE302CoopPlanflag = false;
  var ECE302CoopPlanrflag = false;
 var ECE302CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE302CoopPlan", []);
  var ECE311CoopPlanflag = false;
  var ECE311CoopPlanrflag = false;
 var ECE311CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE311CoopPlan", []);
  var ECE325CoopPlanflag = false;
  var ECE325CoopPlanrflag = false;
 var ECE325CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE325CoopPlan", []);
  var ECE340CoopPlanflag = false;
  var ECE340CoopPlanrflag = false;
 var ECE340CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE340CoopPlan", []);
  var ProgramTechnicalElectiveCoopPlan0flag = false;
  var ProgramTechnicalElectiveCoopPlan0rflag = false;
 var ProgramTechnicalElectiveCoopPlan0Time = new Date().getTime();
this.CoopPlanClickedMap.set("ProgramTechnicalElectiveCoopPlan0", []);
  var WKEXP902CoopPlanflag = false;
  var WKEXP902CoopPlanrflag = false;
 var WKEXP902CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("WKEXP902CoopPlan", []);
  var WKEXP903CoopPlanflag = false;
  var WKEXP903CoopPlanrflag = false;
 var WKEXP903CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("WKEXP903CoopPlan", []);
  var CMPUT379CoopPlanflag = false;
  var CMPUT379CoopPlanrflag = false;
 var CMPUT379CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CMPUT379CoopPlan", []);
  var ECE304CoopPlanflag = false;
  var ECE304CoopPlanrflag = false;
 var ECE304CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE304CoopPlan", []);
  var ECE342CoopPlanflag = false;
  var ECE342CoopPlanrflag = false;
 var ECE342CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE342CoopPlan", []);
  var ECE410CoopPlanflag = false;
  var ECE410CoopPlanrflag = false;
 var ECE410CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE410CoopPlan", []);
  var ComplementaryElectiveCoopPlan0flag = false;
  var ComplementaryElectiveCoopPlan0rflag = false;
 var ComplementaryElectiveCoopPlan0Time = new Date().getTime();
this.CoopPlanClickedMap.set("ComplementaryElectiveCoopPlan0", []);
  var ProgramTechnicalElectiveCoopPlan1flag = false;
  var ProgramTechnicalElectiveCoopPlan1rflag = false;
 var ProgramTechnicalElectiveCoopPlan1Time = new Date().getTime();
this.CoopPlanClickedMap.set("ProgramTechnicalElectiveCoopPlan1", []);
  var CMPUT301CoopPlanflag = false;
  var CMPUT301CoopPlanrflag = false;
 var CMPUT301CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("CMPUT301CoopPlan", []);
  var ECE315CoopPlanflag = false;
  var ECE315CoopPlanrflag = false;
 var ECE315CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE315CoopPlan", []);
  var ECE420CoopPlanflag = false;
  var ECE420CoopPlanrflag = false;
 var ECE420CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE420CoopPlan", []);
  var ComplementaryElectiveCoopPlan1flag = false;
  var ComplementaryElectiveCoopPlan1rflag = false;
 var ComplementaryElectiveCoopPlan1Time = new Date().getTime();
this.CoopPlanClickedMap.set("ComplementaryElectiveCoopPlan1", []);
  var ITSElectiveCoopPlan0flag = false;
  var ITSElectiveCoopPlan0rflag = false;
 var ITSElectiveCoopPlan0Time = new Date().getTime();
this.CoopPlanClickedMap.set("ITSElectiveCoopPlan0", []);
  var ProgramTechnicalElectiveCoopPlan2flag = false;
  var ProgramTechnicalElectiveCoopPlan2rflag = false;
 var ProgramTechnicalElectiveCoopPlan2Time = new Date().getTime();
this.CoopPlanClickedMap.set("ProgramTechnicalElectiveCoopPlan2", []);
  var WKEXP904CoopPlanflag = false;
  var WKEXP904CoopPlanrflag = false;
 var WKEXP904CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("WKEXP904CoopPlan", []);
  var WKEXP905CoopPlanflag = false;
  var WKEXP905CoopPlanrflag = false;
 var WKEXP905CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("WKEXP905CoopPlan", []);
  var ECE487CoopPlanflag = false;
  var ECE487CoopPlanrflag = false;
 var ECE487CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE487CoopPlan", []);
  var ECE492CoopPlanflag = false;
  var ECE492CoopPlanrflag = false;
 var ECE492CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ECE492CoopPlan", []);
  var ENGM310CoopPlanflag = false;
  var ENGM310CoopPlanrflag = false;
 var ENGM310CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGM310CoopPlan", []);
  var ENGM401CoopPlanflag = false;
  var ENGM401CoopPlanrflag = false;
 var ENGM401CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGM401CoopPlan", []);
  var ENGG400CoopPlanflag = false;
  var ENGG400CoopPlanrflag = false;
 var ENGG400CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGG400CoopPlan", []);
  var ENGG404CoopPlanflag = false;
  var ENGG404CoopPlanrflag = false;
 var ENGG404CoopPlanTime = new Date().getTime();
this.CoopPlanClickedMap.set("ENGG404CoopPlan", []);
  var ProgramTechnicalElectiveCoopPlan3flag = false;
  var ProgramTechnicalElectiveCoopPlan3rflag = false;
 var ProgramTechnicalElectiveCoopPlan3Time = new Date().getTime();
this.CoopPlanClickedMap.set("ProgramTechnicalElectiveCoopPlan3", []);
  var ProgramTechnicalElectiveCoopPlan4flag = false;
  var ProgramTechnicalElectiveCoopPlan4rflag = false;
 var ProgramTechnicalElectiveCoopPlan4Time = new Date().getTime();
this.CoopPlanClickedMap.set("ProgramTechnicalElectiveCoopPlan4", []);
$scope.CHEM103CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM103CoopPlanTime <= 200) { 
        CHEM103CoopPlanTime = currentTime;
        return;
    }
CHEM103CoopPlanTime = currentTime;
  var CHEM103CoopPlanelement = document.getElementById("CHEM103CoopPlan");
 if (!CHEM103CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CHEM103CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CHEM103CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CHEM103CoopPlan")[i];
        if (CHEM103CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM103CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine45());
     that.highlightElement(CHEM103CoopPlanelement, "NaturalSciences");
     that.addToClicked("CHEM103CoopPlan", "NaturalSciences");
      CHEM103CoopPlanflag=true
  }
 else {
      that.removeLine(getLine45());
     that.unHighlightElement(CHEM103CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM103CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM103CoopPlanelement, category);
}
      CHEM103CoopPlanflag=false
  }
};
$scope.ENGG100CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG100CoopPlanTime <= 200) { 
        ENGG100CoopPlanTime = currentTime;
        return;
    }
ENGG100CoopPlanTime = currentTime;
  var ENGG100CoopPlanelement = document.getElementById("ENGG100CoopPlan");
 if (!ENGG100CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGG100CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGG100CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGG100CoopPlan")[i];
        if (ENGG100CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG100CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG100CoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG100CoopPlan", "EngineeringProfession");
      ENGG100CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG100CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG100CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG100CoopPlanelement, category);
}
      ENGG100CoopPlanflag=false
  }
};
$scope.ENGG130CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG130CoopPlanTime <= 200) { 
        ENGG130CoopPlanTime = currentTime;
        return;
    }
ENGG130CoopPlanTime = currentTime;
  var ENGG130CoopPlanelement = document.getElementById("ENGG130CoopPlan");
 if (!ENGG130CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGG130CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGG130CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGG130CoopPlan")[i];
        if (ENGG130CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG130CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine43());
      that.addLine(getLine48());
     that.highlightElement(ENGG130CoopPlanelement, "NaturalSciences");
     that.addToClicked("ENGG130CoopPlan", "NaturalSciences");
      ENGG130CoopPlanflag=true
  }
 else {
      that.removeLine(getLine43());
      that.removeLine(getLine48());
     that.unHighlightElement(ENGG130CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENGG130CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENGG130CoopPlanelement, category);
}
      ENGG130CoopPlanflag=false
  }
};
$scope.ENGL199CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGL199CoopPlanTime <= 200) { 
        ENGL199CoopPlanTime = currentTime;
        return;
    }
ENGL199CoopPlanTime = currentTime;
  var ENGL199CoopPlanelement = document.getElementById("ENGL199CoopPlan");
 if (!ENGL199CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGL199CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGL199CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGL199CoopPlan")[i];
        if (ENGL199CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGL199CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine46());
     that.highlightElement(ENGL199CoopPlanelement, "Other");
     that.addToClicked("ENGL199CoopPlan", "Other");
      ENGL199CoopPlanflag=true
  }
 else {
      that.removeLine(getLine46());
     that.unHighlightElement(ENGL199CoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGL199CoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGL199CoopPlanelement, category);
}
      ENGL199CoopPlanflag=false
  }
};
$scope.MATH100CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH100CoopPlanTime <= 200) { 
        MATH100CoopPlanTime = currentTime;
        return;
    }
MATH100CoopPlanTime = currentTime;
  var MATH100CoopPlanelement = document.getElementById("MATH100CoopPlan");
 if (!MATH100CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("MATH100CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("MATH100CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("MATH100CoopPlan")[i];
        if (MATH100CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH100CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine43());
      that.addLine(getLine44());
      that.addLine(getLine47());
      that.addLine(getLine50());
      that.addLine(getLine51());
      that.addLine(getLine65());
     that.highlightElement(MATH100CoopPlanelement, "Math");
     that.addToClicked("MATH100CoopPlan", "Math");
      MATH100CoopPlanflag=true
  }
 else {
      that.removeLine(getLine43());
      that.removeLine(getLine44());
      that.removeLine(getLine47());
      that.removeLine(getLine50());
      that.removeLine(getLine51());
      that.removeLine(getLine65());
     that.unHighlightElement(MATH100CoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH100CoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH100CoopPlanelement, category);
}
      MATH100CoopPlanflag=false
  }
};
$scope.PHYS130CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS130CoopPlanTime <= 200) { 
        PHYS130CoopPlanTime = currentTime;
        return;
    }
PHYS130CoopPlanTime = currentTime;
  var PHYS130CoopPlanelement = document.getElementById("PHYS130CoopPlan");
 if (!PHYS130CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("PHYS130CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("PHYS130CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("PHYS130CoopPlan")[i];
        if (PHYS130CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS130CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine44());
      that.addLine(getLine64());
     that.highlightElement(PHYS130CoopPlanelement, "NaturalSciences");
     that.addToClicked("PHYS130CoopPlan", "NaturalSciences");
      PHYS130CoopPlanflag=true
  }
 else {
      that.removeLine(getLine44());
      that.removeLine(getLine64());
     that.unHighlightElement(PHYS130CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS130CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS130CoopPlanelement, category);
}
      PHYS130CoopPlanflag=false
  }
};
$scope.CHEM105CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM105CoopPlanTime <= 200) { 
        CHEM105CoopPlanTime = currentTime;
        return;
    }
CHEM105CoopPlanTime = currentTime;
  var CHEM105CoopPlanelement = document.getElementById("CHEM105CoopPlan");
 if (!CHEM105CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CHEM105CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CHEM105CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CHEM105CoopPlan")[i];
        if (CHEM105CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM105CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine45());
     that.highlightElement(CHEM105CoopPlanelement, "NaturalSciences");
     that.addToClicked("CHEM105CoopPlan", "NaturalSciences");
      CHEM105CoopPlanflag=true
  }
 else {
      that.removeLine(getLine45());
     that.unHighlightElement(CHEM105CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM105CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM105CoopPlanelement, category);
}
      CHEM105CoopPlanflag=false
  }
};
$scope.ENCMP100CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENCMP100CoopPlanTime <= 200) { 
        ENCMP100CoopPlanTime = currentTime;
        return;
    }
ENCMP100CoopPlanTime = currentTime;
  var ENCMP100CoopPlanelement = document.getElementById("ENCMP100CoopPlan");
 if (!ENCMP100CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENCMP100CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENCMP100CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENCMP100CoopPlan")[i];
        if (ENCMP100CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENCMP100CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENCMP100CoopPlanelement, "NaturalSciences");
     that.addToClicked("ENCMP100CoopPlan", "NaturalSciences");
      ENCMP100CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENCMP100CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENCMP100CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENCMP100CoopPlanelement, category);
}
      ENCMP100CoopPlanflag=false
  }
};
$scope.ENGG160CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG160CoopPlanTime <= 200) { 
        ENGG160CoopPlanTime = currentTime;
        return;
    }
ENGG160CoopPlanTime = currentTime;
  var ENGG160CoopPlanelement = document.getElementById("ENGG160CoopPlan");
 if (!ENGG160CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGG160CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGG160CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGG160CoopPlan")[i];
        if (ENGG160CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG160CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine46());
     that.highlightElement(ENGG160CoopPlanelement, "EngineeringDesign");
     that.addToClicked("ENGG160CoopPlan", "EngineeringDesign");
      ENGG160CoopPlanflag=true
  }
 else {
      that.removeLine(getLine46());
     that.unHighlightElement(ENGG160CoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ENGG160CoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ENGG160CoopPlanelement, category);
}
      ENGG160CoopPlanflag=false
  }
};
$scope.ENPH131CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENPH131CoopPlanTime <= 200) { 
        ENPH131CoopPlanTime = currentTime;
        return;
    }
ENPH131CoopPlanTime = currentTime;
  var ENPH131CoopPlanelement = document.getElementById("ENPH131CoopPlan");
 if (!ENPH131CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENPH131CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENPH131CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENPH131CoopPlan")[i];
        if (ENPH131CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENPH131CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine47());
      that.addLine(getLine48());
      that.addLine(getLine49());
     that.highlightElement(ENPH131CoopPlanelement, "NaturalSciences");
     that.addToClicked("ENPH131CoopPlan", "NaturalSciences");
      ENPH131CoopPlanflag=true
  }
 else {
      that.removeLine(getLine47());
      that.removeLine(getLine48());
      that.removeLine(getLine49());
     that.unHighlightElement(ENPH131CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENPH131CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENPH131CoopPlanelement, category);
}
      ENPH131CoopPlanflag=false
  }
};
$scope.MATH101CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH101CoopPlanTime <= 200) { 
        MATH101CoopPlanTime = currentTime;
        return;
    }
MATH101CoopPlanTime = currentTime;
  var MATH101CoopPlanelement = document.getElementById("MATH101CoopPlan");
 if (!MATH101CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("MATH101CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("MATH101CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("MATH101CoopPlan")[i];
        if (MATH101CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH101CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine49());
      that.addLine(getLine50());
      that.addLine(getLine52());
      that.addLine(getLine55());
      that.addLine(getLine66());
     that.highlightElement(MATH101CoopPlanelement, "Math");
     that.addToClicked("MATH101CoopPlan", "Math");
      MATH101CoopPlanflag=true
  }
 else {
      that.removeLine(getLine49());
      that.removeLine(getLine50());
      that.removeLine(getLine52());
      that.removeLine(getLine55());
      that.removeLine(getLine66());
     that.unHighlightElement(MATH101CoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH101CoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH101CoopPlanelement, category);
}
      MATH101CoopPlanflag=false
  }
};
$scope.MATH102CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH102CoopPlanTime <= 200) { 
        MATH102CoopPlanTime = currentTime;
        return;
    }
MATH102CoopPlanTime = currentTime;
  var MATH102CoopPlanelement = document.getElementById("MATH102CoopPlan");
 if (!MATH102CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("MATH102CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("MATH102CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("MATH102CoopPlan")[i];
        if (MATH102CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH102CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine51());
      that.addLine(getLine53());
      that.addLine(getLine56());
     that.highlightElement(MATH102CoopPlanelement, "Math");
     that.addToClicked("MATH102CoopPlan", "Math");
      MATH102CoopPlanflag=true
  }
 else {
      that.removeLine(getLine51());
      that.removeLine(getLine53());
      that.removeLine(getLine56());
     that.unHighlightElement(MATH102CoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH102CoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH102CoopPlanelement, category);
}
      MATH102CoopPlanflag=false
  }
};
$scope.CMPUT274CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT274CoopPlanTime <= 200) { 
        CMPUT274CoopPlanTime = currentTime;
        return;
    }
CMPUT274CoopPlanTime = currentTime;
  var CMPUT274CoopPlanelement = document.getElementById("CMPUT274CoopPlan");
 if (!CMPUT274CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CMPUT274CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CMPUT274CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CMPUT274CoopPlan")[i];
        if (CMPUT274CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT274CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine57());
      that.addLine(getLine58());
      that.addLine(getLine68());
     that.highlightElement(CMPUT274CoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT274CoopPlan", "ComputingScience");
      CMPUT274CoopPlanflag=true
  }
 else {
      that.removeLine(getLine57());
      that.removeLine(getLine58());
      that.removeLine(getLine68());
     that.unHighlightElement(CMPUT274CoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT274CoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT274CoopPlanelement, category);
}
      CMPUT274CoopPlanflag=false
  }
};
$scope.ECE202CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE202CoopPlanTime <= 200) { 
        ECE202CoopPlanTime = currentTime;
        return;
    }
ECE202CoopPlanTime = currentTime;
  var ECE202CoopPlanelement = document.getElementById("ECE202CoopPlan");
 if (!ECE202CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE202CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE202CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE202CoopPlan")[i];
        if (ECE202CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE202CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine52());
      that.addLine(getLine53());
      that.addLine(getLine59());
      that.addLine(getLine62());
     that.highlightElement(ECE202CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE202CoopPlan", "EngineeringSciences");
      ECE202CoopPlanflag=true
  }
 else {
      that.removeLine(getLine52());
      that.removeLine(getLine53());
      that.removeLine(getLine59());
      that.removeLine(getLine62());
     that.unHighlightElement(ECE202CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE202CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE202CoopPlanelement, category);
}
      ECE202CoopPlanflag=false
  }
};
$scope.ECE210CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE210CoopPlanTime <= 200) { 
        ECE210CoopPlanTime = currentTime;
        return;
    }
ECE210CoopPlanTime = currentTime;
  var ECE210CoopPlanelement = document.getElementById("ECE210CoopPlan");
 if (!ECE210CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE210CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE210CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE210CoopPlan")[i];
        if (ECE210CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE210CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine61());
      that.addLine(getLine79());
     that.highlightElement(ECE210CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE210CoopPlan", "EngineeringSciences");
      ECE210CoopPlanflag=true
  }
 else {
      that.removeLine(getLine61());
      that.removeLine(getLine79());
     that.unHighlightElement(ECE210CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE210CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE210CoopPlanelement, category);
}
      ECE210CoopPlanflag=false
  }
};
$scope.ENGG299CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG299CoopPlanTime <= 200) { 
        ENGG299CoopPlanTime = currentTime;
        return;
    }
ENGG299CoopPlanTime = currentTime;
  var ENGG299CoopPlanelement = document.getElementById("ENGG299CoopPlan");
 if (!ENGG299CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGG299CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGG299CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGG299CoopPlan")[i];
        if (ENGG299CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG299CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine67());
     that.highlightElement(ENGG299CoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG299CoopPlan", "EngineeringProfession");
      ENGG299CoopPlanflag=true
  }
 else {
      that.removeLine(getLine67());
     that.unHighlightElement(ENGG299CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG299CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG299CoopPlanelement, category);
}
      ENGG299CoopPlanflag=false
  }
};
$scope.MATH201CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH201CoopPlanTime <= 200) { 
        MATH201CoopPlanTime = currentTime;
        return;
    }
MATH201CoopPlanTime = currentTime;
  var MATH201CoopPlanelement = document.getElementById("MATH201CoopPlan");
 if (!MATH201CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("MATH201CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("MATH201CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("MATH201CoopPlan")[i];
        if (MATH201CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH201CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine54());
      that.addLine(getLine63());
     that.highlightElement(MATH201CoopPlanelement, "Math");
     that.addToClicked("MATH201CoopPlan", "Math");
      MATH201CoopPlanflag=true
  }
 else {
      that.removeLine(getLine54());
      that.removeLine(getLine63());
     that.unHighlightElement(MATH201CoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH201CoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH201CoopPlanelement, category);
}
      MATH201CoopPlanflag=false
  }
};
$scope.MATH209CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH209CoopPlanTime <= 200) { 
        MATH209CoopPlanTime = currentTime;
        return;
    }
MATH209CoopPlanTime = currentTime;
  var MATH209CoopPlanelement = document.getElementById("MATH209CoopPlan");
 if (!MATH209CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("MATH209CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("MATH209CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("MATH209CoopPlan")[i];
        if (MATH209CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH209CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine54());
      that.addLine(getLine55());
      that.addLine(getLine56());
      that.addLine(getLine81());
     that.highlightElement(MATH209CoopPlanelement, "Math");
     that.addToClicked("MATH209CoopPlan", "Math");
      MATH209CoopPlanflag=true
  }
 else {
      that.removeLine(getLine54());
      that.removeLine(getLine55());
      that.removeLine(getLine56());
      that.removeLine(getLine81());
     that.unHighlightElement(MATH209CoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH209CoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH209CoopPlanelement, category);
}
      MATH209CoopPlanflag=false
  }
};
$scope.CMPUT272CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT272CoopPlanTime <= 200) { 
        CMPUT272CoopPlanTime = currentTime;
        return;
    }
CMPUT272CoopPlanTime = currentTime;
  var CMPUT272CoopPlanelement = document.getElementById("CMPUT272CoopPlan");
 if (!CMPUT272CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CMPUT272CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CMPUT272CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CMPUT272CoopPlan")[i];
        if (CMPUT272CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT272CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine57());
      that.addLine(getLine69());
     that.highlightElement(CMPUT272CoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT272CoopPlan", "ComputingScience");
      CMPUT272CoopPlanflag=true
  }
 else {
      that.removeLine(getLine57());
      that.removeLine(getLine69());
     that.unHighlightElement(CMPUT272CoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT272CoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT272CoopPlanelement, category);
}
      CMPUT272CoopPlanflag=false
  }
};
$scope.CMPUT275CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT275CoopPlanTime <= 200) { 
        CMPUT275CoopPlanTime = currentTime;
        return;
    }
CMPUT275CoopPlanTime = currentTime;
  var CMPUT275CoopPlanelement = document.getElementById("CMPUT275CoopPlan");
 if (!CMPUT275CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CMPUT275CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CMPUT275CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CMPUT275CoopPlan")[i];
        if (CMPUT275CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT275CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine58());
      that.addLine(getLine70());
      that.addLine(getLine73());
      that.addLine(getLine77());
      that.addLine(getLine83());
      that.addLine(getLine85());
     that.highlightElement(CMPUT275CoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT275CoopPlan", "ComputingScience");
      CMPUT275CoopPlanflag=true
  }
 else {
      that.removeLine(getLine58());
      that.removeLine(getLine70());
      that.removeLine(getLine73());
      that.removeLine(getLine77());
      that.removeLine(getLine83());
      that.removeLine(getLine85());
     that.unHighlightElement(CMPUT275CoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT275CoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT275CoopPlanelement, category);
}
      CMPUT275CoopPlanflag=false
  }
};
$scope.ECE203CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE203CoopPlanTime <= 200) { 
        ECE203CoopPlanTime = currentTime;
        return;
    }
ECE203CoopPlanTime = currentTime;
  var ECE203CoopPlanelement = document.getElementById("ECE203CoopPlan");
 if (!ECE203CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE203CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE203CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE203CoopPlan")[i];
        if (ECE203CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE203CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine59());
      that.addLine(getLine60());
      that.addLine(getLine71());
     that.highlightElement(ECE203CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE203CoopPlan", "EngineeringSciences");
      ECE203CoopPlanflag=true
  }
 else {
      that.removeLine(getLine59());
      that.removeLine(getLine60());
      that.removeLine(getLine71());
     that.unHighlightElement(ECE203CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE203CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE203CoopPlanelement, category);
}
      ECE203CoopPlanflag=false
  }
};
$scope.ECE212CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE212CoopPlanTime <= 200) { 
        ECE212CoopPlanTime = currentTime;
        return;
    }
ECE212CoopPlanTime = currentTime;
  var ECE212CoopPlanelement = document.getElementById("ECE212CoopPlan");
 if (!ECE212CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE212CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE212CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE212CoopPlan")[i];
        if (ECE212CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE212CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine61());
      that.addLine(getLine72());
      that.addLine(getLine78());
      that.addLine(getLine84());
     that.highlightElement(ECE212CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE212CoopPlan", "EngineeringSciences");
      ECE212CoopPlanflag=true
  }
 else {
      that.removeLine(getLine61());
      that.removeLine(getLine72());
      that.removeLine(getLine78());
      that.removeLine(getLine84());
     that.unHighlightElement(ECE212CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE212CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE212CoopPlanelement, category);
}
      ECE212CoopPlanflag=false
  }
};
$scope.ECE240CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE240CoopPlanTime <= 200) { 
        ECE240CoopPlanTime = currentTime;
        return;
    }
ECE240CoopPlanTime = currentTime;
  var ECE240CoopPlanelement = document.getElementById("ECE240CoopPlan");
 if (!ECE240CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE240CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE240CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE240CoopPlan")[i];
        if (ECE240CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE240CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine60());
      that.addLine(getLine62());
      that.addLine(getLine63());
      that.addLine(getLine74());
     that.highlightElement(ECE240CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE240CoopPlan", "EngineeringSciences");
      ECE240CoopPlanflag=true
  }
 else {
      that.removeLine(getLine60());
      that.removeLine(getLine62());
      that.removeLine(getLine63());
      that.removeLine(getLine74());
     that.unHighlightElement(ECE240CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE240CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE240CoopPlanelement, category);
}
      ECE240CoopPlanflag=false
  }
};
$scope.PHYS230CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS230CoopPlanTime <= 200) { 
        PHYS230CoopPlanTime = currentTime;
        return;
    }
PHYS230CoopPlanTime = currentTime;
  var PHYS230CoopPlanelement = document.getElementById("PHYS230CoopPlan");
 if (!PHYS230CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("PHYS230CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("PHYS230CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("PHYS230CoopPlan")[i];
        if (PHYS230CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS230CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine64());
      that.addLine(getLine65());
      that.addLine(getLine66());
     that.highlightElement(PHYS230CoopPlanelement, "NaturalSciences");
     that.addToClicked("PHYS230CoopPlan", "NaturalSciences");
      PHYS230CoopPlanflag=true
  }
 else {
      that.removeLine(getLine64());
      that.removeLine(getLine65());
      that.removeLine(getLine66());
     that.unHighlightElement(PHYS230CoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS230CoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS230CoopPlanelement, category);
}
      PHYS230CoopPlanflag=false
  }
};
$scope.WKEXP901CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP901CoopPlanTime <= 200) { 
        WKEXP901CoopPlanTime = currentTime;
        return;
    }
WKEXP901CoopPlanTime = currentTime;
  var WKEXP901CoopPlanelement = document.getElementById("WKEXP901CoopPlan");
 if (!WKEXP901CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("WKEXP901CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("WKEXP901CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("WKEXP901CoopPlan")[i];
        if (WKEXP901CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP901CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine67());
      that.addLine(getLine75());
     that.highlightElement(WKEXP901CoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP901CoopPlan", "EngineeringProfession");
      WKEXP901CoopPlanflag=true
  }
 else {
      that.removeLine(getLine67());
      that.removeLine(getLine75());
     that.unHighlightElement(WKEXP901CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP901CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP901CoopPlanelement, category);
}
      WKEXP901CoopPlanflag=false
  }
};
$scope.CMPUT291CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT291CoopPlanTime <= 200) { 
        CMPUT291CoopPlanTime = currentTime;
        return;
    }
CMPUT291CoopPlanTime = currentTime;
  var CMPUT291CoopPlanelement = document.getElementById("CMPUT291CoopPlan");
 if (!CMPUT291CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CMPUT291CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CMPUT291CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CMPUT291CoopPlan")[i];
        if (CMPUT291CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT291CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine68());
      that.addLine(getLine69());
      that.addLine(getLine70());
     that.highlightElement(CMPUT291CoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT291CoopPlan", "ComputingScience");
      CMPUT291CoopPlanflag=true
  }
 else {
      that.removeLine(getLine68());
      that.removeLine(getLine69());
      that.removeLine(getLine70());
     that.unHighlightElement(CMPUT291CoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT291CoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT291CoopPlanelement, category);
}
      CMPUT291CoopPlanflag=false
  }
};
$scope.ECE302CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE302CoopPlanTime <= 200) { 
        ECE302CoopPlanTime = currentTime;
        return;
    }
ECE302CoopPlanTime = currentTime;
  var ECE302CoopPlanelement = document.getElementById("ECE302CoopPlan");
 if (!ECE302CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE302CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE302CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE302CoopPlan")[i];
        if (ECE302CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE302CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine71());
      that.addLine(getLine80());
     that.highlightElement(ECE302CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE302CoopPlan", "EngineeringSciences");
      ECE302CoopPlanflag=true
  }
 else {
      that.removeLine(getLine71());
      that.removeLine(getLine80());
     that.unHighlightElement(ECE302CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE302CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE302CoopPlanelement, category);
}
      ECE302CoopPlanflag=false
  }
};
$scope.ECE311CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE311CoopPlanTime <= 200) { 
        ECE311CoopPlanTime = currentTime;
        return;
    }
ECE311CoopPlanTime = currentTime;
  var ECE311CoopPlanelement = document.getElementById("ECE311CoopPlan");
 if (!ECE311CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE311CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE311CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE311CoopPlan")[i];
        if (ECE311CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE311CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine72());
     that.highlightElement(ECE311CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE311CoopPlan", "EngineeringSciences");
      ECE311CoopPlanflag=true
  }
 else {
      that.removeLine(getLine72());
     that.unHighlightElement(ECE311CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE311CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE311CoopPlanelement, category);
}
      ECE311CoopPlanflag=false
  }
};
$scope.ECE325CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE325CoopPlanTime <= 200) { 
        ECE325CoopPlanTime = currentTime;
        return;
    }
ECE325CoopPlanTime = currentTime;
  var ECE325CoopPlanelement = document.getElementById("ECE325CoopPlan");
 if (!ECE325CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE325CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE325CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE325CoopPlan")[i];
        if (ECE325CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE325CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine73());
     that.highlightElement(ECE325CoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE325CoopPlan", "EngineeringDesign");
      ECE325CoopPlanflag=true
  }
 else {
      that.removeLine(getLine73());
     that.unHighlightElement(ECE325CoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE325CoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE325CoopPlanelement, category);
}
      ECE325CoopPlanflag=false
  }
};
$scope.ECE340CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE340CoopPlanTime <= 200) { 
        ECE340CoopPlanTime = currentTime;
        return;
    }
ECE340CoopPlanTime = currentTime;
  var ECE340CoopPlanelement = document.getElementById("ECE340CoopPlan");
 if (!ECE340CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE340CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE340CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE340CoopPlan")[i];
        if (ECE340CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE340CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine74());
     that.highlightElement(ECE340CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE340CoopPlan", "EngineeringSciences");
      ECE340CoopPlanflag=true
  }
 else {
      that.removeLine(getLine74());
     that.unHighlightElement(ECE340CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE340CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE340CoopPlanelement, category);
}
      ECE340CoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveCoopPlan0Time <= 200) { 
        ProgramTechnicalElectiveCoopPlan0Time = currentTime;
        return;
    }
ProgramTechnicalElectiveCoopPlan0Time = currentTime;
  var ProgramTechnicalElectiveCoopPlan0element = document.getElementById("ProgramTechnicalElectiveCoopPlan0");
 if (!ProgramTechnicalElectiveCoopPlan0flag) {
     if (that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan0").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan0")[i];
        if (ProgramTechnicalElectiveCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveCoopPlan0element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveCoopPlan0", "PROG");
      ProgramTechnicalElectiveCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveCoopPlan0element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveCoopPlan0", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveCoopPlan0element, category);
}
      ProgramTechnicalElectiveCoopPlan0flag=false
  }
};
$scope.WKEXP902CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP902CoopPlanTime <= 200) { 
        WKEXP902CoopPlanTime = currentTime;
        return;
    }
WKEXP902CoopPlanTime = currentTime;
  var WKEXP902CoopPlanelement = document.getElementById("WKEXP902CoopPlan");
 if (!WKEXP902CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("WKEXP902CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("WKEXP902CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("WKEXP902CoopPlan")[i];
        if (WKEXP902CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP902CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine75());
      that.addLine(getLine76());
     that.highlightElement(WKEXP902CoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP902CoopPlan", "EngineeringProfession");
      WKEXP902CoopPlanflag=true
  }
 else {
      that.removeLine(getLine75());
      that.removeLine(getLine76());
     that.unHighlightElement(WKEXP902CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP902CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP902CoopPlanelement, category);
}
      WKEXP902CoopPlanflag=false
  }
};
$scope.WKEXP903CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP903CoopPlanTime <= 200) { 
        WKEXP903CoopPlanTime = currentTime;
        return;
    }
WKEXP903CoopPlanTime = currentTime;
  var WKEXP903CoopPlanelement = document.getElementById("WKEXP903CoopPlan");
 if (!WKEXP903CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("WKEXP903CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("WKEXP903CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("WKEXP903CoopPlan")[i];
        if (WKEXP903CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP903CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine76());
      that.addLine(getLine87());
     that.highlightElement(WKEXP903CoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP903CoopPlan", "EngineeringProfession");
      WKEXP903CoopPlanflag=true
  }
 else {
      that.removeLine(getLine76());
      that.removeLine(getLine87());
     that.unHighlightElement(WKEXP903CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP903CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP903CoopPlanelement, category);
}
      WKEXP903CoopPlanflag=false
  }
};
$scope.CMPUT379CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT379CoopPlanTime <= 200) { 
        CMPUT379CoopPlanTime = currentTime;
        return;
    }
CMPUT379CoopPlanTime = currentTime;
  var CMPUT379CoopPlanelement = document.getElementById("CMPUT379CoopPlan");
 if (!CMPUT379CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CMPUT379CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CMPUT379CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CMPUT379CoopPlan")[i];
        if (CMPUT379CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT379CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine77());
      that.addLine(getLine78());
      that.addLine(getLine86());
     that.highlightElement(CMPUT379CoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT379CoopPlan", "ComputingScience");
      CMPUT379CoopPlanflag=true
  }
 else {
      that.removeLine(getLine77());
      that.removeLine(getLine78());
      that.removeLine(getLine86());
     that.unHighlightElement(CMPUT379CoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT379CoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT379CoopPlanelement, category);
}
      CMPUT379CoopPlanflag=false
  }
};
$scope.ECE304CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE304CoopPlanTime <= 200) { 
        ECE304CoopPlanTime = currentTime;
        return;
    }
ECE304CoopPlanTime = currentTime;
  var ECE304CoopPlanelement = document.getElementById("ECE304CoopPlan");
 if (!ECE304CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE304CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE304CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE304CoopPlan")[i];
        if (ECE304CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE304CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine79());
      that.addLine(getLine80());
      that.addLine(getLine82());
     that.highlightElement(ECE304CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE304CoopPlan", "EngineeringSciences");
      ECE304CoopPlanflag=true
  }
 else {
      that.removeLine(getLine79());
      that.removeLine(getLine80());
      that.removeLine(getLine82());
     that.unHighlightElement(ECE304CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE304CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE304CoopPlanelement, category);
}
      ECE304CoopPlanflag=false
  }
};
$scope.ECE342CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE342CoopPlanTime <= 200) { 
        ECE342CoopPlanTime = currentTime;
        return;
    }
ECE342CoopPlanTime = currentTime;
  var ECE342CoopPlanelement = document.getElementById("ECE342CoopPlan");
 if (!ECE342CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE342CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE342CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE342CoopPlan")[i];
        if (ECE342CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE342CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine81());
     that.highlightElement(ECE342CoopPlanelement, "Math");
     that.addToClicked("ECE342CoopPlan", "Math");
      ECE342CoopPlanflag=true
  }
 else {
      that.removeLine(getLine81());
     that.unHighlightElement(ECE342CoopPlanelement, "Math");
     var category = that.removeFromClicked("ECE342CoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(ECE342CoopPlanelement, category);
}
      ECE342CoopPlanflag=false
  }
};
$scope.ECE410CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE410CoopPlanTime <= 200) { 
        ECE410CoopPlanTime = currentTime;
        return;
    }
ECE410CoopPlanTime = currentTime;
  var ECE410CoopPlanelement = document.getElementById("ECE410CoopPlan");
 if (!ECE410CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE410CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE410CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE410CoopPlan")[i];
        if (ECE410CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE410CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine82());
      that.addLine(getLine90());
     that.highlightElement(ECE410CoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE410CoopPlan", "EngineeringDesign");
      ECE410CoopPlanflag=true
  }
 else {
      that.removeLine(getLine82());
      that.removeLine(getLine90());
     that.unHighlightElement(ECE410CoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE410CoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE410CoopPlanelement, category);
}
      ECE410CoopPlanflag=false
  }
};
$scope.ComplementaryElectiveCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveCoopPlan0Time <= 200) { 
        ComplementaryElectiveCoopPlan0Time = currentTime;
        return;
    }
ComplementaryElectiveCoopPlan0Time = currentTime;
  var ComplementaryElectiveCoopPlan0element = document.getElementById("ComplementaryElectiveCoopPlan0");
 if (!ComplementaryElectiveCoopPlan0flag) {
     if (that.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan0").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan0")[i];
        if (ComplementaryElectiveCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveCoopPlan0element, "COMP");
     that.addToClicked("ComplementaryElectiveCoopPlan0", "COMP");
      ComplementaryElectiveCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveCoopPlan0element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveCoopPlan0", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveCoopPlan0element, category);
}
      ComplementaryElectiveCoopPlan0flag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveCoopPlan1Time <= 200) { 
        ProgramTechnicalElectiveCoopPlan1Time = currentTime;
        return;
    }
ProgramTechnicalElectiveCoopPlan1Time = currentTime;
  var ProgramTechnicalElectiveCoopPlan1element = document.getElementById("ProgramTechnicalElectiveCoopPlan1");
 if (!ProgramTechnicalElectiveCoopPlan1flag) {
     if (that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan1").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan1")[i];
        if (ProgramTechnicalElectiveCoopPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveCoopPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveCoopPlan1element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveCoopPlan1", "PROG");
      ProgramTechnicalElectiveCoopPlan1flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveCoopPlan1element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveCoopPlan1", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveCoopPlan1element, category);
}
      ProgramTechnicalElectiveCoopPlan1flag=false
  }
};
$scope.CMPUT301CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT301CoopPlanTime <= 200) { 
        CMPUT301CoopPlanTime = currentTime;
        return;
    }
CMPUT301CoopPlanTime = currentTime;
  var CMPUT301CoopPlanelement = document.getElementById("CMPUT301CoopPlan");
 if (!CMPUT301CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("CMPUT301CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("CMPUT301CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("CMPUT301CoopPlan")[i];
        if (CMPUT301CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT301CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine83());
     that.highlightElement(CMPUT301CoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT301CoopPlan", "ComputingScience");
      CMPUT301CoopPlanflag=true
  }
 else {
      that.removeLine(getLine83());
     that.unHighlightElement(CMPUT301CoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT301CoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT301CoopPlanelement, category);
}
      CMPUT301CoopPlanflag=false
  }
};
$scope.ECE315CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE315CoopPlanTime <= 200) { 
        ECE315CoopPlanTime = currentTime;
        return;
    }
ECE315CoopPlanTime = currentTime;
  var ECE315CoopPlanelement = document.getElementById("ECE315CoopPlan");
 if (!ECE315CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE315CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE315CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE315CoopPlan")[i];
        if (ECE315CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE315CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine84());
      that.addLine(getLine89());
     that.highlightElement(ECE315CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE315CoopPlan", "EngineeringSciences");
      ECE315CoopPlanflag=true
  }
 else {
      that.removeLine(getLine84());
      that.removeLine(getLine89());
     that.unHighlightElement(ECE315CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE315CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE315CoopPlanelement, category);
}
      ECE315CoopPlanflag=false
  }
};
$scope.ECE420CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE420CoopPlanTime <= 200) { 
        ECE420CoopPlanTime = currentTime;
        return;
    }
ECE420CoopPlanTime = currentTime;
  var ECE420CoopPlanelement = document.getElementById("ECE420CoopPlan");
 if (!ECE420CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE420CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE420CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE420CoopPlan")[i];
        if (ECE420CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE420CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine85());
      that.addLine(getLine86());
     that.highlightElement(ECE420CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE420CoopPlan", "EngineeringSciences");
      ECE420CoopPlanflag=true
  }
 else {
      that.removeLine(getLine85());
      that.removeLine(getLine86());
     that.unHighlightElement(ECE420CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE420CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE420CoopPlanelement, category);
}
      ECE420CoopPlanflag=false
  }
};
$scope.ComplementaryElectiveCoopPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveCoopPlan1Time <= 200) { 
        ComplementaryElectiveCoopPlan1Time = currentTime;
        return;
    }
ComplementaryElectiveCoopPlan1Time = currentTime;
  var ComplementaryElectiveCoopPlan1element = document.getElementById("ComplementaryElectiveCoopPlan1");
 if (!ComplementaryElectiveCoopPlan1flag) {
     if (that.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan1").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ComplementaryElectiveCoopPlan1")[i];
        if (ComplementaryElectiveCoopPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveCoopPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveCoopPlan1element, "COMP");
     that.addToClicked("ComplementaryElectiveCoopPlan1", "COMP");
      ComplementaryElectiveCoopPlan1flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveCoopPlan1element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveCoopPlan1", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveCoopPlan1element, category);
}
      ComplementaryElectiveCoopPlan1flag=false
  }
};
$scope.ITSElectiveCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ITSElectiveCoopPlan0Time <= 200) { 
        ITSElectiveCoopPlan0Time = currentTime;
        return;
    }
ITSElectiveCoopPlan0Time = currentTime;
  var ITSElectiveCoopPlan0element = document.getElementById("ITSElectiveCoopPlan0");
 if (!ITSElectiveCoopPlan0flag) {
     if (that.CoopPlanClickedMap.get("ITSElectiveCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ITSElectiveCoopPlan0").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ITSElectiveCoopPlan0")[i];
        if (ITSElectiveCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ITSElectiveCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ITSElectiveCoopPlan0element, "ITS");
     that.addToClicked("ITSElectiveCoopPlan0", "ITS");
      ITSElectiveCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ITSElectiveCoopPlan0element, "ITS");
     var category = that.removeFromClicked("ITSElectiveCoopPlan0", "ITS");
  if (category != "") { 
     that.highlightElement(ITSElectiveCoopPlan0element, category);
}
      ITSElectiveCoopPlan0flag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan2Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveCoopPlan2Time <= 200) { 
        ProgramTechnicalElectiveCoopPlan2Time = currentTime;
        return;
    }
ProgramTechnicalElectiveCoopPlan2Time = currentTime;
  var ProgramTechnicalElectiveCoopPlan2element = document.getElementById("ProgramTechnicalElectiveCoopPlan2");
 if (!ProgramTechnicalElectiveCoopPlan2flag) {
     if (that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan2").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan2").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan2")[i];
        if (ProgramTechnicalElectiveCoopPlan2element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveCoopPlan2element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveCoopPlan2element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveCoopPlan2", "PROG");
      ProgramTechnicalElectiveCoopPlan2flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveCoopPlan2element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveCoopPlan2", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveCoopPlan2element, category);
}
      ProgramTechnicalElectiveCoopPlan2flag=false
  }
};
$scope.WKEXP904CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP904CoopPlanTime <= 200) { 
        WKEXP904CoopPlanTime = currentTime;
        return;
    }
WKEXP904CoopPlanTime = currentTime;
  var WKEXP904CoopPlanelement = document.getElementById("WKEXP904CoopPlan");
 if (!WKEXP904CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("WKEXP904CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("WKEXP904CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("WKEXP904CoopPlan")[i];
        if (WKEXP904CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP904CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine87());
      that.addLine(getLine88());
     that.highlightElement(WKEXP904CoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP904CoopPlan", "EngineeringProfession");
      WKEXP904CoopPlanflag=true
  }
 else {
      that.removeLine(getLine87());
      that.removeLine(getLine88());
     that.unHighlightElement(WKEXP904CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP904CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP904CoopPlanelement, category);
}
      WKEXP904CoopPlanflag=false
  }
};
$scope.WKEXP905CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP905CoopPlanTime <= 200) { 
        WKEXP905CoopPlanTime = currentTime;
        return;
    }
WKEXP905CoopPlanTime = currentTime;
  var WKEXP905CoopPlanelement = document.getElementById("WKEXP905CoopPlan");
 if (!WKEXP905CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("WKEXP905CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("WKEXP905CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("WKEXP905CoopPlan")[i];
        if (WKEXP905CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP905CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine88());
     that.highlightElement(WKEXP905CoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP905CoopPlan", "EngineeringProfession");
      WKEXP905CoopPlanflag=true
  }
 else {
      that.removeLine(getLine88());
     that.unHighlightElement(WKEXP905CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP905CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP905CoopPlanelement, category);
}
      WKEXP905CoopPlanflag=false
  }
};
$scope.ECE487CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE487CoopPlanTime <= 200) { 
        ECE487CoopPlanTime = currentTime;
        return;
    }
ECE487CoopPlanTime = currentTime;
  var ECE487CoopPlanelement = document.getElementById("ECE487CoopPlan");
 if (!ECE487CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE487CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE487CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE487CoopPlan")[i];
        if (ECE487CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE487CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ECE487CoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE487CoopPlan", "EngineeringSciences");
      ECE487CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ECE487CoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE487CoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE487CoopPlanelement, category);
}
      ECE487CoopPlanflag=false
  }
};
$scope.ECE492CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE492CoopPlanTime <= 200) { 
        ECE492CoopPlanTime = currentTime;
        return;
    }
ECE492CoopPlanTime = currentTime;
  var ECE492CoopPlanelement = document.getElementById("ECE492CoopPlan");
 if (!ECE492CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ECE492CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ECE492CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ECE492CoopPlan")[i];
        if (ECE492CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE492CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine89());
      that.addLine(getLine90());
     that.highlightElement(ECE492CoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE492CoopPlan", "EngineeringDesign");
      ECE492CoopPlanflag=true
  }
 else {
      that.removeLine(getLine89());
      that.removeLine(getLine90());
     that.unHighlightElement(ECE492CoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE492CoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE492CoopPlanelement, category);
}
      ECE492CoopPlanflag=false
  }
};
$scope.ENGM310CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM310CoopPlanTime <= 200) { 
        ENGM310CoopPlanTime = currentTime;
        return;
    }
ENGM310CoopPlanTime = currentTime;
  var ENGM310CoopPlanelement = document.getElementById("ENGM310CoopPlan");
 if (!ENGM310CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGM310CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGM310CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGM310CoopPlan")[i];
        if (ENGM310CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM310CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM310CoopPlanelement, "Other");
     that.addToClicked("ENGM310CoopPlan", "Other");
      ENGM310CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM310CoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGM310CoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM310CoopPlanelement, category);
}
      ENGM310CoopPlanflag=false
  }
};
$scope.ENGM401CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM401CoopPlanTime <= 200) { 
        ENGM401CoopPlanTime = currentTime;
        return;
    }
ENGM401CoopPlanTime = currentTime;
  var ENGM401CoopPlanelement = document.getElementById("ENGM401CoopPlan");
 if (!ENGM401CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGM401CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGM401CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGM401CoopPlan")[i];
        if (ENGM401CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM401CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM401CoopPlanelement, "Other");
     that.addToClicked("ENGM401CoopPlan", "Other");
      ENGM401CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM401CoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGM401CoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM401CoopPlanelement, category);
}
      ENGM401CoopPlanflag=false
  }
};
$scope.ENGG400CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG400CoopPlanTime <= 200) { 
        ENGG400CoopPlanTime = currentTime;
        return;
    }
ENGG400CoopPlanTime = currentTime;
  var ENGG400CoopPlanelement = document.getElementById("ENGG400CoopPlan");
 if (!ENGG400CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGG400CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGG400CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGG400CoopPlan")[i];
        if (ENGG400CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG400CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG400CoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG400CoopPlan", "EngineeringProfession");
      ENGG400CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG400CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG400CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG400CoopPlanelement, category);
}
      ENGG400CoopPlanflag=false
  }
};
$scope.ENGG404CoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG404CoopPlanTime <= 200) { 
        ENGG404CoopPlanTime = currentTime;
        return;
    }
ENGG404CoopPlanTime = currentTime;
  var ENGG404CoopPlanelement = document.getElementById("ENGG404CoopPlan");
 if (!ENGG404CoopPlanflag) {
     if (that.CoopPlanClickedMap.get("ENGG404CoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ENGG404CoopPlan").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ENGG404CoopPlan")[i];
        if (ENGG404CoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG404CoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG404CoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG404CoopPlan", "EngineeringProfession");
      ENGG404CoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG404CoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG404CoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG404CoopPlanelement, category);
}
      ENGG404CoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan3Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveCoopPlan3Time <= 200) { 
        ProgramTechnicalElectiveCoopPlan3Time = currentTime;
        return;
    }
ProgramTechnicalElectiveCoopPlan3Time = currentTime;
  var ProgramTechnicalElectiveCoopPlan3element = document.getElementById("ProgramTechnicalElectiveCoopPlan3");
 if (!ProgramTechnicalElectiveCoopPlan3flag) {
     if (that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan3").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan3").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan3")[i];
        if (ProgramTechnicalElectiveCoopPlan3element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveCoopPlan3element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveCoopPlan3element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveCoopPlan3", "PROG");
      ProgramTechnicalElectiveCoopPlan3flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveCoopPlan3element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveCoopPlan3", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveCoopPlan3element, category);
}
      ProgramTechnicalElectiveCoopPlan3flag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan4Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveCoopPlan4Time <= 200) { 
        ProgramTechnicalElectiveCoopPlan4Time = currentTime;
        return;
    }
ProgramTechnicalElectiveCoopPlan4Time = currentTime;
  var ProgramTechnicalElectiveCoopPlan4element = document.getElementById("ProgramTechnicalElectiveCoopPlan4");
 if (!ProgramTechnicalElectiveCoopPlan4flag) {
     if (that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan4").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan4").length; i++) { 
        var cate = that.CoopPlanClickedMap.get("ProgramTechnicalElectiveCoopPlan4")[i];
        if (ProgramTechnicalElectiveCoopPlan4element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveCoopPlan4element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveCoopPlan4element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveCoopPlan4", "PROG");
      ProgramTechnicalElectiveCoopPlan4flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveCoopPlan4element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveCoopPlan4", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveCoopPlan4element, category);
}
      ProgramTechnicalElectiveCoopPlan4flag=false
  }
};
$scope.CHEM103CoopPlanRCListener = function () {
  var element = document.getElementById("CHEM103CoopPlandesc");
 if (!CHEM103CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM103CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM103CoopPlanrflag=false
  }
};
$scope.ENGG100CoopPlanRCListener = function () {
  var element = document.getElementById("ENGG100CoopPlandesc");
 if (!ENGG100CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG100CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG100CoopPlanrflag=false
  }
};
$scope.ENGG130CoopPlanRCListener = function () {
  var element = document.getElementById("ENGG130CoopPlandesc");
 if (!ENGG130CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG130CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG130CoopPlanrflag=false
  }
};
$scope.ENGL199CoopPlanRCListener = function () {
  var element = document.getElementById("ENGL199CoopPlandesc");
 if (!ENGL199CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGL199CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGL199CoopPlanrflag=false
  }
};
$scope.MATH100CoopPlanRCListener = function () {
  var element = document.getElementById("MATH100CoopPlandesc");
 if (!MATH100CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH100CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH100CoopPlanrflag=false
  }
};
$scope.PHYS130CoopPlanRCListener = function () {
  var element = document.getElementById("PHYS130CoopPlandesc");
 if (!PHYS130CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS130CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS130CoopPlanrflag=false
  }
};
$scope.CHEM105CoopPlanRCListener = function () {
  var element = document.getElementById("CHEM105CoopPlandesc");
 if (!CHEM105CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM105CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM105CoopPlanrflag=false
  }
};
$scope.ENCMP100CoopPlanRCListener = function () {
  var element = document.getElementById("ENCMP100CoopPlandesc");
 if (!ENCMP100CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENCMP100CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENCMP100CoopPlanrflag=false
  }
};
$scope.ENGG160CoopPlanRCListener = function () {
  var element = document.getElementById("ENGG160CoopPlandesc");
 if (!ENGG160CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG160CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG160CoopPlanrflag=false
  }
};
$scope.ENPH131CoopPlanRCListener = function () {
  var element = document.getElementById("ENPH131CoopPlandesc");
 if (!ENPH131CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENPH131CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENPH131CoopPlanrflag=false
  }
};
$scope.MATH101CoopPlanRCListener = function () {
  var element = document.getElementById("MATH101CoopPlandesc");
 if (!MATH101CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH101CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH101CoopPlanrflag=false
  }
};
$scope.MATH102CoopPlanRCListener = function () {
  var element = document.getElementById("MATH102CoopPlandesc");
 if (!MATH102CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH102CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH102CoopPlanrflag=false
  }
};
$scope.CMPUT274CoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT274CoopPlandesc");
 if (!CMPUT274CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT274CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT274CoopPlanrflag=false
  }
};
$scope.ECE202CoopPlanRCListener = function () {
  var element = document.getElementById("ECE202CoopPlandesc");
 if (!ECE202CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE202CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE202CoopPlanrflag=false
  }
};
$scope.ECE210CoopPlanRCListener = function () {
  var element = document.getElementById("ECE210CoopPlandesc");
 if (!ECE210CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE210CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE210CoopPlanrflag=false
  }
};
$scope.ENGG299CoopPlanRCListener = function () {
  var element = document.getElementById("ENGG299CoopPlandesc");
 if (!ENGG299CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG299CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG299CoopPlanrflag=false
  }
};
$scope.MATH201CoopPlanRCListener = function () {
  var element = document.getElementById("MATH201CoopPlandesc");
 if (!MATH201CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH201CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH201CoopPlanrflag=false
  }
};
$scope.MATH209CoopPlanRCListener = function () {
  var element = document.getElementById("MATH209CoopPlandesc");
 if (!MATH209CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH209CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH209CoopPlanrflag=false
  }
};
$scope.CMPUT272CoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT272CoopPlandesc");
 if (!CMPUT272CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT272CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT272CoopPlanrflag=false
  }
};
$scope.CMPUT275CoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT275CoopPlandesc");
 if (!CMPUT275CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT275CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT275CoopPlanrflag=false
  }
};
$scope.ECE203CoopPlanRCListener = function () {
  var element = document.getElementById("ECE203CoopPlandesc");
 if (!ECE203CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE203CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE203CoopPlanrflag=false
  }
};
$scope.ECE212CoopPlanRCListener = function () {
  var element = document.getElementById("ECE212CoopPlandesc");
 if (!ECE212CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE212CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE212CoopPlanrflag=false
  }
};
$scope.ECE240CoopPlanRCListener = function () {
  var element = document.getElementById("ECE240CoopPlandesc");
 if (!ECE240CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE240CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE240CoopPlanrflag=false
  }
};
$scope.PHYS230CoopPlanRCListener = function () {
  var element = document.getElementById("PHYS230CoopPlandesc");
 if (!PHYS230CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS230CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS230CoopPlanrflag=false
  }
};
$scope.WKEXP901CoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP901CoopPlandesc");
 if (!WKEXP901CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP901CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP901CoopPlanrflag=false
  }
};
$scope.CMPUT291CoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT291CoopPlandesc");
 if (!CMPUT291CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT291CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT291CoopPlanrflag=false
  }
};
$scope.ECE302CoopPlanRCListener = function () {
  var element = document.getElementById("ECE302CoopPlandesc");
 if (!ECE302CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE302CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE302CoopPlanrflag=false
  }
};
$scope.ECE311CoopPlanRCListener = function () {
  var element = document.getElementById("ECE311CoopPlandesc");
 if (!ECE311CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE311CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE311CoopPlanrflag=false
  }
};
$scope.ECE325CoopPlanRCListener = function () {
  var element = document.getElementById("ECE325CoopPlandesc");
 if (!ECE325CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE325CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE325CoopPlanrflag=false
  }
};
$scope.ECE340CoopPlanRCListener = function () {
  var element = document.getElementById("ECE340CoopPlandesc");
 if (!ECE340CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE340CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE340CoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan0RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveCoopPlan0desc");
 if (!ProgramTechnicalElectiveCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveCoopPlan0rflag=false
  }
};
$scope.WKEXP902CoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP902CoopPlandesc");
 if (!WKEXP902CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP902CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP902CoopPlanrflag=false
  }
};
$scope.WKEXP903CoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP903CoopPlandesc");
 if (!WKEXP903CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP903CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP903CoopPlanrflag=false
  }
};
$scope.CMPUT379CoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT379CoopPlandesc");
 if (!CMPUT379CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT379CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT379CoopPlanrflag=false
  }
};
$scope.ECE304CoopPlanRCListener = function () {
  var element = document.getElementById("ECE304CoopPlandesc");
 if (!ECE304CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE304CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE304CoopPlanrflag=false
  }
};
$scope.ECE342CoopPlanRCListener = function () {
  var element = document.getElementById("ECE342CoopPlandesc");
 if (!ECE342CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE342CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE342CoopPlanrflag=false
  }
};
$scope.ECE410CoopPlanRCListener = function () {
  var element = document.getElementById("ECE410CoopPlandesc");
 if (!ECE410CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE410CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE410CoopPlanrflag=false
  }
};
$scope.ComplementaryElectiveCoopPlan0RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveCoopPlan0desc");
 if (!ComplementaryElectiveCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveCoopPlan0rflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan1RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveCoopPlan1desc");
 if (!ProgramTechnicalElectiveCoopPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveCoopPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveCoopPlan1rflag=false
  }
};
$scope.CMPUT301CoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT301CoopPlandesc");
 if (!CMPUT301CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT301CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT301CoopPlanrflag=false
  }
};
$scope.ECE315CoopPlanRCListener = function () {
  var element = document.getElementById("ECE315CoopPlandesc");
 if (!ECE315CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE315CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE315CoopPlanrflag=false
  }
};
$scope.ECE420CoopPlanRCListener = function () {
  var element = document.getElementById("ECE420CoopPlandesc");
 if (!ECE420CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE420CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE420CoopPlanrflag=false
  }
};
$scope.ComplementaryElectiveCoopPlan1RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveCoopPlan1desc");
 if (!ComplementaryElectiveCoopPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveCoopPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveCoopPlan1rflag=false
  }
};
$scope.ITSElectiveCoopPlan0RCListener = function () {
  var element = document.getElementById("ITSElectiveCoopPlan0desc");
 if (!ITSElectiveCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ITSElectiveCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ITSElectiveCoopPlan0rflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan2RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveCoopPlan2desc");
 if (!ProgramTechnicalElectiveCoopPlan2rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveCoopPlan2rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveCoopPlan2rflag=false
  }
};
$scope.WKEXP904CoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP904CoopPlandesc");
 if (!WKEXP904CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP904CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP904CoopPlanrflag=false
  }
};
$scope.WKEXP905CoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP905CoopPlandesc");
 if (!WKEXP905CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP905CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP905CoopPlanrflag=false
  }
};
$scope.ECE487CoopPlanRCListener = function () {
  var element = document.getElementById("ECE487CoopPlandesc");
 if (!ECE487CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE487CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE487CoopPlanrflag=false
  }
};
$scope.ECE492CoopPlanRCListener = function () {
  var element = document.getElementById("ECE492CoopPlandesc");
 if (!ECE492CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE492CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE492CoopPlanrflag=false
  }
};
$scope.ENGM310CoopPlanRCListener = function () {
  var element = document.getElementById("ENGM310CoopPlandesc");
 if (!ENGM310CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM310CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM310CoopPlanrflag=false
  }
};
$scope.ENGM401CoopPlanRCListener = function () {
  var element = document.getElementById("ENGM401CoopPlandesc");
 if (!ENGM401CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM401CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM401CoopPlanrflag=false
  }
};
$scope.ENGG400CoopPlanRCListener = function () {
  var element = document.getElementById("ENGG400CoopPlandesc");
 if (!ENGG400CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG400CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG400CoopPlanrflag=false
  }
};
$scope.ENGG404CoopPlanRCListener = function () {
  var element = document.getElementById("ENGG404CoopPlandesc");
 if (!ENGG404CoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG404CoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG404CoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan3RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveCoopPlan3desc");
 if (!ProgramTechnicalElectiveCoopPlan3rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveCoopPlan3rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveCoopPlan3rflag=false
  }
};
$scope.ProgramTechnicalElectiveCoopPlan4RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveCoopPlan4desc");
 if (!ProgramTechnicalElectiveCoopPlan4rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveCoopPlan4rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveCoopPlan4rflag=false
  }
};
  var CHEM103NanoTraditionalPlanflag = false;
  var CHEM103NanoTraditionalPlanrflag = false;
 var CHEM103NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CHEM103NanoTraditionalPlan", []);
  var ENGG100NanoTraditionalPlanflag = false;
  var ENGG100NanoTraditionalPlanrflag = false;
 var ENGG100NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGG100NanoTraditionalPlan", []);
  var ENGG130NanoTraditionalPlanflag = false;
  var ENGG130NanoTraditionalPlanrflag = false;
 var ENGG130NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGG130NanoTraditionalPlan", []);
  var ENGL199NanoTraditionalPlanflag = false;
  var ENGL199NanoTraditionalPlanrflag = false;
 var ENGL199NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGL199NanoTraditionalPlan", []);
  var MATH100NanoTraditionalPlanflag = false;
  var MATH100NanoTraditionalPlanrflag = false;
 var MATH100NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("MATH100NanoTraditionalPlan", []);
  var PHYS130NanoTraditionalPlanflag = false;
  var PHYS130NanoTraditionalPlanrflag = false;
 var PHYS130NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("PHYS130NanoTraditionalPlan", []);
  var CHEM105NanoTraditionalPlanflag = false;
  var CHEM105NanoTraditionalPlanrflag = false;
 var CHEM105NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CHEM105NanoTraditionalPlan", []);
  var ENCMP100NanoTraditionalPlanflag = false;
  var ENCMP100NanoTraditionalPlanrflag = false;
 var ENCMP100NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENCMP100NanoTraditionalPlan", []);
  var ENGG160NanoTraditionalPlanflag = false;
  var ENGG160NanoTraditionalPlanrflag = false;
 var ENGG160NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGG160NanoTraditionalPlan", []);
  var ENPH131NanoTraditionalPlanflag = false;
  var ENPH131NanoTraditionalPlanrflag = false;
 var ENPH131NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENPH131NanoTraditionalPlan", []);
  var MATH101NanoTraditionalPlanflag = false;
  var MATH101NanoTraditionalPlanrflag = false;
 var MATH101NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("MATH101NanoTraditionalPlan", []);
  var MATH102NanoTraditionalPlanflag = false;
  var MATH102NanoTraditionalPlanrflag = false;
 var MATH102NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("MATH102NanoTraditionalPlan", []);
  var CMPUT274NanoTraditionalPlanflag = false;
  var CMPUT274NanoTraditionalPlanrflag = false;
 var CMPUT274NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CMPUT274NanoTraditionalPlan", []);
  var ECE202NanoTraditionalPlanflag = false;
  var ECE202NanoTraditionalPlanrflag = false;
 var ECE202NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE202NanoTraditionalPlan", []);
  var ECE210NanoTraditionalPlanflag = false;
  var ECE210NanoTraditionalPlanrflag = false;
 var ECE210NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE210NanoTraditionalPlan", []);
  var MATH201NanoTraditionalPlanflag = false;
  var MATH201NanoTraditionalPlanrflag = false;
 var MATH201NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("MATH201NanoTraditionalPlan", []);
  var MATH209NanoTraditionalPlanflag = false;
  var MATH209NanoTraditionalPlanrflag = false;
 var MATH209NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("MATH209NanoTraditionalPlan", []);
  var ComplementaryElectiveNanoTraditionalPlan0flag = false;
  var ComplementaryElectiveNanoTraditionalPlan0rflag = false;
 var ComplementaryElectiveNanoTraditionalPlan0Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ComplementaryElectiveNanoTraditionalPlan0", []);
  var CMPUT272NanoTraditionalPlanflag = false;
  var CMPUT272NanoTraditionalPlanrflag = false;
 var CMPUT272NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CMPUT272NanoTraditionalPlan", []);
  var CMPUT275NanoTraditionalPlanflag = false;
  var CMPUT275NanoTraditionalPlanrflag = false;
 var CMPUT275NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CMPUT275NanoTraditionalPlan", []);
  var ECE203NanoTraditionalPlanflag = false;
  var ECE203NanoTraditionalPlanrflag = false;
 var ECE203NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE203NanoTraditionalPlan", []);
  var ECE212NanoTraditionalPlanflag = false;
  var ECE212NanoTraditionalPlanrflag = false;
 var ECE212NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE212NanoTraditionalPlan", []);
  var ECE240NanoTraditionalPlanflag = false;
  var ECE240NanoTraditionalPlanrflag = false;
 var ECE240NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE240NanoTraditionalPlan", []);
  var PHYS230NanoTraditionalPlanflag = false;
  var PHYS230NanoTraditionalPlanrflag = false;
 var PHYS230NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("PHYS230NanoTraditionalPlan", []);
  var ECE302NanoTraditionalPlanflag = false;
  var ECE302NanoTraditionalPlanrflag = false;
 var ECE302NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE302NanoTraditionalPlan", []);
  var ECE311NanoTraditionalPlanflag = false;
  var ECE311NanoTraditionalPlanrflag = false;
 var ECE311NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE311NanoTraditionalPlan", []);
  var ECE325NanoTraditionalPlanflag = false;
  var ECE325NanoTraditionalPlanrflag = false;
 var ECE325NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE325NanoTraditionalPlan", []);
  var ECE342NanoTraditionalPlanflag = false;
  var ECE342NanoTraditionalPlanrflag = false;
 var ECE342NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE342NanoTraditionalPlan", []);
  var ComplementaryElectiveNanoTraditionalPlan1flag = false;
  var ComplementaryElectiveNanoTraditionalPlan1rflag = false;
 var ComplementaryElectiveNanoTraditionalPlan1Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ComplementaryElectiveNanoTraditionalPlan1", []);
  var ProgramTechnicalElectiveNanoTraditionalPlan0flag = false;
  var ProgramTechnicalElectiveNanoTraditionalPlan0rflag = false;
 var ProgramTechnicalElectiveNanoTraditionalPlan0Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ProgramTechnicalElectiveNanoTraditionalPlan0", []);
  var CMPUT291NanoTraditionalPlanflag = false;
  var CMPUT291NanoTraditionalPlanrflag = false;
 var CMPUT291NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CMPUT291NanoTraditionalPlan", []);
  var ECE315NanoTraditionalPlanflag = false;
  var ECE315NanoTraditionalPlanrflag = false;
 var ECE315NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE315NanoTraditionalPlan", []);
  var ECE412NanoTraditionalPlanflag = false;
  var ECE412NanoTraditionalPlanrflag = false;
 var ECE412NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE412NanoTraditionalPlan", []);
  var ECE450NanoTraditionalPlanflag = false;
  var ECE450NanoTraditionalPlanrflag = false;
 var ECE450NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE450NanoTraditionalPlan", []);
  var ITSElectiveNanoTraditionalPlan0flag = false;
  var ITSElectiveNanoTraditionalPlan0rflag = false;
 var ITSElectiveNanoTraditionalPlan0Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ITSElectiveNanoTraditionalPlan0", []);
  var CMPUT301NanoTraditionalPlanflag = false;
  var CMPUT301NanoTraditionalPlanrflag = false;
 var CMPUT301NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("CMPUT301NanoTraditionalPlan", []);
  var ECE304NanoTraditionalPlanflag = false;
  var ECE304NanoTraditionalPlanrflag = false;
 var ECE304NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE304NanoTraditionalPlan", []);
  var ECE410NanoTraditionalPlanflag = false;
  var ECE410NanoTraditionalPlanrflag = false;
 var ECE410NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE410NanoTraditionalPlan", []);
  var ENGM310NanoTraditionalPlanflag = false;
  var ENGM310NanoTraditionalPlanrflag = false;
 var ENGM310NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGM310NanoTraditionalPlan", []);
  var ENGM401NanoTraditionalPlanflag = false;
  var ENGM401NanoTraditionalPlanrflag = false;
 var ENGM401NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGM401NanoTraditionalPlan", []);
  var ENGG404NanoTraditionalPlanflag = false;
  var ENGG404NanoTraditionalPlanrflag = false;
 var ENGG404NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGG404NanoTraditionalPlan", []);
  var ProgramTechnicalElectiveNanoTraditionalPlan1flag = false;
  var ProgramTechnicalElectiveNanoTraditionalPlan1rflag = false;
 var ProgramTechnicalElectiveNanoTraditionalPlan1Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ProgramTechnicalElectiveNanoTraditionalPlan1", []);
  var ECE403NanoTraditionalPlanflag = false;
  var ECE403NanoTraditionalPlanrflag = false;
 var ECE403NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE403NanoTraditionalPlan", []);
  var ECE457NanoTraditionalPlanflag = false;
  var ECE457NanoTraditionalPlanrflag = false;
 var ECE457NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE457NanoTraditionalPlan", []);
  var ECE475NanoTraditionalPlanflag = false;
  var ECE475NanoTraditionalPlanrflag = false;
 var ECE475NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE475NanoTraditionalPlan", []);
  var ECE492NanoTraditionalPlanflag = false;
  var ECE492NanoTraditionalPlanrflag = false;
 var ECE492NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ECE492NanoTraditionalPlan", []);
  var ENGG400NanoTraditionalPlanflag = false;
  var ENGG400NanoTraditionalPlanrflag = false;
 var ENGG400NanoTraditionalPlanTime = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ENGG400NanoTraditionalPlan", []);
  var ProgramTechnicalElectiveNanoTraditionalPlan2flag = false;
  var ProgramTechnicalElectiveNanoTraditionalPlan2rflag = false;
 var ProgramTechnicalElectiveNanoTraditionalPlan2Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ProgramTechnicalElectiveNanoTraditionalPlan2", []);
  var ProgramTechnicalElectiveNanoTraditionalPlan3flag = false;
  var ProgramTechnicalElectiveNanoTraditionalPlan3rflag = false;
 var ProgramTechnicalElectiveNanoTraditionalPlan3Time = new Date().getTime();
this.NanoTraditionalPlanClickedMap.set("ProgramTechnicalElectiveNanoTraditionalPlan3", []);
$scope.CHEM103NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM103NanoTraditionalPlanTime <= 200) { 
        CHEM103NanoTraditionalPlanTime = currentTime;
        return;
    }
CHEM103NanoTraditionalPlanTime = currentTime;
  var CHEM103NanoTraditionalPlanelement = document.getElementById("CHEM103NanoTraditionalPlan");
 if (!CHEM103NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CHEM103NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CHEM103NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CHEM103NanoTraditionalPlan")[i];
        if (CHEM103NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM103NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine93());
     that.highlightElement(CHEM103NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("CHEM103NanoTraditionalPlan", "NaturalSciences");
      CHEM103NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine93());
     that.unHighlightElement(CHEM103NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM103NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM103NanoTraditionalPlanelement, category);
}
      CHEM103NanoTraditionalPlanflag=false
  }
};
$scope.ENGG100NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG100NanoTraditionalPlanTime <= 200) { 
        ENGG100NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGG100NanoTraditionalPlanTime = currentTime;
  var ENGG100NanoTraditionalPlanelement = document.getElementById("ENGG100NanoTraditionalPlan");
 if (!ENGG100NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGG100NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGG100NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGG100NanoTraditionalPlan")[i];
        if (ENGG100NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG100NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG100NanoTraditionalPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG100NanoTraditionalPlan", "EngineeringProfession");
      ENGG100NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG100NanoTraditionalPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG100NanoTraditionalPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG100NanoTraditionalPlanelement, category);
}
      ENGG100NanoTraditionalPlanflag=false
  }
};
$scope.ENGG130NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG130NanoTraditionalPlanTime <= 200) { 
        ENGG130NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGG130NanoTraditionalPlanTime = currentTime;
  var ENGG130NanoTraditionalPlanelement = document.getElementById("ENGG130NanoTraditionalPlan");
 if (!ENGG130NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGG130NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGG130NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGG130NanoTraditionalPlan")[i];
        if (ENGG130NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG130NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine91());
      that.addLine(getLine96());
     that.highlightElement(ENGG130NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("ENGG130NanoTraditionalPlan", "NaturalSciences");
      ENGG130NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine91());
      that.removeLine(getLine96());
     that.unHighlightElement(ENGG130NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENGG130NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENGG130NanoTraditionalPlanelement, category);
}
      ENGG130NanoTraditionalPlanflag=false
  }
};
$scope.ENGL199NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGL199NanoTraditionalPlanTime <= 200) { 
        ENGL199NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGL199NanoTraditionalPlanTime = currentTime;
  var ENGL199NanoTraditionalPlanelement = document.getElementById("ENGL199NanoTraditionalPlan");
 if (!ENGL199NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGL199NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGL199NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGL199NanoTraditionalPlan")[i];
        if (ENGL199NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGL199NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine94());
     that.highlightElement(ENGL199NanoTraditionalPlanelement, "Other");
     that.addToClicked("ENGL199NanoTraditionalPlan", "Other");
      ENGL199NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine94());
     that.unHighlightElement(ENGL199NanoTraditionalPlanelement, "Other");
     var category = that.removeFromClicked("ENGL199NanoTraditionalPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGL199NanoTraditionalPlanelement, category);
}
      ENGL199NanoTraditionalPlanflag=false
  }
};
$scope.MATH100NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH100NanoTraditionalPlanTime <= 200) { 
        MATH100NanoTraditionalPlanTime = currentTime;
        return;
    }
MATH100NanoTraditionalPlanTime = currentTime;
  var MATH100NanoTraditionalPlanelement = document.getElementById("MATH100NanoTraditionalPlan");
 if (!MATH100NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("MATH100NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("MATH100NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("MATH100NanoTraditionalPlan")[i];
        if (MATH100NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH100NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine91());
      that.addLine(getLine92());
      that.addLine(getLine95());
      that.addLine(getLine98());
      that.addLine(getLine99());
      that.addLine(getLine113());
     that.highlightElement(MATH100NanoTraditionalPlanelement, "Math");
     that.addToClicked("MATH100NanoTraditionalPlan", "Math");
      MATH100NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine91());
      that.removeLine(getLine92());
      that.removeLine(getLine95());
      that.removeLine(getLine98());
      that.removeLine(getLine99());
      that.removeLine(getLine113());
     that.unHighlightElement(MATH100NanoTraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH100NanoTraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH100NanoTraditionalPlanelement, category);
}
      MATH100NanoTraditionalPlanflag=false
  }
};
$scope.PHYS130NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS130NanoTraditionalPlanTime <= 200) { 
        PHYS130NanoTraditionalPlanTime = currentTime;
        return;
    }
PHYS130NanoTraditionalPlanTime = currentTime;
  var PHYS130NanoTraditionalPlanelement = document.getElementById("PHYS130NanoTraditionalPlan");
 if (!PHYS130NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("PHYS130NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("PHYS130NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("PHYS130NanoTraditionalPlan")[i];
        if (PHYS130NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS130NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine92());
      that.addLine(getLine112());
     that.highlightElement(PHYS130NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("PHYS130NanoTraditionalPlan", "NaturalSciences");
      PHYS130NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine92());
      that.removeLine(getLine112());
     that.unHighlightElement(PHYS130NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS130NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS130NanoTraditionalPlanelement, category);
}
      PHYS130NanoTraditionalPlanflag=false
  }
};
$scope.CHEM105NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM105NanoTraditionalPlanTime <= 200) { 
        CHEM105NanoTraditionalPlanTime = currentTime;
        return;
    }
CHEM105NanoTraditionalPlanTime = currentTime;
  var CHEM105NanoTraditionalPlanelement = document.getElementById("CHEM105NanoTraditionalPlan");
 if (!CHEM105NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CHEM105NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CHEM105NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CHEM105NanoTraditionalPlan")[i];
        if (CHEM105NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM105NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine93());
     that.highlightElement(CHEM105NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("CHEM105NanoTraditionalPlan", "NaturalSciences");
      CHEM105NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine93());
     that.unHighlightElement(CHEM105NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM105NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM105NanoTraditionalPlanelement, category);
}
      CHEM105NanoTraditionalPlanflag=false
  }
};
$scope.ENCMP100NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENCMP100NanoTraditionalPlanTime <= 200) { 
        ENCMP100NanoTraditionalPlanTime = currentTime;
        return;
    }
ENCMP100NanoTraditionalPlanTime = currentTime;
  var ENCMP100NanoTraditionalPlanelement = document.getElementById("ENCMP100NanoTraditionalPlan");
 if (!ENCMP100NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENCMP100NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENCMP100NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENCMP100NanoTraditionalPlan")[i];
        if (ENCMP100NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENCMP100NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENCMP100NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("ENCMP100NanoTraditionalPlan", "NaturalSciences");
      ENCMP100NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENCMP100NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENCMP100NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENCMP100NanoTraditionalPlanelement, category);
}
      ENCMP100NanoTraditionalPlanflag=false
  }
};
$scope.ENGG160NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG160NanoTraditionalPlanTime <= 200) { 
        ENGG160NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGG160NanoTraditionalPlanTime = currentTime;
  var ENGG160NanoTraditionalPlanelement = document.getElementById("ENGG160NanoTraditionalPlan");
 if (!ENGG160NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGG160NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGG160NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGG160NanoTraditionalPlan")[i];
        if (ENGG160NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG160NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine94());
     that.highlightElement(ENGG160NanoTraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ENGG160NanoTraditionalPlan", "EngineeringDesign");
      ENGG160NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine94());
     that.unHighlightElement(ENGG160NanoTraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ENGG160NanoTraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ENGG160NanoTraditionalPlanelement, category);
}
      ENGG160NanoTraditionalPlanflag=false
  }
};
$scope.ENPH131NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENPH131NanoTraditionalPlanTime <= 200) { 
        ENPH131NanoTraditionalPlanTime = currentTime;
        return;
    }
ENPH131NanoTraditionalPlanTime = currentTime;
  var ENPH131NanoTraditionalPlanelement = document.getElementById("ENPH131NanoTraditionalPlan");
 if (!ENPH131NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENPH131NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENPH131NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENPH131NanoTraditionalPlan")[i];
        if (ENPH131NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENPH131NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine95());
      that.addLine(getLine96());
      that.addLine(getLine97());
     that.highlightElement(ENPH131NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("ENPH131NanoTraditionalPlan", "NaturalSciences");
      ENPH131NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine95());
      that.removeLine(getLine96());
      that.removeLine(getLine97());
     that.unHighlightElement(ENPH131NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENPH131NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENPH131NanoTraditionalPlanelement, category);
}
      ENPH131NanoTraditionalPlanflag=false
  }
};
$scope.MATH101NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH101NanoTraditionalPlanTime <= 200) { 
        MATH101NanoTraditionalPlanTime = currentTime;
        return;
    }
MATH101NanoTraditionalPlanTime = currentTime;
  var MATH101NanoTraditionalPlanelement = document.getElementById("MATH101NanoTraditionalPlan");
 if (!MATH101NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("MATH101NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("MATH101NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("MATH101NanoTraditionalPlan")[i];
        if (MATH101NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH101NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine97());
      that.addLine(getLine98());
      that.addLine(getLine100());
      that.addLine(getLine103());
      that.addLine(getLine114());
     that.highlightElement(MATH101NanoTraditionalPlanelement, "Math");
     that.addToClicked("MATH101NanoTraditionalPlan", "Math");
      MATH101NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine97());
      that.removeLine(getLine98());
      that.removeLine(getLine100());
      that.removeLine(getLine103());
      that.removeLine(getLine114());
     that.unHighlightElement(MATH101NanoTraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH101NanoTraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH101NanoTraditionalPlanelement, category);
}
      MATH101NanoTraditionalPlanflag=false
  }
};
$scope.MATH102NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH102NanoTraditionalPlanTime <= 200) { 
        MATH102NanoTraditionalPlanTime = currentTime;
        return;
    }
MATH102NanoTraditionalPlanTime = currentTime;
  var MATH102NanoTraditionalPlanelement = document.getElementById("MATH102NanoTraditionalPlan");
 if (!MATH102NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("MATH102NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("MATH102NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("MATH102NanoTraditionalPlan")[i];
        if (MATH102NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH102NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine99());
      that.addLine(getLine101());
      that.addLine(getLine104());
     that.highlightElement(MATH102NanoTraditionalPlanelement, "Math");
     that.addToClicked("MATH102NanoTraditionalPlan", "Math");
      MATH102NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine99());
      that.removeLine(getLine101());
      that.removeLine(getLine104());
     that.unHighlightElement(MATH102NanoTraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH102NanoTraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH102NanoTraditionalPlanelement, category);
}
      MATH102NanoTraditionalPlanflag=false
  }
};
$scope.CMPUT274NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT274NanoTraditionalPlanTime <= 200) { 
        CMPUT274NanoTraditionalPlanTime = currentTime;
        return;
    }
CMPUT274NanoTraditionalPlanTime = currentTime;
  var CMPUT274NanoTraditionalPlanelement = document.getElementById("CMPUT274NanoTraditionalPlan");
 if (!CMPUT274NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CMPUT274NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CMPUT274NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CMPUT274NanoTraditionalPlan")[i];
        if (CMPUT274NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT274NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine105());
      that.addLine(getLine106());
      that.addLine(getLine119());
     that.highlightElement(CMPUT274NanoTraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT274NanoTraditionalPlan", "ComputingScience");
      CMPUT274NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine105());
      that.removeLine(getLine106());
      that.removeLine(getLine119());
     that.unHighlightElement(CMPUT274NanoTraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT274NanoTraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT274NanoTraditionalPlanelement, category);
}
      CMPUT274NanoTraditionalPlanflag=false
  }
};
$scope.ECE202NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE202NanoTraditionalPlanTime <= 200) { 
        ECE202NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE202NanoTraditionalPlanTime = currentTime;
  var ECE202NanoTraditionalPlanelement = document.getElementById("ECE202NanoTraditionalPlan");
 if (!ECE202NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE202NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE202NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE202NanoTraditionalPlan")[i];
        if (ECE202NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE202NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine100());
      that.addLine(getLine101());
      that.addLine(getLine107());
      that.addLine(getLine110());
     that.highlightElement(ECE202NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE202NanoTraditionalPlan", "EngineeringSciences");
      ECE202NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine100());
      that.removeLine(getLine101());
      that.removeLine(getLine107());
      that.removeLine(getLine110());
     that.unHighlightElement(ECE202NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE202NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE202NanoTraditionalPlanelement, category);
}
      ECE202NanoTraditionalPlanflag=false
  }
};
$scope.ECE210NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE210NanoTraditionalPlanTime <= 200) { 
        ECE210NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE210NanoTraditionalPlanTime = currentTime;
  var ECE210NanoTraditionalPlanelement = document.getElementById("ECE210NanoTraditionalPlan");
 if (!ECE210NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE210NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE210NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE210NanoTraditionalPlan")[i];
        if (ECE210NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE210NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine109());
      that.addLine(getLine126());
     that.highlightElement(ECE210NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE210NanoTraditionalPlan", "EngineeringSciences");
      ECE210NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine109());
      that.removeLine(getLine126());
     that.unHighlightElement(ECE210NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE210NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE210NanoTraditionalPlanelement, category);
}
      ECE210NanoTraditionalPlanflag=false
  }
};
$scope.MATH201NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH201NanoTraditionalPlanTime <= 200) { 
        MATH201NanoTraditionalPlanTime = currentTime;
        return;
    }
MATH201NanoTraditionalPlanTime = currentTime;
  var MATH201NanoTraditionalPlanelement = document.getElementById("MATH201NanoTraditionalPlan");
 if (!MATH201NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("MATH201NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("MATH201NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("MATH201NanoTraditionalPlan")[i];
        if (MATH201NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH201NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine102());
      that.addLine(getLine111());
     that.highlightElement(MATH201NanoTraditionalPlanelement, "Math");
     that.addToClicked("MATH201NanoTraditionalPlan", "Math");
      MATH201NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine102());
      that.removeLine(getLine111());
     that.unHighlightElement(MATH201NanoTraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH201NanoTraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH201NanoTraditionalPlanelement, category);
}
      MATH201NanoTraditionalPlanflag=false
  }
};
$scope.MATH209NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH209NanoTraditionalPlanTime <= 200) { 
        MATH209NanoTraditionalPlanTime = currentTime;
        return;
    }
MATH209NanoTraditionalPlanTime = currentTime;
  var MATH209NanoTraditionalPlanelement = document.getElementById("MATH209NanoTraditionalPlan");
 if (!MATH209NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("MATH209NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("MATH209NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("MATH209NanoTraditionalPlan")[i];
        if (MATH209NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH209NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine102());
      that.addLine(getLine103());
      that.addLine(getLine104());
      that.addLine(getLine118());
     that.highlightElement(MATH209NanoTraditionalPlanelement, "Math");
     that.addToClicked("MATH209NanoTraditionalPlan", "Math");
      MATH209NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine102());
      that.removeLine(getLine103());
      that.removeLine(getLine104());
      that.removeLine(getLine118());
     that.unHighlightElement(MATH209NanoTraditionalPlanelement, "Math");
     var category = that.removeFromClicked("MATH209NanoTraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH209NanoTraditionalPlanelement, category);
}
      MATH209NanoTraditionalPlanflag=false
  }
};
$scope.ComplementaryElectiveNanoTraditionalPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveNanoTraditionalPlan0Time <= 200) { 
        ComplementaryElectiveNanoTraditionalPlan0Time = currentTime;
        return;
    }
ComplementaryElectiveNanoTraditionalPlan0Time = currentTime;
  var ComplementaryElectiveNanoTraditionalPlan0element = document.getElementById("ComplementaryElectiveNanoTraditionalPlan0");
 if (!ComplementaryElectiveNanoTraditionalPlan0flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan0").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan0")[i];
        if (ComplementaryElectiveNanoTraditionalPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveNanoTraditionalPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveNanoTraditionalPlan0element, "COMP");
     that.addToClicked("ComplementaryElectiveNanoTraditionalPlan0", "COMP");
      ComplementaryElectiveNanoTraditionalPlan0flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveNanoTraditionalPlan0element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveNanoTraditionalPlan0", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveNanoTraditionalPlan0element, category);
}
      ComplementaryElectiveNanoTraditionalPlan0flag=false
  }
};
$scope.CMPUT272NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT272NanoTraditionalPlanTime <= 200) { 
        CMPUT272NanoTraditionalPlanTime = currentTime;
        return;
    }
CMPUT272NanoTraditionalPlanTime = currentTime;
  var CMPUT272NanoTraditionalPlanelement = document.getElementById("CMPUT272NanoTraditionalPlan");
 if (!CMPUT272NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CMPUT272NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CMPUT272NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CMPUT272NanoTraditionalPlan")[i];
        if (CMPUT272NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT272NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine105());
      that.addLine(getLine120());
     that.highlightElement(CMPUT272NanoTraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT272NanoTraditionalPlan", "ComputingScience");
      CMPUT272NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine105());
      that.removeLine(getLine120());
     that.unHighlightElement(CMPUT272NanoTraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT272NanoTraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT272NanoTraditionalPlanelement, category);
}
      CMPUT272NanoTraditionalPlanflag=false
  }
};
$scope.CMPUT275NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT275NanoTraditionalPlanTime <= 200) { 
        CMPUT275NanoTraditionalPlanTime = currentTime;
        return;
    }
CMPUT275NanoTraditionalPlanTime = currentTime;
  var CMPUT275NanoTraditionalPlanelement = document.getElementById("CMPUT275NanoTraditionalPlan");
 if (!CMPUT275NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CMPUT275NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CMPUT275NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CMPUT275NanoTraditionalPlan")[i];
        if (CMPUT275NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT275NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine106());
      that.addLine(getLine117());
      that.addLine(getLine121());
      that.addLine(getLine125());
     that.highlightElement(CMPUT275NanoTraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT275NanoTraditionalPlan", "ComputingScience");
      CMPUT275NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine106());
      that.removeLine(getLine117());
      that.removeLine(getLine121());
      that.removeLine(getLine125());
     that.unHighlightElement(CMPUT275NanoTraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT275NanoTraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT275NanoTraditionalPlanelement, category);
}
      CMPUT275NanoTraditionalPlanflag=false
  }
};
$scope.ECE203NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE203NanoTraditionalPlanTime <= 200) { 
        ECE203NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE203NanoTraditionalPlanTime = currentTime;
  var ECE203NanoTraditionalPlanelement = document.getElementById("ECE203NanoTraditionalPlan");
 if (!ECE203NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE203NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE203NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE203NanoTraditionalPlan")[i];
        if (ECE203NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE203NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine107());
      that.addLine(getLine108());
      that.addLine(getLine115());
     that.highlightElement(ECE203NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE203NanoTraditionalPlan", "EngineeringSciences");
      ECE203NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine107());
      that.removeLine(getLine108());
      that.removeLine(getLine115());
     that.unHighlightElement(ECE203NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE203NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE203NanoTraditionalPlanelement, category);
}
      ECE203NanoTraditionalPlanflag=false
  }
};
$scope.ECE212NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE212NanoTraditionalPlanTime <= 200) { 
        ECE212NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE212NanoTraditionalPlanTime = currentTime;
  var ECE212NanoTraditionalPlanelement = document.getElementById("ECE212NanoTraditionalPlan");
 if (!ECE212NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE212NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE212NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE212NanoTraditionalPlan")[i];
        if (ECE212NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE212NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine109());
      that.addLine(getLine116());
      that.addLine(getLine122());
     that.highlightElement(ECE212NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE212NanoTraditionalPlan", "EngineeringSciences");
      ECE212NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine109());
      that.removeLine(getLine116());
      that.removeLine(getLine122());
     that.unHighlightElement(ECE212NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE212NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE212NanoTraditionalPlanelement, category);
}
      ECE212NanoTraditionalPlanflag=false
  }
};
$scope.ECE240NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE240NanoTraditionalPlanTime <= 200) { 
        ECE240NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE240NanoTraditionalPlanTime = currentTime;
  var ECE240NanoTraditionalPlanelement = document.getElementById("ECE240NanoTraditionalPlan");
 if (!ECE240NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE240NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE240NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE240NanoTraditionalPlan")[i];
        if (ECE240NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE240NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine108());
      that.addLine(getLine110());
      that.addLine(getLine111());
     that.highlightElement(ECE240NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE240NanoTraditionalPlan", "EngineeringSciences");
      ECE240NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine108());
      that.removeLine(getLine110());
      that.removeLine(getLine111());
     that.unHighlightElement(ECE240NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE240NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE240NanoTraditionalPlanelement, category);
}
      ECE240NanoTraditionalPlanflag=false
  }
};
$scope.PHYS230NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS230NanoTraditionalPlanTime <= 200) { 
        PHYS230NanoTraditionalPlanTime = currentTime;
        return;
    }
PHYS230NanoTraditionalPlanTime = currentTime;
  var PHYS230NanoTraditionalPlanelement = document.getElementById("PHYS230NanoTraditionalPlan");
 if (!PHYS230NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("PHYS230NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("PHYS230NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("PHYS230NanoTraditionalPlan")[i];
        if (PHYS230NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS230NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine112());
      that.addLine(getLine113());
      that.addLine(getLine114());
     that.highlightElement(PHYS230NanoTraditionalPlanelement, "NaturalSciences");
     that.addToClicked("PHYS230NanoTraditionalPlan", "NaturalSciences");
      PHYS230NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine112());
      that.removeLine(getLine113());
      that.removeLine(getLine114());
     that.unHighlightElement(PHYS230NanoTraditionalPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS230NanoTraditionalPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS230NanoTraditionalPlanelement, category);
}
      PHYS230NanoTraditionalPlanflag=false
  }
};
$scope.ECE302NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE302NanoTraditionalPlanTime <= 200) { 
        ECE302NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE302NanoTraditionalPlanTime = currentTime;
  var ECE302NanoTraditionalPlanelement = document.getElementById("ECE302NanoTraditionalPlan");
 if (!ECE302NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE302NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE302NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE302NanoTraditionalPlan")[i];
        if (ECE302NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE302NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine115());
      that.addLine(getLine124());
      that.addLine(getLine127());
      that.addLine(getLine131());
     that.highlightElement(ECE302NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE302NanoTraditionalPlan", "EngineeringSciences");
      ECE302NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine115());
      that.removeLine(getLine124());
      that.removeLine(getLine127());
      that.removeLine(getLine131());
     that.unHighlightElement(ECE302NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE302NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE302NanoTraditionalPlanelement, category);
}
      ECE302NanoTraditionalPlanflag=false
  }
};
$scope.ECE311NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE311NanoTraditionalPlanTime <= 200) { 
        ECE311NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE311NanoTraditionalPlanTime = currentTime;
  var ECE311NanoTraditionalPlanelement = document.getElementById("ECE311NanoTraditionalPlan");
 if (!ECE311NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE311NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE311NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE311NanoTraditionalPlan")[i];
        if (ECE311NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE311NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine116());
     that.highlightElement(ECE311NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE311NanoTraditionalPlan", "EngineeringSciences");
      ECE311NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine116());
     that.unHighlightElement(ECE311NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE311NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE311NanoTraditionalPlanelement, category);
}
      ECE311NanoTraditionalPlanflag=false
  }
};
$scope.ECE325NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE325NanoTraditionalPlanTime <= 200) { 
        ECE325NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE325NanoTraditionalPlanTime = currentTime;
  var ECE325NanoTraditionalPlanelement = document.getElementById("ECE325NanoTraditionalPlan");
 if (!ECE325NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE325NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE325NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE325NanoTraditionalPlan")[i];
        if (ECE325NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE325NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine117());
     that.highlightElement(ECE325NanoTraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ECE325NanoTraditionalPlan", "EngineeringDesign");
      ECE325NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine117());
     that.unHighlightElement(ECE325NanoTraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE325NanoTraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE325NanoTraditionalPlanelement, category);
}
      ECE325NanoTraditionalPlanflag=false
  }
};
$scope.ECE342NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE342NanoTraditionalPlanTime <= 200) { 
        ECE342NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE342NanoTraditionalPlanTime = currentTime;
  var ECE342NanoTraditionalPlanelement = document.getElementById("ECE342NanoTraditionalPlan");
 if (!ECE342NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE342NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE342NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE342NanoTraditionalPlan")[i];
        if (ECE342NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE342NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine118());
      that.addLine(getLine123());
     that.highlightElement(ECE342NanoTraditionalPlanelement, "Math");
     that.addToClicked("ECE342NanoTraditionalPlan", "Math");
      ECE342NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine118());
      that.removeLine(getLine123());
     that.unHighlightElement(ECE342NanoTraditionalPlanelement, "Math");
     var category = that.removeFromClicked("ECE342NanoTraditionalPlan", "Math");
  if (category != "") { 
     that.highlightElement(ECE342NanoTraditionalPlanelement, category);
}
      ECE342NanoTraditionalPlanflag=false
  }
};
$scope.ComplementaryElectiveNanoTraditionalPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveNanoTraditionalPlan1Time <= 200) { 
        ComplementaryElectiveNanoTraditionalPlan1Time = currentTime;
        return;
    }
ComplementaryElectiveNanoTraditionalPlan1Time = currentTime;
  var ComplementaryElectiveNanoTraditionalPlan1element = document.getElementById("ComplementaryElectiveNanoTraditionalPlan1");
 if (!ComplementaryElectiveNanoTraditionalPlan1flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan1").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ComplementaryElectiveNanoTraditionalPlan1")[i];
        if (ComplementaryElectiveNanoTraditionalPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveNanoTraditionalPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveNanoTraditionalPlan1element, "COMP");
     that.addToClicked("ComplementaryElectiveNanoTraditionalPlan1", "COMP");
      ComplementaryElectiveNanoTraditionalPlan1flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveNanoTraditionalPlan1element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveNanoTraditionalPlan1", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveNanoTraditionalPlan1element, category);
}
      ComplementaryElectiveNanoTraditionalPlan1flag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoTraditionalPlan0Time <= 200) { 
        ProgramTechnicalElectiveNanoTraditionalPlan0Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoTraditionalPlan0Time = currentTime;
  var ProgramTechnicalElectiveNanoTraditionalPlan0element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan0");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan0flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan0").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan0")[i];
        if (ProgramTechnicalElectiveNanoTraditionalPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan0element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan0", "PROG");
      ProgramTechnicalElectiveNanoTraditionalPlan0flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan0element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan0", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan0element, category);
}
      ProgramTechnicalElectiveNanoTraditionalPlan0flag=false
  }
};
$scope.CMPUT291NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT291NanoTraditionalPlanTime <= 200) { 
        CMPUT291NanoTraditionalPlanTime = currentTime;
        return;
    }
CMPUT291NanoTraditionalPlanTime = currentTime;
  var CMPUT291NanoTraditionalPlanelement = document.getElementById("CMPUT291NanoTraditionalPlan");
 if (!CMPUT291NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CMPUT291NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CMPUT291NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CMPUT291NanoTraditionalPlan")[i];
        if (CMPUT291NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT291NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine119());
      that.addLine(getLine120());
      that.addLine(getLine121());
     that.highlightElement(CMPUT291NanoTraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT291NanoTraditionalPlan", "ComputingScience");
      CMPUT291NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine119());
      that.removeLine(getLine120());
      that.removeLine(getLine121());
     that.unHighlightElement(CMPUT291NanoTraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT291NanoTraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT291NanoTraditionalPlanelement, category);
}
      CMPUT291NanoTraditionalPlanflag=false
  }
};
$scope.ECE315NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE315NanoTraditionalPlanTime <= 200) { 
        ECE315NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE315NanoTraditionalPlanTime = currentTime;
  var ECE315NanoTraditionalPlanelement = document.getElementById("ECE315NanoTraditionalPlan");
 if (!ECE315NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE315NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE315NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE315NanoTraditionalPlan")[i];
        if (ECE315NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE315NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine122());
      that.addLine(getLine132());
     that.highlightElement(ECE315NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE315NanoTraditionalPlan", "EngineeringSciences");
      ECE315NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine122());
      that.removeLine(getLine132());
     that.unHighlightElement(ECE315NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE315NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE315NanoTraditionalPlanelement, category);
}
      ECE315NanoTraditionalPlanflag=false
  }
};
$scope.ECE412NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE412NanoTraditionalPlanTime <= 200) { 
        ECE412NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE412NanoTraditionalPlanTime = currentTime;
  var ECE412NanoTraditionalPlanelement = document.getElementById("ECE412NanoTraditionalPlan");
 if (!ECE412NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE412NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE412NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE412NanoTraditionalPlan")[i];
        if (ECE412NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE412NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine123());
     that.highlightElement(ECE412NanoTraditionalPlanelement, "course");
     that.addToClicked("ECE412NanoTraditionalPlan", "course");
      ECE412NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine123());
     that.unHighlightElement(ECE412NanoTraditionalPlanelement, "course");
     var category = that.removeFromClicked("ECE412NanoTraditionalPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE412NanoTraditionalPlanelement, category);
}
      ECE412NanoTraditionalPlanflag=false
  }
};
$scope.ECE450NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE450NanoTraditionalPlanTime <= 200) { 
        ECE450NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE450NanoTraditionalPlanTime = currentTime;
  var ECE450NanoTraditionalPlanelement = document.getElementById("ECE450NanoTraditionalPlan");
 if (!ECE450NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE450NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE450NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE450NanoTraditionalPlan")[i];
        if (ECE450NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE450NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine124());
     that.highlightElement(ECE450NanoTraditionalPlanelement, "course");
     that.addToClicked("ECE450NanoTraditionalPlan", "course");
      ECE450NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine124());
     that.unHighlightElement(ECE450NanoTraditionalPlanelement, "course");
     var category = that.removeFromClicked("ECE450NanoTraditionalPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE450NanoTraditionalPlanelement, category);
}
      ECE450NanoTraditionalPlanflag=false
  }
};
$scope.ITSElectiveNanoTraditionalPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ITSElectiveNanoTraditionalPlan0Time <= 200) { 
        ITSElectiveNanoTraditionalPlan0Time = currentTime;
        return;
    }
ITSElectiveNanoTraditionalPlan0Time = currentTime;
  var ITSElectiveNanoTraditionalPlan0element = document.getElementById("ITSElectiveNanoTraditionalPlan0");
 if (!ITSElectiveNanoTraditionalPlan0flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ITSElectiveNanoTraditionalPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ITSElectiveNanoTraditionalPlan0").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ITSElectiveNanoTraditionalPlan0")[i];
        if (ITSElectiveNanoTraditionalPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ITSElectiveNanoTraditionalPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ITSElectiveNanoTraditionalPlan0element, "ITS");
     that.addToClicked("ITSElectiveNanoTraditionalPlan0", "ITS");
      ITSElectiveNanoTraditionalPlan0flag=true
  }
 else {
     that.unHighlightElement(ITSElectiveNanoTraditionalPlan0element, "ITS");
     var category = that.removeFromClicked("ITSElectiveNanoTraditionalPlan0", "ITS");
  if (category != "") { 
     that.highlightElement(ITSElectiveNanoTraditionalPlan0element, category);
}
      ITSElectiveNanoTraditionalPlan0flag=false
  }
};
$scope.CMPUT301NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT301NanoTraditionalPlanTime <= 200) { 
        CMPUT301NanoTraditionalPlanTime = currentTime;
        return;
    }
CMPUT301NanoTraditionalPlanTime = currentTime;
  var CMPUT301NanoTraditionalPlanelement = document.getElementById("CMPUT301NanoTraditionalPlan");
 if (!CMPUT301NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("CMPUT301NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("CMPUT301NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("CMPUT301NanoTraditionalPlan")[i];
        if (CMPUT301NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT301NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine125());
     that.highlightElement(CMPUT301NanoTraditionalPlanelement, "ComputingScience");
     that.addToClicked("CMPUT301NanoTraditionalPlan", "ComputingScience");
      CMPUT301NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine125());
     that.unHighlightElement(CMPUT301NanoTraditionalPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT301NanoTraditionalPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT301NanoTraditionalPlanelement, category);
}
      CMPUT301NanoTraditionalPlanflag=false
  }
};
$scope.ECE304NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE304NanoTraditionalPlanTime <= 200) { 
        ECE304NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE304NanoTraditionalPlanTime = currentTime;
  var ECE304NanoTraditionalPlanelement = document.getElementById("ECE304NanoTraditionalPlan");
 if (!ECE304NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE304NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE304NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE304NanoTraditionalPlan")[i];
        if (ECE304NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE304NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine126());
      that.addLine(getLine127());
      that.addLine(getLine128());
      that.addLine(getLine129());
     that.highlightElement(ECE304NanoTraditionalPlanelement, "EngineeringSciences");
     that.addToClicked("ECE304NanoTraditionalPlan", "EngineeringSciences");
      ECE304NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine126());
      that.removeLine(getLine127());
      that.removeLine(getLine128());
      that.removeLine(getLine129());
     that.unHighlightElement(ECE304NanoTraditionalPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE304NanoTraditionalPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE304NanoTraditionalPlanelement, category);
}
      ECE304NanoTraditionalPlanflag=false
  }
};
$scope.ECE410NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE410NanoTraditionalPlanTime <= 200) { 
        ECE410NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE410NanoTraditionalPlanTime = currentTime;
  var ECE410NanoTraditionalPlanelement = document.getElementById("ECE410NanoTraditionalPlan");
 if (!ECE410NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE410NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE410NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE410NanoTraditionalPlan")[i];
        if (ECE410NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE410NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine128());
      that.addLine(getLine130());
      that.addLine(getLine133());
     that.highlightElement(ECE410NanoTraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ECE410NanoTraditionalPlan", "EngineeringDesign");
      ECE410NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine128());
      that.removeLine(getLine130());
      that.removeLine(getLine133());
     that.unHighlightElement(ECE410NanoTraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE410NanoTraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE410NanoTraditionalPlanelement, category);
}
      ECE410NanoTraditionalPlanflag=false
  }
};
$scope.ENGM310NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM310NanoTraditionalPlanTime <= 200) { 
        ENGM310NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGM310NanoTraditionalPlanTime = currentTime;
  var ENGM310NanoTraditionalPlanelement = document.getElementById("ENGM310NanoTraditionalPlan");
 if (!ENGM310NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGM310NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGM310NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGM310NanoTraditionalPlan")[i];
        if (ENGM310NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM310NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM310NanoTraditionalPlanelement, "Other");
     that.addToClicked("ENGM310NanoTraditionalPlan", "Other");
      ENGM310NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM310NanoTraditionalPlanelement, "Other");
     var category = that.removeFromClicked("ENGM310NanoTraditionalPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM310NanoTraditionalPlanelement, category);
}
      ENGM310NanoTraditionalPlanflag=false
  }
};
$scope.ENGM401NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM401NanoTraditionalPlanTime <= 200) { 
        ENGM401NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGM401NanoTraditionalPlanTime = currentTime;
  var ENGM401NanoTraditionalPlanelement = document.getElementById("ENGM401NanoTraditionalPlan");
 if (!ENGM401NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGM401NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGM401NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGM401NanoTraditionalPlan")[i];
        if (ENGM401NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM401NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM401NanoTraditionalPlanelement, "Other");
     that.addToClicked("ENGM401NanoTraditionalPlan", "Other");
      ENGM401NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM401NanoTraditionalPlanelement, "Other");
     var category = that.removeFromClicked("ENGM401NanoTraditionalPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM401NanoTraditionalPlanelement, category);
}
      ENGM401NanoTraditionalPlanflag=false
  }
};
$scope.ENGG404NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG404NanoTraditionalPlanTime <= 200) { 
        ENGG404NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGG404NanoTraditionalPlanTime = currentTime;
  var ENGG404NanoTraditionalPlanelement = document.getElementById("ENGG404NanoTraditionalPlan");
 if (!ENGG404NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGG404NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGG404NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGG404NanoTraditionalPlan")[i];
        if (ENGG404NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG404NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG404NanoTraditionalPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG404NanoTraditionalPlan", "EngineeringProfession");
      ENGG404NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG404NanoTraditionalPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG404NanoTraditionalPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG404NanoTraditionalPlanelement, category);
}
      ENGG404NanoTraditionalPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoTraditionalPlan1Time <= 200) { 
        ProgramTechnicalElectiveNanoTraditionalPlan1Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoTraditionalPlan1Time = currentTime;
  var ProgramTechnicalElectiveNanoTraditionalPlan1element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan1");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan1flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan1").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan1")[i];
        if (ProgramTechnicalElectiveNanoTraditionalPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan1element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan1", "PROG");
      ProgramTechnicalElectiveNanoTraditionalPlan1flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan1element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan1", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan1element, category);
}
      ProgramTechnicalElectiveNanoTraditionalPlan1flag=false
  }
};
$scope.ECE403NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE403NanoTraditionalPlanTime <= 200) { 
        ECE403NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE403NanoTraditionalPlanTime = currentTime;
  var ECE403NanoTraditionalPlanelement = document.getElementById("ECE403NanoTraditionalPlan");
 if (!ECE403NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE403NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE403NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE403NanoTraditionalPlan")[i];
        if (ECE403NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE403NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine129());
      that.addLine(getLine130());
     that.highlightElement(ECE403NanoTraditionalPlanelement, "course");
     that.addToClicked("ECE403NanoTraditionalPlan", "course");
      ECE403NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine129());
      that.removeLine(getLine130());
     that.unHighlightElement(ECE403NanoTraditionalPlanelement, "course");
     var category = that.removeFromClicked("ECE403NanoTraditionalPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE403NanoTraditionalPlanelement, category);
}
      ECE403NanoTraditionalPlanflag=false
  }
};
$scope.ECE457NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE457NanoTraditionalPlanTime <= 200) { 
        ECE457NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE457NanoTraditionalPlanTime = currentTime;
  var ECE457NanoTraditionalPlanelement = document.getElementById("ECE457NanoTraditionalPlan");
 if (!ECE457NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE457NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE457NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE457NanoTraditionalPlan")[i];
        if (ECE457NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE457NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ECE457NanoTraditionalPlanelement, "course");
     that.addToClicked("ECE457NanoTraditionalPlan", "course");
      ECE457NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ECE457NanoTraditionalPlanelement, "course");
     var category = that.removeFromClicked("ECE457NanoTraditionalPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE457NanoTraditionalPlanelement, category);
}
      ECE457NanoTraditionalPlanflag=false
  }
};
$scope.ECE475NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE475NanoTraditionalPlanTime <= 200) { 
        ECE475NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE475NanoTraditionalPlanTime = currentTime;
  var ECE475NanoTraditionalPlanelement = document.getElementById("ECE475NanoTraditionalPlan");
 if (!ECE475NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE475NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE475NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE475NanoTraditionalPlan")[i];
        if (ECE475NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE475NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine131());
     that.highlightElement(ECE475NanoTraditionalPlanelement, "course");
     that.addToClicked("ECE475NanoTraditionalPlan", "course");
      ECE475NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine131());
     that.unHighlightElement(ECE475NanoTraditionalPlanelement, "course");
     var category = that.removeFromClicked("ECE475NanoTraditionalPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE475NanoTraditionalPlanelement, category);
}
      ECE475NanoTraditionalPlanflag=false
  }
};
$scope.ECE492NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE492NanoTraditionalPlanTime <= 200) { 
        ECE492NanoTraditionalPlanTime = currentTime;
        return;
    }
ECE492NanoTraditionalPlanTime = currentTime;
  var ECE492NanoTraditionalPlanelement = document.getElementById("ECE492NanoTraditionalPlan");
 if (!ECE492NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ECE492NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ECE492NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ECE492NanoTraditionalPlan")[i];
        if (ECE492NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE492NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine132());
      that.addLine(getLine133());
     that.highlightElement(ECE492NanoTraditionalPlanelement, "EngineeringDesign");
     that.addToClicked("ECE492NanoTraditionalPlan", "EngineeringDesign");
      ECE492NanoTraditionalPlanflag=true
  }
 else {
      that.removeLine(getLine132());
      that.removeLine(getLine133());
     that.unHighlightElement(ECE492NanoTraditionalPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE492NanoTraditionalPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE492NanoTraditionalPlanelement, category);
}
      ECE492NanoTraditionalPlanflag=false
  }
};
$scope.ENGG400NanoTraditionalPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG400NanoTraditionalPlanTime <= 200) { 
        ENGG400NanoTraditionalPlanTime = currentTime;
        return;
    }
ENGG400NanoTraditionalPlanTime = currentTime;
  var ENGG400NanoTraditionalPlanelement = document.getElementById("ENGG400NanoTraditionalPlan");
 if (!ENGG400NanoTraditionalPlanflag) {
     if (that.NanoTraditionalPlanClickedMap.get("ENGG400NanoTraditionalPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ENGG400NanoTraditionalPlan").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ENGG400NanoTraditionalPlan")[i];
        if (ENGG400NanoTraditionalPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG400NanoTraditionalPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG400NanoTraditionalPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG400NanoTraditionalPlan", "EngineeringProfession");
      ENGG400NanoTraditionalPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG400NanoTraditionalPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG400NanoTraditionalPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG400NanoTraditionalPlanelement, category);
}
      ENGG400NanoTraditionalPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan2Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoTraditionalPlan2Time <= 200) { 
        ProgramTechnicalElectiveNanoTraditionalPlan2Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoTraditionalPlan2Time = currentTime;
  var ProgramTechnicalElectiveNanoTraditionalPlan2element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan2");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan2flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan2").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan2").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan2")[i];
        if (ProgramTechnicalElectiveNanoTraditionalPlan2element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan2element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan2element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan2", "PROG");
      ProgramTechnicalElectiveNanoTraditionalPlan2flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan2element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan2", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan2element, category);
}
      ProgramTechnicalElectiveNanoTraditionalPlan2flag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan3Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoTraditionalPlan3Time <= 200) { 
        ProgramTechnicalElectiveNanoTraditionalPlan3Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoTraditionalPlan3Time = currentTime;
  var ProgramTechnicalElectiveNanoTraditionalPlan3element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan3");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan3flag) {
     if (that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan3").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan3").length; i++) { 
        var cate = that.NanoTraditionalPlanClickedMap.get("ProgramTechnicalElectiveNanoTraditionalPlan3")[i];
        if (ProgramTechnicalElectiveNanoTraditionalPlan3element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan3element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan3element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoTraditionalPlan3", "PROG");
      ProgramTechnicalElectiveNanoTraditionalPlan3flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoTraditionalPlan3element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoTraditionalPlan3", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoTraditionalPlan3element, category);
}
      ProgramTechnicalElectiveNanoTraditionalPlan3flag=false
  }
};
$scope.CHEM103NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CHEM103NanoTraditionalPlandesc");
 if (!CHEM103NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM103NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM103NanoTraditionalPlanrflag=false
  }
};
$scope.ENGG100NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG100NanoTraditionalPlandesc");
 if (!ENGG100NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG100NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG100NanoTraditionalPlanrflag=false
  }
};
$scope.ENGG130NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG130NanoTraditionalPlandesc");
 if (!ENGG130NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG130NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG130NanoTraditionalPlanrflag=false
  }
};
$scope.ENGL199NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGL199NanoTraditionalPlandesc");
 if (!ENGL199NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGL199NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGL199NanoTraditionalPlanrflag=false
  }
};
$scope.MATH100NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH100NanoTraditionalPlandesc");
 if (!MATH100NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH100NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH100NanoTraditionalPlanrflag=false
  }
};
$scope.PHYS130NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("PHYS130NanoTraditionalPlandesc");
 if (!PHYS130NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS130NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS130NanoTraditionalPlanrflag=false
  }
};
$scope.CHEM105NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CHEM105NanoTraditionalPlandesc");
 if (!CHEM105NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM105NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM105NanoTraditionalPlanrflag=false
  }
};
$scope.ENCMP100NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENCMP100NanoTraditionalPlandesc");
 if (!ENCMP100NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENCMP100NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENCMP100NanoTraditionalPlanrflag=false
  }
};
$scope.ENGG160NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG160NanoTraditionalPlandesc");
 if (!ENGG160NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG160NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG160NanoTraditionalPlanrflag=false
  }
};
$scope.ENPH131NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENPH131NanoTraditionalPlandesc");
 if (!ENPH131NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENPH131NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENPH131NanoTraditionalPlanrflag=false
  }
};
$scope.MATH101NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH101NanoTraditionalPlandesc");
 if (!MATH101NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH101NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH101NanoTraditionalPlanrflag=false
  }
};
$scope.MATH102NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH102NanoTraditionalPlandesc");
 if (!MATH102NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH102NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH102NanoTraditionalPlanrflag=false
  }
};
$scope.CMPUT274NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT274NanoTraditionalPlandesc");
 if (!CMPUT274NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT274NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT274NanoTraditionalPlanrflag=false
  }
};
$scope.ECE202NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE202NanoTraditionalPlandesc");
 if (!ECE202NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE202NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE202NanoTraditionalPlanrflag=false
  }
};
$scope.ECE210NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE210NanoTraditionalPlandesc");
 if (!ECE210NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE210NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE210NanoTraditionalPlanrflag=false
  }
};
$scope.MATH201NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH201NanoTraditionalPlandesc");
 if (!MATH201NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH201NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH201NanoTraditionalPlanrflag=false
  }
};
$scope.MATH209NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("MATH209NanoTraditionalPlandesc");
 if (!MATH209NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH209NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH209NanoTraditionalPlanrflag=false
  }
};
$scope.ComplementaryElectiveNanoTraditionalPlan0RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveNanoTraditionalPlan0desc");
 if (!ComplementaryElectiveNanoTraditionalPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveNanoTraditionalPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveNanoTraditionalPlan0rflag=false
  }
};
$scope.CMPUT272NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT272NanoTraditionalPlandesc");
 if (!CMPUT272NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT272NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT272NanoTraditionalPlanrflag=false
  }
};
$scope.CMPUT275NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT275NanoTraditionalPlandesc");
 if (!CMPUT275NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT275NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT275NanoTraditionalPlanrflag=false
  }
};
$scope.ECE203NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE203NanoTraditionalPlandesc");
 if (!ECE203NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE203NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE203NanoTraditionalPlanrflag=false
  }
};
$scope.ECE212NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE212NanoTraditionalPlandesc");
 if (!ECE212NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE212NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE212NanoTraditionalPlanrflag=false
  }
};
$scope.ECE240NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE240NanoTraditionalPlandesc");
 if (!ECE240NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE240NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE240NanoTraditionalPlanrflag=false
  }
};
$scope.PHYS230NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("PHYS230NanoTraditionalPlandesc");
 if (!PHYS230NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS230NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS230NanoTraditionalPlanrflag=false
  }
};
$scope.ECE302NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE302NanoTraditionalPlandesc");
 if (!ECE302NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE302NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE302NanoTraditionalPlanrflag=false
  }
};
$scope.ECE311NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE311NanoTraditionalPlandesc");
 if (!ECE311NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE311NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE311NanoTraditionalPlanrflag=false
  }
};
$scope.ECE325NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE325NanoTraditionalPlandesc");
 if (!ECE325NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE325NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE325NanoTraditionalPlanrflag=false
  }
};
$scope.ECE342NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE342NanoTraditionalPlandesc");
 if (!ECE342NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE342NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE342NanoTraditionalPlanrflag=false
  }
};
$scope.ComplementaryElectiveNanoTraditionalPlan1RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveNanoTraditionalPlan1desc");
 if (!ComplementaryElectiveNanoTraditionalPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveNanoTraditionalPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveNanoTraditionalPlan1rflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan0RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan0desc");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan0rflag=false
  }
};
$scope.CMPUT291NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT291NanoTraditionalPlandesc");
 if (!CMPUT291NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT291NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT291NanoTraditionalPlanrflag=false
  }
};
$scope.ECE315NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE315NanoTraditionalPlandesc");
 if (!ECE315NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE315NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE315NanoTraditionalPlanrflag=false
  }
};
$scope.ECE412NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE412NanoTraditionalPlandesc");
 if (!ECE412NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE412NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE412NanoTraditionalPlanrflag=false
  }
};
$scope.ECE450NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE450NanoTraditionalPlandesc");
 if (!ECE450NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE450NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE450NanoTraditionalPlanrflag=false
  }
};
$scope.ITSElectiveNanoTraditionalPlan0RCListener = function () {
  var element = document.getElementById("ITSElectiveNanoTraditionalPlan0desc");
 if (!ITSElectiveNanoTraditionalPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ITSElectiveNanoTraditionalPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ITSElectiveNanoTraditionalPlan0rflag=false
  }
};
$scope.CMPUT301NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("CMPUT301NanoTraditionalPlandesc");
 if (!CMPUT301NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT301NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT301NanoTraditionalPlanrflag=false
  }
};
$scope.ECE304NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE304NanoTraditionalPlandesc");
 if (!ECE304NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE304NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE304NanoTraditionalPlanrflag=false
  }
};
$scope.ECE410NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE410NanoTraditionalPlandesc");
 if (!ECE410NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE410NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE410NanoTraditionalPlanrflag=false
  }
};
$scope.ENGM310NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGM310NanoTraditionalPlandesc");
 if (!ENGM310NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM310NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM310NanoTraditionalPlanrflag=false
  }
};
$scope.ENGM401NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGM401NanoTraditionalPlandesc");
 if (!ENGM401NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM401NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM401NanoTraditionalPlanrflag=false
  }
};
$scope.ENGG404NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG404NanoTraditionalPlandesc");
 if (!ENGG404NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG404NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG404NanoTraditionalPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan1RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan1desc");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan1rflag=false
  }
};
$scope.ECE403NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE403NanoTraditionalPlandesc");
 if (!ECE403NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE403NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE403NanoTraditionalPlanrflag=false
  }
};
$scope.ECE457NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE457NanoTraditionalPlandesc");
 if (!ECE457NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE457NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE457NanoTraditionalPlanrflag=false
  }
};
$scope.ECE475NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE475NanoTraditionalPlandesc");
 if (!ECE475NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE475NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE475NanoTraditionalPlanrflag=false
  }
};
$scope.ECE492NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ECE492NanoTraditionalPlandesc");
 if (!ECE492NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE492NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE492NanoTraditionalPlanrflag=false
  }
};
$scope.ENGG400NanoTraditionalPlanRCListener = function () {
  var element = document.getElementById("ENGG400NanoTraditionalPlandesc");
 if (!ENGG400NanoTraditionalPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG400NanoTraditionalPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG400NanoTraditionalPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan2RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan2desc");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan2rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan2rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan2rflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoTraditionalPlan3RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoTraditionalPlan3desc");
 if (!ProgramTechnicalElectiveNanoTraditionalPlan3rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan3rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoTraditionalPlan3rflag=false
  }
};
  var CHEM103NanoCoopPlanflag = false;
  var CHEM103NanoCoopPlanrflag = false;
 var CHEM103NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CHEM103NanoCoopPlan", []);
  var ENGG100NanoCoopPlanflag = false;
  var ENGG100NanoCoopPlanrflag = false;
 var ENGG100NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGG100NanoCoopPlan", []);
  var ENGG130NanoCoopPlanflag = false;
  var ENGG130NanoCoopPlanrflag = false;
 var ENGG130NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGG130NanoCoopPlan", []);
  var ENGL199NanoCoopPlanflag = false;
  var ENGL199NanoCoopPlanrflag = false;
 var ENGL199NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGL199NanoCoopPlan", []);
  var MATH100NanoCoopPlanflag = false;
  var MATH100NanoCoopPlanrflag = false;
 var MATH100NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("MATH100NanoCoopPlan", []);
  var PHYS130NanoCoopPlanflag = false;
  var PHYS130NanoCoopPlanrflag = false;
 var PHYS130NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("PHYS130NanoCoopPlan", []);
  var CHEM105NanoCoopPlanflag = false;
  var CHEM105NanoCoopPlanrflag = false;
 var CHEM105NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CHEM105NanoCoopPlan", []);
  var ENCMP100NanoCoopPlanflag = false;
  var ENCMP100NanoCoopPlanrflag = false;
 var ENCMP100NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENCMP100NanoCoopPlan", []);
  var ENGG160NanoCoopPlanflag = false;
  var ENGG160NanoCoopPlanrflag = false;
 var ENGG160NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGG160NanoCoopPlan", []);
  var ENPH131NanoCoopPlanflag = false;
  var ENPH131NanoCoopPlanrflag = false;
 var ENPH131NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENPH131NanoCoopPlan", []);
  var MATH101NanoCoopPlanflag = false;
  var MATH101NanoCoopPlanrflag = false;
 var MATH101NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("MATH101NanoCoopPlan", []);
  var MATH102NanoCoopPlanflag = false;
  var MATH102NanoCoopPlanrflag = false;
 var MATH102NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("MATH102NanoCoopPlan", []);
  var CMPUT274NanoCoopPlanflag = false;
  var CMPUT274NanoCoopPlanrflag = false;
 var CMPUT274NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CMPUT274NanoCoopPlan", []);
  var ECE202NanoCoopPlanflag = false;
  var ECE202NanoCoopPlanrflag = false;
 var ECE202NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE202NanoCoopPlan", []);
  var ECE210NanoCoopPlanflag = false;
  var ECE210NanoCoopPlanrflag = false;
 var ECE210NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE210NanoCoopPlan", []);
  var ENGG299NanoCoopPlanflag = false;
  var ENGG299NanoCoopPlanrflag = false;
 var ENGG299NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGG299NanoCoopPlan", []);
  var MATH201NanoCoopPlanflag = false;
  var MATH201NanoCoopPlanrflag = false;
 var MATH201NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("MATH201NanoCoopPlan", []);
  var MATH209NanoCoopPlanflag = false;
  var MATH209NanoCoopPlanrflag = false;
 var MATH209NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("MATH209NanoCoopPlan", []);
  var CMPUT272NanoCoopPlanflag = false;
  var CMPUT272NanoCoopPlanrflag = false;
 var CMPUT272NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CMPUT272NanoCoopPlan", []);
  var CMPUT275NanoCoopPlanflag = false;
  var CMPUT275NanoCoopPlanrflag = false;
 var CMPUT275NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CMPUT275NanoCoopPlan", []);
  var ECE203NanoCoopPlanflag = false;
  var ECE203NanoCoopPlanrflag = false;
 var ECE203NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE203NanoCoopPlan", []);
  var ECE212NanoCoopPlanflag = false;
  var ECE212NanoCoopPlanrflag = false;
 var ECE212NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE212NanoCoopPlan", []);
  var ECE240NanoCoopPlanflag = false;
  var ECE240NanoCoopPlanrflag = false;
 var ECE240NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE240NanoCoopPlan", []);
  var PHYS230NanoCoopPlanflag = false;
  var PHYS230NanoCoopPlanrflag = false;
 var PHYS230NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("PHYS230NanoCoopPlan", []);
  var WKEXP901NanoCoopPlanflag = false;
  var WKEXP901NanoCoopPlanrflag = false;
 var WKEXP901NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("WKEXP901NanoCoopPlan", []);
  var ECE302NanoCoopPlanflag = false;
  var ECE302NanoCoopPlanrflag = false;
 var ECE302NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE302NanoCoopPlan", []);
  var ECE311NanoCoopPlanflag = false;
  var ECE311NanoCoopPlanrflag = false;
 var ECE311NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE311NanoCoopPlan", []);
  var ECE325NanoCoopPlanflag = false;
  var ECE325NanoCoopPlanrflag = false;
 var ECE325NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE325NanoCoopPlan", []);
  var ComplementaryElectiveNanoCoopPlan0flag = false;
  var ComplementaryElectiveNanoCoopPlan0rflag = false;
 var ComplementaryElectiveNanoCoopPlan0Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ComplementaryElectiveNanoCoopPlan0", []);
  var ComplementaryElectiveNanoCoopPlan1flag = false;
  var ComplementaryElectiveNanoCoopPlan1rflag = false;
 var ComplementaryElectiveNanoCoopPlan1Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ComplementaryElectiveNanoCoopPlan1", []);
  var ProgramTechnicalElectiveNanoCoopPlan0flag = false;
  var ProgramTechnicalElectiveNanoCoopPlan0rflag = false;
 var ProgramTechnicalElectiveNanoCoopPlan0Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ProgramTechnicalElectiveNanoCoopPlan0", []);
  var WKEXP902NanoCoopPlanflag = false;
  var WKEXP902NanoCoopPlanrflag = false;
 var WKEXP902NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("WKEXP902NanoCoopPlan", []);
  var WKEXP903NanoCoopPlanflag = false;
  var WKEXP903NanoCoopPlanrflag = false;
 var WKEXP903NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("WKEXP903NanoCoopPlan", []);
  var CMPUT291NanoCoopPlanflag = false;
  var CMPUT291NanoCoopPlanrflag = false;
 var CMPUT291NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CMPUT291NanoCoopPlan", []);
  var ECE304NanoCoopPlanflag = false;
  var ECE304NanoCoopPlanrflag = false;
 var ECE304NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE304NanoCoopPlan", []);
  var ECE342NanoCoopPlanflag = false;
  var ECE342NanoCoopPlanrflag = false;
 var ECE342NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE342NanoCoopPlan", []);
  var ECE410NanoCoopPlanflag = false;
  var ECE410NanoCoopPlanrflag = false;
 var ECE410NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE410NanoCoopPlan", []);
  var ENGG404NanoCoopPlanflag = false;
  var ENGG404NanoCoopPlanrflag = false;
 var ENGG404NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGG404NanoCoopPlan", []);
  var ProgramTechnicalElectiveNanoCoopPlan1flag = false;
  var ProgramTechnicalElectiveNanoCoopPlan1rflag = false;
 var ProgramTechnicalElectiveNanoCoopPlan1Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ProgramTechnicalElectiveNanoCoopPlan1", []);
  var CMPUT301NanoCoopPlanflag = false;
  var CMPUT301NanoCoopPlanrflag = false;
 var CMPUT301NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("CMPUT301NanoCoopPlan", []);
  var ECE315NanoCoopPlanflag = false;
  var ECE315NanoCoopPlanrflag = false;
 var ECE315NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE315NanoCoopPlan", []);
  var ECE403NanoCoopPlanflag = false;
  var ECE403NanoCoopPlanrflag = false;
 var ECE403NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE403NanoCoopPlan", []);
  var ECE450NanoCoopPlanflag = false;
  var ECE450NanoCoopPlanrflag = false;
 var ECE450NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE450NanoCoopPlan", []);
  var ECE475NanoCoopPlanflag = false;
  var ECE475NanoCoopPlanrflag = false;
 var ECE475NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE475NanoCoopPlan", []);
  var ENGM310NanoCoopPlanflag = false;
  var ENGM310NanoCoopPlanrflag = false;
 var ENGM310NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGM310NanoCoopPlan", []);
  var ENGM401NanoCoopPlanflag = false;
  var ENGM401NanoCoopPlanrflag = false;
 var ENGM401NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGM401NanoCoopPlan", []);
  var WKEXP904NanoCoopPlanflag = false;
  var WKEXP904NanoCoopPlanrflag = false;
 var WKEXP904NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("WKEXP904NanoCoopPlan", []);
  var WKEXP905NanoCoopPlanflag = false;
  var WKEXP905NanoCoopPlanrflag = false;
 var WKEXP905NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("WKEXP905NanoCoopPlan", []);
  var ECE412NanoCoopPlanflag = false;
  var ECE412NanoCoopPlanrflag = false;
 var ECE412NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE412NanoCoopPlan", []);
  var ECE457NanoCoopPlanflag = false;
  var ECE457NanoCoopPlanrflag = false;
 var ECE457NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE457NanoCoopPlan", []);
  var ECE492NanoCoopPlanflag = false;
  var ECE492NanoCoopPlanrflag = false;
 var ECE492NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ECE492NanoCoopPlan", []);
  var ENGG400NanoCoopPlanflag = false;
  var ENGG400NanoCoopPlanrflag = false;
 var ENGG400NanoCoopPlanTime = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ENGG400NanoCoopPlan", []);
  var ProgramTechnicalElectiveNanoCoopPlan2flag = false;
  var ProgramTechnicalElectiveNanoCoopPlan2rflag = false;
 var ProgramTechnicalElectiveNanoCoopPlan2Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ProgramTechnicalElectiveNanoCoopPlan2", []);
  var ProgramTechnicalElectiveNanoCoopPlan3flag = false;
  var ProgramTechnicalElectiveNanoCoopPlan3rflag = false;
 var ProgramTechnicalElectiveNanoCoopPlan3Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ProgramTechnicalElectiveNanoCoopPlan3", []);
  var ITSElectiveNanoCoopPlan0flag = false;
  var ITSElectiveNanoCoopPlan0rflag = false;
 var ITSElectiveNanoCoopPlan0Time = new Date().getTime();
this.NanoCoopPlanClickedMap.set("ITSElectiveNanoCoopPlan0", []);
$scope.CHEM103NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM103NanoCoopPlanTime <= 200) { 
        CHEM103NanoCoopPlanTime = currentTime;
        return;
    }
CHEM103NanoCoopPlanTime = currentTime;
  var CHEM103NanoCoopPlanelement = document.getElementById("CHEM103NanoCoopPlan");
 if (!CHEM103NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CHEM103NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CHEM103NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CHEM103NanoCoopPlan")[i];
        if (CHEM103NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM103NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine136());
     that.highlightElement(CHEM103NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("CHEM103NanoCoopPlan", "NaturalSciences");
      CHEM103NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine136());
     that.unHighlightElement(CHEM103NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM103NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM103NanoCoopPlanelement, category);
}
      CHEM103NanoCoopPlanflag=false
  }
};
$scope.ENGG100NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG100NanoCoopPlanTime <= 200) { 
        ENGG100NanoCoopPlanTime = currentTime;
        return;
    }
ENGG100NanoCoopPlanTime = currentTime;
  var ENGG100NanoCoopPlanelement = document.getElementById("ENGG100NanoCoopPlan");
 if (!ENGG100NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGG100NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGG100NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGG100NanoCoopPlan")[i];
        if (ENGG100NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG100NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG100NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG100NanoCoopPlan", "EngineeringProfession");
      ENGG100NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG100NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG100NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG100NanoCoopPlanelement, category);
}
      ENGG100NanoCoopPlanflag=false
  }
};
$scope.ENGG130NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG130NanoCoopPlanTime <= 200) { 
        ENGG130NanoCoopPlanTime = currentTime;
        return;
    }
ENGG130NanoCoopPlanTime = currentTime;
  var ENGG130NanoCoopPlanelement = document.getElementById("ENGG130NanoCoopPlan");
 if (!ENGG130NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGG130NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGG130NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGG130NanoCoopPlan")[i];
        if (ENGG130NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG130NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine134());
      that.addLine(getLine139());
     that.highlightElement(ENGG130NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("ENGG130NanoCoopPlan", "NaturalSciences");
      ENGG130NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine134());
      that.removeLine(getLine139());
     that.unHighlightElement(ENGG130NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENGG130NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENGG130NanoCoopPlanelement, category);
}
      ENGG130NanoCoopPlanflag=false
  }
};
$scope.ENGL199NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGL199NanoCoopPlanTime <= 200) { 
        ENGL199NanoCoopPlanTime = currentTime;
        return;
    }
ENGL199NanoCoopPlanTime = currentTime;
  var ENGL199NanoCoopPlanelement = document.getElementById("ENGL199NanoCoopPlan");
 if (!ENGL199NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGL199NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGL199NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGL199NanoCoopPlan")[i];
        if (ENGL199NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGL199NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine137());
     that.highlightElement(ENGL199NanoCoopPlanelement, "Other");
     that.addToClicked("ENGL199NanoCoopPlan", "Other");
      ENGL199NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine137());
     that.unHighlightElement(ENGL199NanoCoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGL199NanoCoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGL199NanoCoopPlanelement, category);
}
      ENGL199NanoCoopPlanflag=false
  }
};
$scope.MATH100NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH100NanoCoopPlanTime <= 200) { 
        MATH100NanoCoopPlanTime = currentTime;
        return;
    }
MATH100NanoCoopPlanTime = currentTime;
  var MATH100NanoCoopPlanelement = document.getElementById("MATH100NanoCoopPlan");
 if (!MATH100NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("MATH100NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("MATH100NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("MATH100NanoCoopPlan")[i];
        if (MATH100NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH100NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine134());
      that.addLine(getLine135());
      that.addLine(getLine138());
      that.addLine(getLine141());
      that.addLine(getLine142());
      that.addLine(getLine156());
     that.highlightElement(MATH100NanoCoopPlanelement, "Math");
     that.addToClicked("MATH100NanoCoopPlan", "Math");
      MATH100NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine134());
      that.removeLine(getLine135());
      that.removeLine(getLine138());
      that.removeLine(getLine141());
      that.removeLine(getLine142());
      that.removeLine(getLine156());
     that.unHighlightElement(MATH100NanoCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH100NanoCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH100NanoCoopPlanelement, category);
}
      MATH100NanoCoopPlanflag=false
  }
};
$scope.PHYS130NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS130NanoCoopPlanTime <= 200) { 
        PHYS130NanoCoopPlanTime = currentTime;
        return;
    }
PHYS130NanoCoopPlanTime = currentTime;
  var PHYS130NanoCoopPlanelement = document.getElementById("PHYS130NanoCoopPlan");
 if (!PHYS130NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("PHYS130NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("PHYS130NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("PHYS130NanoCoopPlan")[i];
        if (PHYS130NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS130NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine135());
      that.addLine(getLine155());
     that.highlightElement(PHYS130NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("PHYS130NanoCoopPlan", "NaturalSciences");
      PHYS130NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine135());
      that.removeLine(getLine155());
     that.unHighlightElement(PHYS130NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS130NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS130NanoCoopPlanelement, category);
}
      PHYS130NanoCoopPlanflag=false
  }
};
$scope.CHEM105NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM105NanoCoopPlanTime <= 200) { 
        CHEM105NanoCoopPlanTime = currentTime;
        return;
    }
CHEM105NanoCoopPlanTime = currentTime;
  var CHEM105NanoCoopPlanelement = document.getElementById("CHEM105NanoCoopPlan");
 if (!CHEM105NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CHEM105NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CHEM105NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CHEM105NanoCoopPlan")[i];
        if (CHEM105NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM105NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine136());
     that.highlightElement(CHEM105NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("CHEM105NanoCoopPlan", "NaturalSciences");
      CHEM105NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine136());
     that.unHighlightElement(CHEM105NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM105NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM105NanoCoopPlanelement, category);
}
      CHEM105NanoCoopPlanflag=false
  }
};
$scope.ENCMP100NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENCMP100NanoCoopPlanTime <= 200) { 
        ENCMP100NanoCoopPlanTime = currentTime;
        return;
    }
ENCMP100NanoCoopPlanTime = currentTime;
  var ENCMP100NanoCoopPlanelement = document.getElementById("ENCMP100NanoCoopPlan");
 if (!ENCMP100NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENCMP100NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENCMP100NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENCMP100NanoCoopPlan")[i];
        if (ENCMP100NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENCMP100NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENCMP100NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("ENCMP100NanoCoopPlan", "NaturalSciences");
      ENCMP100NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENCMP100NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENCMP100NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENCMP100NanoCoopPlanelement, category);
}
      ENCMP100NanoCoopPlanflag=false
  }
};
$scope.ENGG160NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG160NanoCoopPlanTime <= 200) { 
        ENGG160NanoCoopPlanTime = currentTime;
        return;
    }
ENGG160NanoCoopPlanTime = currentTime;
  var ENGG160NanoCoopPlanelement = document.getElementById("ENGG160NanoCoopPlan");
 if (!ENGG160NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGG160NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGG160NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGG160NanoCoopPlan")[i];
        if (ENGG160NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG160NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine137());
     that.highlightElement(ENGG160NanoCoopPlanelement, "EngineeringDesign");
     that.addToClicked("ENGG160NanoCoopPlan", "EngineeringDesign");
      ENGG160NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine137());
     that.unHighlightElement(ENGG160NanoCoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ENGG160NanoCoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ENGG160NanoCoopPlanelement, category);
}
      ENGG160NanoCoopPlanflag=false
  }
};
$scope.ENPH131NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENPH131NanoCoopPlanTime <= 200) { 
        ENPH131NanoCoopPlanTime = currentTime;
        return;
    }
ENPH131NanoCoopPlanTime = currentTime;
  var ENPH131NanoCoopPlanelement = document.getElementById("ENPH131NanoCoopPlan");
 if (!ENPH131NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENPH131NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENPH131NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENPH131NanoCoopPlan")[i];
        if (ENPH131NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENPH131NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine138());
      that.addLine(getLine139());
      that.addLine(getLine140());
     that.highlightElement(ENPH131NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("ENPH131NanoCoopPlan", "NaturalSciences");
      ENPH131NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine138());
      that.removeLine(getLine139());
      that.removeLine(getLine140());
     that.unHighlightElement(ENPH131NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENPH131NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENPH131NanoCoopPlanelement, category);
}
      ENPH131NanoCoopPlanflag=false
  }
};
$scope.MATH101NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH101NanoCoopPlanTime <= 200) { 
        MATH101NanoCoopPlanTime = currentTime;
        return;
    }
MATH101NanoCoopPlanTime = currentTime;
  var MATH101NanoCoopPlanelement = document.getElementById("MATH101NanoCoopPlan");
 if (!MATH101NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("MATH101NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("MATH101NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("MATH101NanoCoopPlan")[i];
        if (MATH101NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH101NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine140());
      that.addLine(getLine141());
      that.addLine(getLine143());
      that.addLine(getLine146());
      that.addLine(getLine157());
     that.highlightElement(MATH101NanoCoopPlanelement, "Math");
     that.addToClicked("MATH101NanoCoopPlan", "Math");
      MATH101NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine140());
      that.removeLine(getLine141());
      that.removeLine(getLine143());
      that.removeLine(getLine146());
      that.removeLine(getLine157());
     that.unHighlightElement(MATH101NanoCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH101NanoCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH101NanoCoopPlanelement, category);
}
      MATH101NanoCoopPlanflag=false
  }
};
$scope.MATH102NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH102NanoCoopPlanTime <= 200) { 
        MATH102NanoCoopPlanTime = currentTime;
        return;
    }
MATH102NanoCoopPlanTime = currentTime;
  var MATH102NanoCoopPlanelement = document.getElementById("MATH102NanoCoopPlan");
 if (!MATH102NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("MATH102NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("MATH102NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("MATH102NanoCoopPlan")[i];
        if (MATH102NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH102NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine142());
      that.addLine(getLine144());
      that.addLine(getLine147());
     that.highlightElement(MATH102NanoCoopPlanelement, "Math");
     that.addToClicked("MATH102NanoCoopPlan", "Math");
      MATH102NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine142());
      that.removeLine(getLine144());
      that.removeLine(getLine147());
     that.unHighlightElement(MATH102NanoCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH102NanoCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH102NanoCoopPlanelement, category);
}
      MATH102NanoCoopPlanflag=false
  }
};
$scope.CMPUT274NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT274NanoCoopPlanTime <= 200) { 
        CMPUT274NanoCoopPlanTime = currentTime;
        return;
    }
CMPUT274NanoCoopPlanTime = currentTime;
  var CMPUT274NanoCoopPlanelement = document.getElementById("CMPUT274NanoCoopPlan");
 if (!CMPUT274NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CMPUT274NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CMPUT274NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CMPUT274NanoCoopPlan")[i];
        if (CMPUT274NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT274NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine148());
      that.addLine(getLine149());
      that.addLine(getLine164());
     that.highlightElement(CMPUT274NanoCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT274NanoCoopPlan", "ComputingScience");
      CMPUT274NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine148());
      that.removeLine(getLine149());
      that.removeLine(getLine164());
     that.unHighlightElement(CMPUT274NanoCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT274NanoCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT274NanoCoopPlanelement, category);
}
      CMPUT274NanoCoopPlanflag=false
  }
};
$scope.ECE202NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE202NanoCoopPlanTime <= 200) { 
        ECE202NanoCoopPlanTime = currentTime;
        return;
    }
ECE202NanoCoopPlanTime = currentTime;
  var ECE202NanoCoopPlanelement = document.getElementById("ECE202NanoCoopPlan");
 if (!ECE202NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE202NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE202NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE202NanoCoopPlan")[i];
        if (ECE202NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE202NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine143());
      that.addLine(getLine144());
      that.addLine(getLine150());
      that.addLine(getLine153());
     that.highlightElement(ECE202NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE202NanoCoopPlan", "EngineeringSciences");
      ECE202NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine143());
      that.removeLine(getLine144());
      that.removeLine(getLine150());
      that.removeLine(getLine153());
     that.unHighlightElement(ECE202NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE202NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE202NanoCoopPlanelement, category);
}
      ECE202NanoCoopPlanflag=false
  }
};
$scope.ECE210NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE210NanoCoopPlanTime <= 200) { 
        ECE210NanoCoopPlanTime = currentTime;
        return;
    }
ECE210NanoCoopPlanTime = currentTime;
  var ECE210NanoCoopPlanelement = document.getElementById("ECE210NanoCoopPlan");
 if (!ECE210NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE210NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE210NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE210NanoCoopPlan")[i];
        if (ECE210NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE210NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine152());
      that.addLine(getLine167());
     that.highlightElement(ECE210NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE210NanoCoopPlan", "EngineeringSciences");
      ECE210NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine152());
      that.removeLine(getLine167());
     that.unHighlightElement(ECE210NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE210NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE210NanoCoopPlanelement, category);
}
      ECE210NanoCoopPlanflag=false
  }
};
$scope.ENGG299NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG299NanoCoopPlanTime <= 200) { 
        ENGG299NanoCoopPlanTime = currentTime;
        return;
    }
ENGG299NanoCoopPlanTime = currentTime;
  var ENGG299NanoCoopPlanelement = document.getElementById("ENGG299NanoCoopPlan");
 if (!ENGG299NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGG299NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGG299NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGG299NanoCoopPlan")[i];
        if (ENGG299NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG299NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine158());
     that.highlightElement(ENGG299NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG299NanoCoopPlan", "EngineeringProfession");
      ENGG299NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine158());
     that.unHighlightElement(ENGG299NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG299NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG299NanoCoopPlanelement, category);
}
      ENGG299NanoCoopPlanflag=false
  }
};
$scope.MATH201NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH201NanoCoopPlanTime <= 200) { 
        MATH201NanoCoopPlanTime = currentTime;
        return;
    }
MATH201NanoCoopPlanTime = currentTime;
  var MATH201NanoCoopPlanelement = document.getElementById("MATH201NanoCoopPlan");
 if (!MATH201NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("MATH201NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("MATH201NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("MATH201NanoCoopPlan")[i];
        if (MATH201NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH201NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine145());
      that.addLine(getLine154());
     that.highlightElement(MATH201NanoCoopPlanelement, "Math");
     that.addToClicked("MATH201NanoCoopPlan", "Math");
      MATH201NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine145());
      that.removeLine(getLine154());
     that.unHighlightElement(MATH201NanoCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH201NanoCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH201NanoCoopPlanelement, category);
}
      MATH201NanoCoopPlanflag=false
  }
};
$scope.MATH209NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH209NanoCoopPlanTime <= 200) { 
        MATH209NanoCoopPlanTime = currentTime;
        return;
    }
MATH209NanoCoopPlanTime = currentTime;
  var MATH209NanoCoopPlanelement = document.getElementById("MATH209NanoCoopPlan");
 if (!MATH209NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("MATH209NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("MATH209NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("MATH209NanoCoopPlan")[i];
        if (MATH209NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH209NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine145());
      that.addLine(getLine146());
      that.addLine(getLine147());
      that.addLine(getLine169());
     that.highlightElement(MATH209NanoCoopPlanelement, "Math");
     that.addToClicked("MATH209NanoCoopPlan", "Math");
      MATH209NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine145());
      that.removeLine(getLine146());
      that.removeLine(getLine147());
      that.removeLine(getLine169());
     that.unHighlightElement(MATH209NanoCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH209NanoCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH209NanoCoopPlanelement, category);
}
      MATH209NanoCoopPlanflag=false
  }
};
$scope.CMPUT272NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT272NanoCoopPlanTime <= 200) { 
        CMPUT272NanoCoopPlanTime = currentTime;
        return;
    }
CMPUT272NanoCoopPlanTime = currentTime;
  var CMPUT272NanoCoopPlanelement = document.getElementById("CMPUT272NanoCoopPlan");
 if (!CMPUT272NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CMPUT272NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CMPUT272NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CMPUT272NanoCoopPlan")[i];
        if (CMPUT272NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT272NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine148());
      that.addLine(getLine165());
     that.highlightElement(CMPUT272NanoCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT272NanoCoopPlan", "ComputingScience");
      CMPUT272NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine148());
      that.removeLine(getLine165());
     that.unHighlightElement(CMPUT272NanoCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT272NanoCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT272NanoCoopPlanelement, category);
}
      CMPUT272NanoCoopPlanflag=false
  }
};
$scope.CMPUT275NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT275NanoCoopPlanTime <= 200) { 
        CMPUT275NanoCoopPlanTime = currentTime;
        return;
    }
CMPUT275NanoCoopPlanTime = currentTime;
  var CMPUT275NanoCoopPlanelement = document.getElementById("CMPUT275NanoCoopPlan");
 if (!CMPUT275NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CMPUT275NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CMPUT275NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CMPUT275NanoCoopPlan")[i];
        if (CMPUT275NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT275NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine149());
      that.addLine(getLine161());
      that.addLine(getLine166());
      that.addLine(getLine171());
     that.highlightElement(CMPUT275NanoCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT275NanoCoopPlan", "ComputingScience");
      CMPUT275NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine149());
      that.removeLine(getLine161());
      that.removeLine(getLine166());
      that.removeLine(getLine171());
     that.unHighlightElement(CMPUT275NanoCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT275NanoCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT275NanoCoopPlanelement, category);
}
      CMPUT275NanoCoopPlanflag=false
  }
};
$scope.ECE203NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE203NanoCoopPlanTime <= 200) { 
        ECE203NanoCoopPlanTime = currentTime;
        return;
    }
ECE203NanoCoopPlanTime = currentTime;
  var ECE203NanoCoopPlanelement = document.getElementById("ECE203NanoCoopPlan");
 if (!ECE203NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE203NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE203NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE203NanoCoopPlan")[i];
        if (ECE203NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE203NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine150());
      that.addLine(getLine151());
      that.addLine(getLine159());
     that.highlightElement(ECE203NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE203NanoCoopPlan", "EngineeringSciences");
      ECE203NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine150());
      that.removeLine(getLine151());
      that.removeLine(getLine159());
     that.unHighlightElement(ECE203NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE203NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE203NanoCoopPlanelement, category);
}
      ECE203NanoCoopPlanflag=false
  }
};
$scope.ECE212NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE212NanoCoopPlanTime <= 200) { 
        ECE212NanoCoopPlanTime = currentTime;
        return;
    }
ECE212NanoCoopPlanTime = currentTime;
  var ECE212NanoCoopPlanelement = document.getElementById("ECE212NanoCoopPlan");
 if (!ECE212NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE212NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE212NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE212NanoCoopPlan")[i];
        if (ECE212NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE212NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine152());
      that.addLine(getLine160());
      that.addLine(getLine172());
     that.highlightElement(ECE212NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE212NanoCoopPlan", "EngineeringSciences");
      ECE212NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine152());
      that.removeLine(getLine160());
      that.removeLine(getLine172());
     that.unHighlightElement(ECE212NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE212NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE212NanoCoopPlanelement, category);
}
      ECE212NanoCoopPlanflag=false
  }
};
$scope.ECE240NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE240NanoCoopPlanTime <= 200) { 
        ECE240NanoCoopPlanTime = currentTime;
        return;
    }
ECE240NanoCoopPlanTime = currentTime;
  var ECE240NanoCoopPlanelement = document.getElementById("ECE240NanoCoopPlan");
 if (!ECE240NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE240NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE240NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE240NanoCoopPlan")[i];
        if (ECE240NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE240NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine151());
      that.addLine(getLine153());
      that.addLine(getLine154());
     that.highlightElement(ECE240NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE240NanoCoopPlan", "EngineeringSciences");
      ECE240NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine151());
      that.removeLine(getLine153());
      that.removeLine(getLine154());
     that.unHighlightElement(ECE240NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE240NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE240NanoCoopPlanelement, category);
}
      ECE240NanoCoopPlanflag=false
  }
};
$scope.PHYS230NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS230NanoCoopPlanTime <= 200) { 
        PHYS230NanoCoopPlanTime = currentTime;
        return;
    }
PHYS230NanoCoopPlanTime = currentTime;
  var PHYS230NanoCoopPlanelement = document.getElementById("PHYS230NanoCoopPlan");
 if (!PHYS230NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("PHYS230NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("PHYS230NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("PHYS230NanoCoopPlan")[i];
        if (PHYS230NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS230NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine155());
      that.addLine(getLine156());
      that.addLine(getLine157());
     that.highlightElement(PHYS230NanoCoopPlanelement, "NaturalSciences");
     that.addToClicked("PHYS230NanoCoopPlan", "NaturalSciences");
      PHYS230NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine155());
      that.removeLine(getLine156());
      that.removeLine(getLine157());
     that.unHighlightElement(PHYS230NanoCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS230NanoCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS230NanoCoopPlanelement, category);
}
      PHYS230NanoCoopPlanflag=false
  }
};
$scope.WKEXP901NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP901NanoCoopPlanTime <= 200) { 
        WKEXP901NanoCoopPlanTime = currentTime;
        return;
    }
WKEXP901NanoCoopPlanTime = currentTime;
  var WKEXP901NanoCoopPlanelement = document.getElementById("WKEXP901NanoCoopPlan");
 if (!WKEXP901NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("WKEXP901NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("WKEXP901NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("WKEXP901NanoCoopPlan")[i];
        if (WKEXP901NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP901NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine158());
      that.addLine(getLine162());
     that.highlightElement(WKEXP901NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP901NanoCoopPlan", "EngineeringProfession");
      WKEXP901NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine158());
      that.removeLine(getLine162());
     that.unHighlightElement(WKEXP901NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP901NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP901NanoCoopPlanelement, category);
}
      WKEXP901NanoCoopPlanflag=false
  }
};
$scope.ECE302NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE302NanoCoopPlanTime <= 200) { 
        ECE302NanoCoopPlanTime = currentTime;
        return;
    }
ECE302NanoCoopPlanTime = currentTime;
  var ECE302NanoCoopPlanelement = document.getElementById("ECE302NanoCoopPlan");
 if (!ECE302NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE302NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE302NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE302NanoCoopPlan")[i];
        if (ECE302NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE302NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine159());
      that.addLine(getLine168());
      that.addLine(getLine175());
      that.addLine(getLine176());
     that.highlightElement(ECE302NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE302NanoCoopPlan", "EngineeringSciences");
      ECE302NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine159());
      that.removeLine(getLine168());
      that.removeLine(getLine175());
      that.removeLine(getLine176());
     that.unHighlightElement(ECE302NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE302NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE302NanoCoopPlanelement, category);
}
      ECE302NanoCoopPlanflag=false
  }
};
$scope.ECE311NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE311NanoCoopPlanTime <= 200) { 
        ECE311NanoCoopPlanTime = currentTime;
        return;
    }
ECE311NanoCoopPlanTime = currentTime;
  var ECE311NanoCoopPlanelement = document.getElementById("ECE311NanoCoopPlan");
 if (!ECE311NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE311NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE311NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE311NanoCoopPlan")[i];
        if (ECE311NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE311NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine160());
     that.highlightElement(ECE311NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE311NanoCoopPlan", "EngineeringSciences");
      ECE311NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine160());
     that.unHighlightElement(ECE311NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE311NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE311NanoCoopPlanelement, category);
}
      ECE311NanoCoopPlanflag=false
  }
};
$scope.ECE325NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE325NanoCoopPlanTime <= 200) { 
        ECE325NanoCoopPlanTime = currentTime;
        return;
    }
ECE325NanoCoopPlanTime = currentTime;
  var ECE325NanoCoopPlanelement = document.getElementById("ECE325NanoCoopPlan");
 if (!ECE325NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE325NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE325NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE325NanoCoopPlan")[i];
        if (ECE325NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE325NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine161());
     that.highlightElement(ECE325NanoCoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE325NanoCoopPlan", "EngineeringDesign");
      ECE325NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine161());
     that.unHighlightElement(ECE325NanoCoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE325NanoCoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE325NanoCoopPlanelement, category);
}
      ECE325NanoCoopPlanflag=false
  }
};
$scope.ComplementaryElectiveNanoCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveNanoCoopPlan0Time <= 200) { 
        ComplementaryElectiveNanoCoopPlan0Time = currentTime;
        return;
    }
ComplementaryElectiveNanoCoopPlan0Time = currentTime;
  var ComplementaryElectiveNanoCoopPlan0element = document.getElementById("ComplementaryElectiveNanoCoopPlan0");
 if (!ComplementaryElectiveNanoCoopPlan0flag) {
     if (that.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan0").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan0")[i];
        if (ComplementaryElectiveNanoCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveNanoCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveNanoCoopPlan0element, "COMP");
     that.addToClicked("ComplementaryElectiveNanoCoopPlan0", "COMP");
      ComplementaryElectiveNanoCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveNanoCoopPlan0element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveNanoCoopPlan0", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveNanoCoopPlan0element, category);
}
      ComplementaryElectiveNanoCoopPlan0flag=false
  }
};
$scope.ComplementaryElectiveNanoCoopPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveNanoCoopPlan1Time <= 200) { 
        ComplementaryElectiveNanoCoopPlan1Time = currentTime;
        return;
    }
ComplementaryElectiveNanoCoopPlan1Time = currentTime;
  var ComplementaryElectiveNanoCoopPlan1element = document.getElementById("ComplementaryElectiveNanoCoopPlan1");
 if (!ComplementaryElectiveNanoCoopPlan1flag) {
     if (that.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan1").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ComplementaryElectiveNanoCoopPlan1")[i];
        if (ComplementaryElectiveNanoCoopPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveNanoCoopPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveNanoCoopPlan1element, "COMP");
     that.addToClicked("ComplementaryElectiveNanoCoopPlan1", "COMP");
      ComplementaryElectiveNanoCoopPlan1flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveNanoCoopPlan1element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveNanoCoopPlan1", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveNanoCoopPlan1element, category);
}
      ComplementaryElectiveNanoCoopPlan1flag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoCoopPlan0Time <= 200) { 
        ProgramTechnicalElectiveNanoCoopPlan0Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoCoopPlan0Time = currentTime;
  var ProgramTechnicalElectiveNanoCoopPlan0element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan0");
 if (!ProgramTechnicalElectiveNanoCoopPlan0flag) {
     if (that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan0").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan0")[i];
        if (ProgramTechnicalElectiveNanoCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan0element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoCoopPlan0", "PROG");
      ProgramTechnicalElectiveNanoCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan0element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan0", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan0element, category);
}
      ProgramTechnicalElectiveNanoCoopPlan0flag=false
  }
};
$scope.WKEXP902NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP902NanoCoopPlanTime <= 200) { 
        WKEXP902NanoCoopPlanTime = currentTime;
        return;
    }
WKEXP902NanoCoopPlanTime = currentTime;
  var WKEXP902NanoCoopPlanelement = document.getElementById("WKEXP902NanoCoopPlan");
 if (!WKEXP902NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("WKEXP902NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("WKEXP902NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("WKEXP902NanoCoopPlan")[i];
        if (WKEXP902NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP902NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine162());
      that.addLine(getLine163());
     that.highlightElement(WKEXP902NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP902NanoCoopPlan", "EngineeringProfession");
      WKEXP902NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine162());
      that.removeLine(getLine163());
     that.unHighlightElement(WKEXP902NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP902NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP902NanoCoopPlanelement, category);
}
      WKEXP902NanoCoopPlanflag=false
  }
};
$scope.WKEXP903NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP903NanoCoopPlanTime <= 200) { 
        WKEXP903NanoCoopPlanTime = currentTime;
        return;
    }
WKEXP903NanoCoopPlanTime = currentTime;
  var WKEXP903NanoCoopPlanelement = document.getElementById("WKEXP903NanoCoopPlan");
 if (!WKEXP903NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("WKEXP903NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("WKEXP903NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("WKEXP903NanoCoopPlan")[i];
        if (WKEXP903NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP903NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine163());
      that.addLine(getLine177());
     that.highlightElement(WKEXP903NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP903NanoCoopPlan", "EngineeringProfession");
      WKEXP903NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine163());
      that.removeLine(getLine177());
     that.unHighlightElement(WKEXP903NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP903NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP903NanoCoopPlanelement, category);
}
      WKEXP903NanoCoopPlanflag=false
  }
};
$scope.CMPUT291NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT291NanoCoopPlanTime <= 200) { 
        CMPUT291NanoCoopPlanTime = currentTime;
        return;
    }
CMPUT291NanoCoopPlanTime = currentTime;
  var CMPUT291NanoCoopPlanelement = document.getElementById("CMPUT291NanoCoopPlan");
 if (!CMPUT291NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CMPUT291NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CMPUT291NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CMPUT291NanoCoopPlan")[i];
        if (CMPUT291NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT291NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine164());
      that.addLine(getLine165());
      that.addLine(getLine166());
     that.highlightElement(CMPUT291NanoCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT291NanoCoopPlan", "ComputingScience");
      CMPUT291NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine164());
      that.removeLine(getLine165());
      that.removeLine(getLine166());
     that.unHighlightElement(CMPUT291NanoCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT291NanoCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT291NanoCoopPlanelement, category);
}
      CMPUT291NanoCoopPlanflag=false
  }
};
$scope.ECE304NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE304NanoCoopPlanTime <= 200) { 
        ECE304NanoCoopPlanTime = currentTime;
        return;
    }
ECE304NanoCoopPlanTime = currentTime;
  var ECE304NanoCoopPlanelement = document.getElementById("ECE304NanoCoopPlan");
 if (!ECE304NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE304NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE304NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE304NanoCoopPlan")[i];
        if (ECE304NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE304NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine167());
      that.addLine(getLine168());
      that.addLine(getLine170());
      that.addLine(getLine173());
     that.highlightElement(ECE304NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE304NanoCoopPlan", "EngineeringSciences");
      ECE304NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine167());
      that.removeLine(getLine168());
      that.removeLine(getLine170());
      that.removeLine(getLine173());
     that.unHighlightElement(ECE304NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE304NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE304NanoCoopPlanelement, category);
}
      ECE304NanoCoopPlanflag=false
  }
};
$scope.ECE342NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE342NanoCoopPlanTime <= 200) { 
        ECE342NanoCoopPlanTime = currentTime;
        return;
    }
ECE342NanoCoopPlanTime = currentTime;
  var ECE342NanoCoopPlanelement = document.getElementById("ECE342NanoCoopPlan");
 if (!ECE342NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE342NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE342NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE342NanoCoopPlan")[i];
        if (ECE342NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE342NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine169());
      that.addLine(getLine179());
     that.highlightElement(ECE342NanoCoopPlanelement, "Math");
     that.addToClicked("ECE342NanoCoopPlan", "Math");
      ECE342NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine169());
      that.removeLine(getLine179());
     that.unHighlightElement(ECE342NanoCoopPlanelement, "Math");
     var category = that.removeFromClicked("ECE342NanoCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(ECE342NanoCoopPlanelement, category);
}
      ECE342NanoCoopPlanflag=false
  }
};
$scope.ECE410NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE410NanoCoopPlanTime <= 200) { 
        ECE410NanoCoopPlanTime = currentTime;
        return;
    }
ECE410NanoCoopPlanTime = currentTime;
  var ECE410NanoCoopPlanelement = document.getElementById("ECE410NanoCoopPlan");
 if (!ECE410NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE410NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE410NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE410NanoCoopPlan")[i];
        if (ECE410NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE410NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine170());
      that.addLine(getLine174());
      that.addLine(getLine181());
     that.highlightElement(ECE410NanoCoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE410NanoCoopPlan", "EngineeringDesign");
      ECE410NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine170());
      that.removeLine(getLine174());
      that.removeLine(getLine181());
     that.unHighlightElement(ECE410NanoCoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE410NanoCoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE410NanoCoopPlanelement, category);
}
      ECE410NanoCoopPlanflag=false
  }
};
$scope.ENGG404NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG404NanoCoopPlanTime <= 200) { 
        ENGG404NanoCoopPlanTime = currentTime;
        return;
    }
ENGG404NanoCoopPlanTime = currentTime;
  var ENGG404NanoCoopPlanelement = document.getElementById("ENGG404NanoCoopPlan");
 if (!ENGG404NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGG404NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGG404NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGG404NanoCoopPlan")[i];
        if (ENGG404NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG404NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG404NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG404NanoCoopPlan", "EngineeringProfession");
      ENGG404NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG404NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG404NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG404NanoCoopPlanelement, category);
}
      ENGG404NanoCoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoCoopPlan1Time <= 200) { 
        ProgramTechnicalElectiveNanoCoopPlan1Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoCoopPlan1Time = currentTime;
  var ProgramTechnicalElectiveNanoCoopPlan1element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan1");
 if (!ProgramTechnicalElectiveNanoCoopPlan1flag) {
     if (that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan1").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan1")[i];
        if (ProgramTechnicalElectiveNanoCoopPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan1element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoCoopPlan1", "PROG");
      ProgramTechnicalElectiveNanoCoopPlan1flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan1element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan1", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan1element, category);
}
      ProgramTechnicalElectiveNanoCoopPlan1flag=false
  }
};
$scope.CMPUT301NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT301NanoCoopPlanTime <= 200) { 
        CMPUT301NanoCoopPlanTime = currentTime;
        return;
    }
CMPUT301NanoCoopPlanTime = currentTime;
  var CMPUT301NanoCoopPlanelement = document.getElementById("CMPUT301NanoCoopPlan");
 if (!CMPUT301NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("CMPUT301NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("CMPUT301NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("CMPUT301NanoCoopPlan")[i];
        if (CMPUT301NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT301NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine171());
     that.highlightElement(CMPUT301NanoCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT301NanoCoopPlan", "ComputingScience");
      CMPUT301NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine171());
     that.unHighlightElement(CMPUT301NanoCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT301NanoCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT301NanoCoopPlanelement, category);
}
      CMPUT301NanoCoopPlanflag=false
  }
};
$scope.ECE315NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE315NanoCoopPlanTime <= 200) { 
        ECE315NanoCoopPlanTime = currentTime;
        return;
    }
ECE315NanoCoopPlanTime = currentTime;
  var ECE315NanoCoopPlanelement = document.getElementById("ECE315NanoCoopPlan");
 if (!ECE315NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE315NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE315NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE315NanoCoopPlan")[i];
        if (ECE315NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE315NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine172());
      that.addLine(getLine180());
     that.highlightElement(ECE315NanoCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE315NanoCoopPlan", "EngineeringSciences");
      ECE315NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine172());
      that.removeLine(getLine180());
     that.unHighlightElement(ECE315NanoCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE315NanoCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE315NanoCoopPlanelement, category);
}
      ECE315NanoCoopPlanflag=false
  }
};
$scope.ECE403NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE403NanoCoopPlanTime <= 200) { 
        ECE403NanoCoopPlanTime = currentTime;
        return;
    }
ECE403NanoCoopPlanTime = currentTime;
  var ECE403NanoCoopPlanelement = document.getElementById("ECE403NanoCoopPlan");
 if (!ECE403NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE403NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE403NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE403NanoCoopPlan")[i];
        if (ECE403NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE403NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine173());
      that.addLine(getLine174());
     that.highlightElement(ECE403NanoCoopPlanelement, "course");
     that.addToClicked("ECE403NanoCoopPlan", "course");
      ECE403NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine173());
      that.removeLine(getLine174());
     that.unHighlightElement(ECE403NanoCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE403NanoCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE403NanoCoopPlanelement, category);
}
      ECE403NanoCoopPlanflag=false
  }
};
$scope.ECE450NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE450NanoCoopPlanTime <= 200) { 
        ECE450NanoCoopPlanTime = currentTime;
        return;
    }
ECE450NanoCoopPlanTime = currentTime;
  var ECE450NanoCoopPlanelement = document.getElementById("ECE450NanoCoopPlan");
 if (!ECE450NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE450NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE450NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE450NanoCoopPlan")[i];
        if (ECE450NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE450NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine175());
     that.highlightElement(ECE450NanoCoopPlanelement, "course");
     that.addToClicked("ECE450NanoCoopPlan", "course");
      ECE450NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine175());
     that.unHighlightElement(ECE450NanoCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE450NanoCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE450NanoCoopPlanelement, category);
}
      ECE450NanoCoopPlanflag=false
  }
};
$scope.ECE475NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE475NanoCoopPlanTime <= 200) { 
        ECE475NanoCoopPlanTime = currentTime;
        return;
    }
ECE475NanoCoopPlanTime = currentTime;
  var ECE475NanoCoopPlanelement = document.getElementById("ECE475NanoCoopPlan");
 if (!ECE475NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE475NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE475NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE475NanoCoopPlan")[i];
        if (ECE475NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE475NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine176());
     that.highlightElement(ECE475NanoCoopPlanelement, "course");
     that.addToClicked("ECE475NanoCoopPlan", "course");
      ECE475NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine176());
     that.unHighlightElement(ECE475NanoCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE475NanoCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE475NanoCoopPlanelement, category);
}
      ECE475NanoCoopPlanflag=false
  }
};
$scope.ENGM310NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM310NanoCoopPlanTime <= 200) { 
        ENGM310NanoCoopPlanTime = currentTime;
        return;
    }
ENGM310NanoCoopPlanTime = currentTime;
  var ENGM310NanoCoopPlanelement = document.getElementById("ENGM310NanoCoopPlan");
 if (!ENGM310NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGM310NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGM310NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGM310NanoCoopPlan")[i];
        if (ENGM310NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM310NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM310NanoCoopPlanelement, "Other");
     that.addToClicked("ENGM310NanoCoopPlan", "Other");
      ENGM310NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM310NanoCoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGM310NanoCoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM310NanoCoopPlanelement, category);
}
      ENGM310NanoCoopPlanflag=false
  }
};
$scope.ENGM401NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM401NanoCoopPlanTime <= 200) { 
        ENGM401NanoCoopPlanTime = currentTime;
        return;
    }
ENGM401NanoCoopPlanTime = currentTime;
  var ENGM401NanoCoopPlanelement = document.getElementById("ENGM401NanoCoopPlan");
 if (!ENGM401NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGM401NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGM401NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGM401NanoCoopPlan")[i];
        if (ENGM401NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM401NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM401NanoCoopPlanelement, "Other");
     that.addToClicked("ENGM401NanoCoopPlan", "Other");
      ENGM401NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM401NanoCoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGM401NanoCoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM401NanoCoopPlanelement, category);
}
      ENGM401NanoCoopPlanflag=false
  }
};
$scope.WKEXP904NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP904NanoCoopPlanTime <= 200) { 
        WKEXP904NanoCoopPlanTime = currentTime;
        return;
    }
WKEXP904NanoCoopPlanTime = currentTime;
  var WKEXP904NanoCoopPlanelement = document.getElementById("WKEXP904NanoCoopPlan");
 if (!WKEXP904NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("WKEXP904NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("WKEXP904NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("WKEXP904NanoCoopPlan")[i];
        if (WKEXP904NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP904NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine177());
      that.addLine(getLine178());
     that.highlightElement(WKEXP904NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP904NanoCoopPlan", "EngineeringProfession");
      WKEXP904NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine177());
      that.removeLine(getLine178());
     that.unHighlightElement(WKEXP904NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP904NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP904NanoCoopPlanelement, category);
}
      WKEXP904NanoCoopPlanflag=false
  }
};
$scope.WKEXP905NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP905NanoCoopPlanTime <= 200) { 
        WKEXP905NanoCoopPlanTime = currentTime;
        return;
    }
WKEXP905NanoCoopPlanTime = currentTime;
  var WKEXP905NanoCoopPlanelement = document.getElementById("WKEXP905NanoCoopPlan");
 if (!WKEXP905NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("WKEXP905NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("WKEXP905NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("WKEXP905NanoCoopPlan")[i];
        if (WKEXP905NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP905NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine178());
     that.highlightElement(WKEXP905NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP905NanoCoopPlan", "EngineeringProfession");
      WKEXP905NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine178());
     that.unHighlightElement(WKEXP905NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP905NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP905NanoCoopPlanelement, category);
}
      WKEXP905NanoCoopPlanflag=false
  }
};
$scope.ECE412NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE412NanoCoopPlanTime <= 200) { 
        ECE412NanoCoopPlanTime = currentTime;
        return;
    }
ECE412NanoCoopPlanTime = currentTime;
  var ECE412NanoCoopPlanelement = document.getElementById("ECE412NanoCoopPlan");
 if (!ECE412NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE412NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE412NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE412NanoCoopPlan")[i];
        if (ECE412NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE412NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine179());
     that.highlightElement(ECE412NanoCoopPlanelement, "course");
     that.addToClicked("ECE412NanoCoopPlan", "course");
      ECE412NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine179());
     that.unHighlightElement(ECE412NanoCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE412NanoCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE412NanoCoopPlanelement, category);
}
      ECE412NanoCoopPlanflag=false
  }
};
$scope.ECE457NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE457NanoCoopPlanTime <= 200) { 
        ECE457NanoCoopPlanTime = currentTime;
        return;
    }
ECE457NanoCoopPlanTime = currentTime;
  var ECE457NanoCoopPlanelement = document.getElementById("ECE457NanoCoopPlan");
 if (!ECE457NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE457NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE457NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE457NanoCoopPlan")[i];
        if (ECE457NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE457NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ECE457NanoCoopPlanelement, "course");
     that.addToClicked("ECE457NanoCoopPlan", "course");
      ECE457NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ECE457NanoCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE457NanoCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE457NanoCoopPlanelement, category);
}
      ECE457NanoCoopPlanflag=false
  }
};
$scope.ECE492NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE492NanoCoopPlanTime <= 200) { 
        ECE492NanoCoopPlanTime = currentTime;
        return;
    }
ECE492NanoCoopPlanTime = currentTime;
  var ECE492NanoCoopPlanelement = document.getElementById("ECE492NanoCoopPlan");
 if (!ECE492NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ECE492NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ECE492NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ECE492NanoCoopPlan")[i];
        if (ECE492NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE492NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine180());
      that.addLine(getLine181());
     that.highlightElement(ECE492NanoCoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE492NanoCoopPlan", "EngineeringDesign");
      ECE492NanoCoopPlanflag=true
  }
 else {
      that.removeLine(getLine180());
      that.removeLine(getLine181());
     that.unHighlightElement(ECE492NanoCoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE492NanoCoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE492NanoCoopPlanelement, category);
}
      ECE492NanoCoopPlanflag=false
  }
};
$scope.ENGG400NanoCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG400NanoCoopPlanTime <= 200) { 
        ENGG400NanoCoopPlanTime = currentTime;
        return;
    }
ENGG400NanoCoopPlanTime = currentTime;
  var ENGG400NanoCoopPlanelement = document.getElementById("ENGG400NanoCoopPlan");
 if (!ENGG400NanoCoopPlanflag) {
     if (that.NanoCoopPlanClickedMap.get("ENGG400NanoCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ENGG400NanoCoopPlan").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ENGG400NanoCoopPlan")[i];
        if (ENGG400NanoCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG400NanoCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG400NanoCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG400NanoCoopPlan", "EngineeringProfession");
      ENGG400NanoCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG400NanoCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG400NanoCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG400NanoCoopPlanelement, category);
}
      ENGG400NanoCoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan2Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoCoopPlan2Time <= 200) { 
        ProgramTechnicalElectiveNanoCoopPlan2Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoCoopPlan2Time = currentTime;
  var ProgramTechnicalElectiveNanoCoopPlan2element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan2");
 if (!ProgramTechnicalElectiveNanoCoopPlan2flag) {
     if (that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan2").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan2").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan2")[i];
        if (ProgramTechnicalElectiveNanoCoopPlan2element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan2element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan2element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoCoopPlan2", "PROG");
      ProgramTechnicalElectiveNanoCoopPlan2flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan2element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan2", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan2element, category);
}
      ProgramTechnicalElectiveNanoCoopPlan2flag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan3Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveNanoCoopPlan3Time <= 200) { 
        ProgramTechnicalElectiveNanoCoopPlan3Time = currentTime;
        return;
    }
ProgramTechnicalElectiveNanoCoopPlan3Time = currentTime;
  var ProgramTechnicalElectiveNanoCoopPlan3element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan3");
 if (!ProgramTechnicalElectiveNanoCoopPlan3flag) {
     if (that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan3").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan3").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ProgramTechnicalElectiveNanoCoopPlan3")[i];
        if (ProgramTechnicalElectiveNanoCoopPlan3element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan3element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan3element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveNanoCoopPlan3", "PROG");
      ProgramTechnicalElectiveNanoCoopPlan3flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveNanoCoopPlan3element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveNanoCoopPlan3", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveNanoCoopPlan3element, category);
}
      ProgramTechnicalElectiveNanoCoopPlan3flag=false
  }
};
$scope.ITSElectiveNanoCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ITSElectiveNanoCoopPlan0Time <= 200) { 
        ITSElectiveNanoCoopPlan0Time = currentTime;
        return;
    }
ITSElectiveNanoCoopPlan0Time = currentTime;
  var ITSElectiveNanoCoopPlan0element = document.getElementById("ITSElectiveNanoCoopPlan0");
 if (!ITSElectiveNanoCoopPlan0flag) {
     if (that.NanoCoopPlanClickedMap.get("ITSElectiveNanoCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.NanoCoopPlanClickedMap.get("ITSElectiveNanoCoopPlan0").length; i++) { 
        var cate = that.NanoCoopPlanClickedMap.get("ITSElectiveNanoCoopPlan0")[i];
        if (ITSElectiveNanoCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ITSElectiveNanoCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ITSElectiveNanoCoopPlan0element, "ITS");
     that.addToClicked("ITSElectiveNanoCoopPlan0", "ITS");
      ITSElectiveNanoCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ITSElectiveNanoCoopPlan0element, "ITS");
     var category = that.removeFromClicked("ITSElectiveNanoCoopPlan0", "ITS");
  if (category != "") { 
     that.highlightElement(ITSElectiveNanoCoopPlan0element, category);
}
      ITSElectiveNanoCoopPlan0flag=false
  }
};
$scope.CHEM103NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CHEM103NanoCoopPlandesc");
 if (!CHEM103NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM103NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM103NanoCoopPlanrflag=false
  }
};
$scope.ENGG100NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG100NanoCoopPlandesc");
 if (!ENGG100NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG100NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG100NanoCoopPlanrflag=false
  }
};
$scope.ENGG130NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG130NanoCoopPlandesc");
 if (!ENGG130NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG130NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG130NanoCoopPlanrflag=false
  }
};
$scope.ENGL199NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGL199NanoCoopPlandesc");
 if (!ENGL199NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGL199NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGL199NanoCoopPlanrflag=false
  }
};
$scope.MATH100NanoCoopPlanRCListener = function () {
  var element = document.getElementById("MATH100NanoCoopPlandesc");
 if (!MATH100NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH100NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH100NanoCoopPlanrflag=false
  }
};
$scope.PHYS130NanoCoopPlanRCListener = function () {
  var element = document.getElementById("PHYS130NanoCoopPlandesc");
 if (!PHYS130NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS130NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS130NanoCoopPlanrflag=false
  }
};
$scope.CHEM105NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CHEM105NanoCoopPlandesc");
 if (!CHEM105NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM105NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM105NanoCoopPlanrflag=false
  }
};
$scope.ENCMP100NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENCMP100NanoCoopPlandesc");
 if (!ENCMP100NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENCMP100NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENCMP100NanoCoopPlanrflag=false
  }
};
$scope.ENGG160NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG160NanoCoopPlandesc");
 if (!ENGG160NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG160NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG160NanoCoopPlanrflag=false
  }
};
$scope.ENPH131NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENPH131NanoCoopPlandesc");
 if (!ENPH131NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENPH131NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENPH131NanoCoopPlanrflag=false
  }
};
$scope.MATH101NanoCoopPlanRCListener = function () {
  var element = document.getElementById("MATH101NanoCoopPlandesc");
 if (!MATH101NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH101NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH101NanoCoopPlanrflag=false
  }
};
$scope.MATH102NanoCoopPlanRCListener = function () {
  var element = document.getElementById("MATH102NanoCoopPlandesc");
 if (!MATH102NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH102NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH102NanoCoopPlanrflag=false
  }
};
$scope.CMPUT274NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT274NanoCoopPlandesc");
 if (!CMPUT274NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT274NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT274NanoCoopPlanrflag=false
  }
};
$scope.ECE202NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE202NanoCoopPlandesc");
 if (!ECE202NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE202NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE202NanoCoopPlanrflag=false
  }
};
$scope.ECE210NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE210NanoCoopPlandesc");
 if (!ECE210NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE210NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE210NanoCoopPlanrflag=false
  }
};
$scope.ENGG299NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG299NanoCoopPlandesc");
 if (!ENGG299NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG299NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG299NanoCoopPlanrflag=false
  }
};
$scope.MATH201NanoCoopPlanRCListener = function () {
  var element = document.getElementById("MATH201NanoCoopPlandesc");
 if (!MATH201NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH201NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH201NanoCoopPlanrflag=false
  }
};
$scope.MATH209NanoCoopPlanRCListener = function () {
  var element = document.getElementById("MATH209NanoCoopPlandesc");
 if (!MATH209NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH209NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH209NanoCoopPlanrflag=false
  }
};
$scope.CMPUT272NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT272NanoCoopPlandesc");
 if (!CMPUT272NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT272NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT272NanoCoopPlanrflag=false
  }
};
$scope.CMPUT275NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT275NanoCoopPlandesc");
 if (!CMPUT275NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT275NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT275NanoCoopPlanrflag=false
  }
};
$scope.ECE203NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE203NanoCoopPlandesc");
 if (!ECE203NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE203NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE203NanoCoopPlanrflag=false
  }
};
$scope.ECE212NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE212NanoCoopPlandesc");
 if (!ECE212NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE212NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE212NanoCoopPlanrflag=false
  }
};
$scope.ECE240NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE240NanoCoopPlandesc");
 if (!ECE240NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE240NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE240NanoCoopPlanrflag=false
  }
};
$scope.PHYS230NanoCoopPlanRCListener = function () {
  var element = document.getElementById("PHYS230NanoCoopPlandesc");
 if (!PHYS230NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS230NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS230NanoCoopPlanrflag=false
  }
};
$scope.WKEXP901NanoCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP901NanoCoopPlandesc");
 if (!WKEXP901NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP901NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP901NanoCoopPlanrflag=false
  }
};
$scope.ECE302NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE302NanoCoopPlandesc");
 if (!ECE302NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE302NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE302NanoCoopPlanrflag=false
  }
};
$scope.ECE311NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE311NanoCoopPlandesc");
 if (!ECE311NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE311NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE311NanoCoopPlanrflag=false
  }
};
$scope.ECE325NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE325NanoCoopPlandesc");
 if (!ECE325NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE325NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE325NanoCoopPlanrflag=false
  }
};
$scope.ComplementaryElectiveNanoCoopPlan0RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveNanoCoopPlan0desc");
 if (!ComplementaryElectiveNanoCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveNanoCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveNanoCoopPlan0rflag=false
  }
};
$scope.ComplementaryElectiveNanoCoopPlan1RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveNanoCoopPlan1desc");
 if (!ComplementaryElectiveNanoCoopPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveNanoCoopPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveNanoCoopPlan1rflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan0RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan0desc");
 if (!ProgramTechnicalElectiveNanoCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoCoopPlan0rflag=false
  }
};
$scope.WKEXP902NanoCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP902NanoCoopPlandesc");
 if (!WKEXP902NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP902NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP902NanoCoopPlanrflag=false
  }
};
$scope.WKEXP903NanoCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP903NanoCoopPlandesc");
 if (!WKEXP903NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP903NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP903NanoCoopPlanrflag=false
  }
};
$scope.CMPUT291NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT291NanoCoopPlandesc");
 if (!CMPUT291NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT291NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT291NanoCoopPlanrflag=false
  }
};
$scope.ECE304NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE304NanoCoopPlandesc");
 if (!ECE304NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE304NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE304NanoCoopPlanrflag=false
  }
};
$scope.ECE342NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE342NanoCoopPlandesc");
 if (!ECE342NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE342NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE342NanoCoopPlanrflag=false
  }
};
$scope.ECE410NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE410NanoCoopPlandesc");
 if (!ECE410NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE410NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE410NanoCoopPlanrflag=false
  }
};
$scope.ENGG404NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG404NanoCoopPlandesc");
 if (!ENGG404NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG404NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG404NanoCoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan1RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan1desc");
 if (!ProgramTechnicalElectiveNanoCoopPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoCoopPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoCoopPlan1rflag=false
  }
};
$scope.CMPUT301NanoCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT301NanoCoopPlandesc");
 if (!CMPUT301NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT301NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT301NanoCoopPlanrflag=false
  }
};
$scope.ECE315NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE315NanoCoopPlandesc");
 if (!ECE315NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE315NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE315NanoCoopPlanrflag=false
  }
};
$scope.ECE403NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE403NanoCoopPlandesc");
 if (!ECE403NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE403NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE403NanoCoopPlanrflag=false
  }
};
$scope.ECE450NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE450NanoCoopPlandesc");
 if (!ECE450NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE450NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE450NanoCoopPlanrflag=false
  }
};
$scope.ECE475NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE475NanoCoopPlandesc");
 if (!ECE475NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE475NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE475NanoCoopPlanrflag=false
  }
};
$scope.ENGM310NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGM310NanoCoopPlandesc");
 if (!ENGM310NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM310NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM310NanoCoopPlanrflag=false
  }
};
$scope.ENGM401NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGM401NanoCoopPlandesc");
 if (!ENGM401NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM401NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM401NanoCoopPlanrflag=false
  }
};
$scope.WKEXP904NanoCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP904NanoCoopPlandesc");
 if (!WKEXP904NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP904NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP904NanoCoopPlanrflag=false
  }
};
$scope.WKEXP905NanoCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP905NanoCoopPlandesc");
 if (!WKEXP905NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP905NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP905NanoCoopPlanrflag=false
  }
};
$scope.ECE412NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE412NanoCoopPlandesc");
 if (!ECE412NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE412NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE412NanoCoopPlanrflag=false
  }
};
$scope.ECE457NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE457NanoCoopPlandesc");
 if (!ECE457NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE457NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE457NanoCoopPlanrflag=false
  }
};
$scope.ECE492NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ECE492NanoCoopPlandesc");
 if (!ECE492NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE492NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE492NanoCoopPlanrflag=false
  }
};
$scope.ENGG400NanoCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG400NanoCoopPlandesc");
 if (!ENGG400NanoCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG400NanoCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG400NanoCoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan2RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan2desc");
 if (!ProgramTechnicalElectiveNanoCoopPlan2rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoCoopPlan2rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoCoopPlan2rflag=false
  }
};
$scope.ProgramTechnicalElectiveNanoCoopPlan3RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveNanoCoopPlan3desc");
 if (!ProgramTechnicalElectiveNanoCoopPlan3rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveNanoCoopPlan3rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveNanoCoopPlan3rflag=false
  }
};
$scope.ITSElectiveNanoCoopPlan0RCListener = function () {
  var element = document.getElementById("ITSElectiveNanoCoopPlan0desc");
 if (!ITSElectiveNanoCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ITSElectiveNanoCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ITSElectiveNanoCoopPlan0rflag=false
  }
};
  var CHEM103SoftwareCoopPlanflag = false;
  var CHEM103SoftwareCoopPlanrflag = false;
 var CHEM103SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CHEM103SoftwareCoopPlan", []);
  var ENGG100SoftwareCoopPlanflag = false;
  var ENGG100SoftwareCoopPlanrflag = false;
 var ENGG100SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGG100SoftwareCoopPlan", []);
  var ENGG130SoftwareCoopPlanflag = false;
  var ENGG130SoftwareCoopPlanrflag = false;
 var ENGG130SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGG130SoftwareCoopPlan", []);
  var ENGL199SoftwareCoopPlanflag = false;
  var ENGL199SoftwareCoopPlanrflag = false;
 var ENGL199SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGL199SoftwareCoopPlan", []);
  var MATH100SoftwareCoopPlanflag = false;
  var MATH100SoftwareCoopPlanrflag = false;
 var MATH100SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("MATH100SoftwareCoopPlan", []);
  var PHYS130SoftwareCoopPlanflag = false;
  var PHYS130SoftwareCoopPlanrflag = false;
 var PHYS130SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("PHYS130SoftwareCoopPlan", []);
  var CHEM105SoftwareCoopPlanflag = false;
  var CHEM105SoftwareCoopPlanrflag = false;
 var CHEM105SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CHEM105SoftwareCoopPlan", []);
  var ENCMP100SoftwareCoopPlanflag = false;
  var ENCMP100SoftwareCoopPlanrflag = false;
 var ENCMP100SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENCMP100SoftwareCoopPlan", []);
  var ENGG160SoftwareCoopPlanflag = false;
  var ENGG160SoftwareCoopPlanrflag = false;
 var ENGG160SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGG160SoftwareCoopPlan", []);
  var ENPH131SoftwareCoopPlanflag = false;
  var ENPH131SoftwareCoopPlanrflag = false;
 var ENPH131SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENPH131SoftwareCoopPlan", []);
  var MATH101SoftwareCoopPlanflag = false;
  var MATH101SoftwareCoopPlanrflag = false;
 var MATH101SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("MATH101SoftwareCoopPlan", []);
  var MATH102SoftwareCoopPlanflag = false;
  var MATH102SoftwareCoopPlanrflag = false;
 var MATH102SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("MATH102SoftwareCoopPlan", []);
  var CMPUT274SoftwareCoopPlanflag = false;
  var CMPUT274SoftwareCoopPlanrflag = false;
 var CMPUT274SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CMPUT274SoftwareCoopPlan", []);
  var ECE202SoftwareCoopPlanflag = false;
  var ECE202SoftwareCoopPlanrflag = false;
 var ECE202SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE202SoftwareCoopPlan", []);
  var ECE210SoftwareCoopPlanflag = false;
  var ECE210SoftwareCoopPlanrflag = false;
 var ECE210SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE210SoftwareCoopPlan", []);
  var ENGG299SoftwareCoopPlanflag = false;
  var ENGG299SoftwareCoopPlanrflag = false;
 var ENGG299SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGG299SoftwareCoopPlan", []);
  var MATH201SoftwareCoopPlanflag = false;
  var MATH201SoftwareCoopPlanrflag = false;
 var MATH201SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("MATH201SoftwareCoopPlan", []);
  var MATH209SoftwareCoopPlanflag = false;
  var MATH209SoftwareCoopPlanrflag = false;
 var MATH209SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("MATH209SoftwareCoopPlan", []);
  var CMPUT272SoftwareCoopPlanflag = false;
  var CMPUT272SoftwareCoopPlanrflag = false;
 var CMPUT272SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CMPUT272SoftwareCoopPlan", []);
  var CMPUT275SoftwareCoopPlanflag = false;
  var CMPUT275SoftwareCoopPlanrflag = false;
 var CMPUT275SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CMPUT275SoftwareCoopPlan", []);
  var ECE212SoftwareCoopPlanflag = false;
  var ECE212SoftwareCoopPlanrflag = false;
 var ECE212SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE212SoftwareCoopPlan", []);
  var ECE240SoftwareCoopPlanflag = false;
  var ECE240SoftwareCoopPlanrflag = false;
 var ECE240SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE240SoftwareCoopPlan", []);
  var PHYS230SoftwareCoopPlanflag = false;
  var PHYS230SoftwareCoopPlanrflag = false;
 var PHYS230SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("PHYS230SoftwareCoopPlan", []);
  var ComplementaryElectiveSoftwareCoopPlan0flag = false;
  var ComplementaryElectiveSoftwareCoopPlan0rflag = false;
 var ComplementaryElectiveSoftwareCoopPlan0Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ComplementaryElectiveSoftwareCoopPlan0", []);
  var WKEXP901SoftwareCoopPlanflag = false;
  var WKEXP901SoftwareCoopPlanrflag = false;
 var WKEXP901SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("WKEXP901SoftwareCoopPlan", []);
  var ECE311SoftwareCoopPlanflag = false;
  var ECE311SoftwareCoopPlanrflag = false;
 var ECE311SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE311SoftwareCoopPlan", []);
  var ECE321SoftwareCoopPlanflag = false;
  var ECE321SoftwareCoopPlanrflag = false;
 var ECE321SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE321SoftwareCoopPlan", []);
  var ECE325SoftwareCoopPlanflag = false;
  var ECE325SoftwareCoopPlanrflag = false;
 var ECE325SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE325SoftwareCoopPlan", []);
  var STAT235SoftwareCoopPlanflag = false;
  var STAT235SoftwareCoopPlanrflag = false;
 var STAT235SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("STAT235SoftwareCoopPlan", []);
  var ProgramTechnicalElectiveSoftwareCoopPlan0flag = false;
  var ProgramTechnicalElectiveSoftwareCoopPlan0rflag = false;
 var ProgramTechnicalElectiveSoftwareCoopPlan0Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ProgramTechnicalElectiveSoftwareCoopPlan0", []);
  var ComplementaryElectiveSoftwareCoopPlan1flag = false;
  var ComplementaryElectiveSoftwareCoopPlan1rflag = false;
 var ComplementaryElectiveSoftwareCoopPlan1Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ComplementaryElectiveSoftwareCoopPlan1", []);
  var WKEXP902SoftwareCoopPlanflag = false;
  var WKEXP902SoftwareCoopPlanrflag = false;
 var WKEXP902SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("WKEXP902SoftwareCoopPlan", []);
  var WKEXP903SoftwareCoopPlanflag = false;
  var WKEXP903SoftwareCoopPlanrflag = false;
 var WKEXP903SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("WKEXP903SoftwareCoopPlan", []);
  var CMPUT291SoftwareCoopPlanflag = false;
  var CMPUT291SoftwareCoopPlanrflag = false;
 var CMPUT291SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CMPUT291SoftwareCoopPlan", []);
  var CMPUT301SoftwareCoopPlanflag = false;
  var CMPUT301SoftwareCoopPlanrflag = false;
 var CMPUT301SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CMPUT301SoftwareCoopPlan", []);
  var CMPUT379SoftwareCoopPlanflag = false;
  var CMPUT379SoftwareCoopPlanrflag = false;
 var CMPUT379SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("CMPUT379SoftwareCoopPlan", []);
  var ECE322SoftwareCoopPlanflag = false;
  var ECE322SoftwareCoopPlanrflag = false;
 var ECE322SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE322SoftwareCoopPlan", []);
  var ProgramTechnicalElectiveSoftwareCoopPlan1flag = false;
  var ProgramTechnicalElectiveSoftwareCoopPlan1rflag = false;
 var ProgramTechnicalElectiveSoftwareCoopPlan1Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ProgramTechnicalElectiveSoftwareCoopPlan1", []);
  var ProgramTechnicalElectiveSoftwareCoopPlan2flag = false;
  var ProgramTechnicalElectiveSoftwareCoopPlan2rflag = false;
 var ProgramTechnicalElectiveSoftwareCoopPlan2Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ProgramTechnicalElectiveSoftwareCoopPlan2", []);
  var ECE315SoftwareCoopPlanflag = false;
  var ECE315SoftwareCoopPlanrflag = false;
 var ECE315SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE315SoftwareCoopPlan", []);
  var ECE421SoftwareCoopPlanflag = false;
  var ECE421SoftwareCoopPlanrflag = false;
 var ECE421SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE421SoftwareCoopPlan", []);
  var ECE487SoftwareCoopPlanflag = false;
  var ECE487SoftwareCoopPlanrflag = false;
 var ECE487SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE487SoftwareCoopPlan", []);
  var ENGG404SoftwareCoopPlanflag = false;
  var ENGG404SoftwareCoopPlanrflag = false;
 var ENGG404SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGG404SoftwareCoopPlan", []);
  var ProgramTechnicalElectiveSoftwareCoopPlan3flag = false;
  var ProgramTechnicalElectiveSoftwareCoopPlan3rflag = false;
 var ProgramTechnicalElectiveSoftwareCoopPlan3Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ProgramTechnicalElectiveSoftwareCoopPlan3", []);
  var ITSElectiveSoftwareCoopPlan0flag = false;
  var ITSElectiveSoftwareCoopPlan0rflag = false;
 var ITSElectiveSoftwareCoopPlan0Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ITSElectiveSoftwareCoopPlan0", []);
  var WKEXP904SoftwareCoopPlanflag = false;
  var WKEXP904SoftwareCoopPlanrflag = false;
 var WKEXP904SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("WKEXP904SoftwareCoopPlan", []);
  var WKEXP905SoftwareCoopPlanflag = false;
  var WKEXP905SoftwareCoopPlanrflag = false;
 var WKEXP905SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("WKEXP905SoftwareCoopPlan", []);
  var ECE420SoftwareCoopPlanflag = false;
  var ECE420SoftwareCoopPlanrflag = false;
 var ECE420SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE420SoftwareCoopPlan", []);
  var ECE422SoftwareCoopPlanflag = false;
  var ECE422SoftwareCoopPlanrflag = false;
 var ECE422SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE422SoftwareCoopPlan", []);
  var ECE493SoftwareCoopPlanflag = false;
  var ECE493SoftwareCoopPlanrflag = false;
 var ECE493SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ECE493SoftwareCoopPlan", []);
  var ENGM310SoftwareCoopPlanflag = false;
  var ENGM310SoftwareCoopPlanrflag = false;
 var ENGM310SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGM310SoftwareCoopPlan", []);
  var ENGM401SoftwareCoopPlanflag = false;
  var ENGM401SoftwareCoopPlanrflag = false;
 var ENGM401SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGM401SoftwareCoopPlan", []);
  var ENGG400SoftwareCoopPlanflag = false;
  var ENGG400SoftwareCoopPlanrflag = false;
 var ENGG400SoftwareCoopPlanTime = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ENGG400SoftwareCoopPlan", []);
  var ProgramTechnicalElectiveSoftwareCoopPlan4flag = false;
  var ProgramTechnicalElectiveSoftwareCoopPlan4rflag = false;
 var ProgramTechnicalElectiveSoftwareCoopPlan4Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ProgramTechnicalElectiveSoftwareCoopPlan4", []);
  var ProgramTechnicalElectiveSoftwareCoopPlan5flag = false;
  var ProgramTechnicalElectiveSoftwareCoopPlan5rflag = false;
 var ProgramTechnicalElectiveSoftwareCoopPlan5Time = new Date().getTime();
this.SoftwareCoopPlanClickedMap.set("ProgramTechnicalElectiveSoftwareCoopPlan5", []);
$scope.CHEM103SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM103SoftwareCoopPlanTime <= 200) { 
        CHEM103SoftwareCoopPlanTime = currentTime;
        return;
    }
CHEM103SoftwareCoopPlanTime = currentTime;
  var CHEM103SoftwareCoopPlanelement = document.getElementById("CHEM103SoftwareCoopPlan");
 if (!CHEM103SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CHEM103SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CHEM103SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CHEM103SoftwareCoopPlan")[i];
        if (CHEM103SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM103SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine184());
     that.highlightElement(CHEM103SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("CHEM103SoftwareCoopPlan", "NaturalSciences");
      CHEM103SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine184());
     that.unHighlightElement(CHEM103SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM103SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM103SoftwareCoopPlanelement, category);
}
      CHEM103SoftwareCoopPlanflag=false
  }
};
$scope.ENGG100SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG100SoftwareCoopPlanTime <= 200) { 
        ENGG100SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGG100SoftwareCoopPlanTime = currentTime;
  var ENGG100SoftwareCoopPlanelement = document.getElementById("ENGG100SoftwareCoopPlan");
 if (!ENGG100SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGG100SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGG100SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGG100SoftwareCoopPlan")[i];
        if (ENGG100SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG100SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG100SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG100SoftwareCoopPlan", "EngineeringProfession");
      ENGG100SoftwareCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG100SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG100SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG100SoftwareCoopPlanelement, category);
}
      ENGG100SoftwareCoopPlanflag=false
  }
};
$scope.ENGG130SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG130SoftwareCoopPlanTime <= 200) { 
        ENGG130SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGG130SoftwareCoopPlanTime = currentTime;
  var ENGG130SoftwareCoopPlanelement = document.getElementById("ENGG130SoftwareCoopPlan");
 if (!ENGG130SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGG130SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGG130SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGG130SoftwareCoopPlan")[i];
        if (ENGG130SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG130SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine182());
      that.addLine(getLine187());
     that.highlightElement(ENGG130SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("ENGG130SoftwareCoopPlan", "NaturalSciences");
      ENGG130SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine182());
      that.removeLine(getLine187());
     that.unHighlightElement(ENGG130SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENGG130SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENGG130SoftwareCoopPlanelement, category);
}
      ENGG130SoftwareCoopPlanflag=false
  }
};
$scope.ENGL199SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGL199SoftwareCoopPlanTime <= 200) { 
        ENGL199SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGL199SoftwareCoopPlanTime = currentTime;
  var ENGL199SoftwareCoopPlanelement = document.getElementById("ENGL199SoftwareCoopPlan");
 if (!ENGL199SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGL199SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGL199SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGL199SoftwareCoopPlan")[i];
        if (ENGL199SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGL199SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine185());
     that.highlightElement(ENGL199SoftwareCoopPlanelement, "Other");
     that.addToClicked("ENGL199SoftwareCoopPlan", "Other");
      ENGL199SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine185());
     that.unHighlightElement(ENGL199SoftwareCoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGL199SoftwareCoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGL199SoftwareCoopPlanelement, category);
}
      ENGL199SoftwareCoopPlanflag=false
  }
};
$scope.MATH100SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH100SoftwareCoopPlanTime <= 200) { 
        MATH100SoftwareCoopPlanTime = currentTime;
        return;
    }
MATH100SoftwareCoopPlanTime = currentTime;
  var MATH100SoftwareCoopPlanelement = document.getElementById("MATH100SoftwareCoopPlan");
 if (!MATH100SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("MATH100SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("MATH100SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("MATH100SoftwareCoopPlan")[i];
        if (MATH100SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH100SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine182());
      that.addLine(getLine183());
      that.addLine(getLine186());
      that.addLine(getLine189());
      that.addLine(getLine190());
      that.addLine(getLine202());
      that.addLine(getLine208());
     that.highlightElement(MATH100SoftwareCoopPlanelement, "Math");
     that.addToClicked("MATH100SoftwareCoopPlan", "Math");
      MATH100SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine182());
      that.removeLine(getLine183());
      that.removeLine(getLine186());
      that.removeLine(getLine189());
      that.removeLine(getLine190());
      that.removeLine(getLine202());
      that.removeLine(getLine208());
     that.unHighlightElement(MATH100SoftwareCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH100SoftwareCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH100SoftwareCoopPlanelement, category);
}
      MATH100SoftwareCoopPlanflag=false
  }
};
$scope.PHYS130SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS130SoftwareCoopPlanTime <= 200) { 
        PHYS130SoftwareCoopPlanTime = currentTime;
        return;
    }
PHYS130SoftwareCoopPlanTime = currentTime;
  var PHYS130SoftwareCoopPlanelement = document.getElementById("PHYS130SoftwareCoopPlan");
 if (!PHYS130SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("PHYS130SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("PHYS130SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("PHYS130SoftwareCoopPlan")[i];
        if (PHYS130SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS130SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine183());
      that.addLine(getLine201());
     that.highlightElement(PHYS130SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("PHYS130SoftwareCoopPlan", "NaturalSciences");
      PHYS130SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine183());
      that.removeLine(getLine201());
     that.unHighlightElement(PHYS130SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS130SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS130SoftwareCoopPlanelement, category);
}
      PHYS130SoftwareCoopPlanflag=false
  }
};
$scope.CHEM105SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CHEM105SoftwareCoopPlanTime <= 200) { 
        CHEM105SoftwareCoopPlanTime = currentTime;
        return;
    }
CHEM105SoftwareCoopPlanTime = currentTime;
  var CHEM105SoftwareCoopPlanelement = document.getElementById("CHEM105SoftwareCoopPlan");
 if (!CHEM105SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CHEM105SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CHEM105SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CHEM105SoftwareCoopPlan")[i];
        if (CHEM105SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CHEM105SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine184());
     that.highlightElement(CHEM105SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("CHEM105SoftwareCoopPlan", "NaturalSciences");
      CHEM105SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine184());
     that.unHighlightElement(CHEM105SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("CHEM105SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(CHEM105SoftwareCoopPlanelement, category);
}
      CHEM105SoftwareCoopPlanflag=false
  }
};
$scope.ENCMP100SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENCMP100SoftwareCoopPlanTime <= 200) { 
        ENCMP100SoftwareCoopPlanTime = currentTime;
        return;
    }
ENCMP100SoftwareCoopPlanTime = currentTime;
  var ENCMP100SoftwareCoopPlanelement = document.getElementById("ENCMP100SoftwareCoopPlan");
 if (!ENCMP100SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENCMP100SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENCMP100SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENCMP100SoftwareCoopPlan")[i];
        if (ENCMP100SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENCMP100SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENCMP100SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("ENCMP100SoftwareCoopPlan", "NaturalSciences");
      ENCMP100SoftwareCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENCMP100SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENCMP100SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENCMP100SoftwareCoopPlanelement, category);
}
      ENCMP100SoftwareCoopPlanflag=false
  }
};
$scope.ENGG160SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG160SoftwareCoopPlanTime <= 200) { 
        ENGG160SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGG160SoftwareCoopPlanTime = currentTime;
  var ENGG160SoftwareCoopPlanelement = document.getElementById("ENGG160SoftwareCoopPlan");
 if (!ENGG160SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGG160SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGG160SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGG160SoftwareCoopPlan")[i];
        if (ENGG160SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG160SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine185());
     that.highlightElement(ENGG160SoftwareCoopPlanelement, "EngineeringDesign");
     that.addToClicked("ENGG160SoftwareCoopPlan", "EngineeringDesign");
      ENGG160SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine185());
     that.unHighlightElement(ENGG160SoftwareCoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ENGG160SoftwareCoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ENGG160SoftwareCoopPlanelement, category);
}
      ENGG160SoftwareCoopPlanflag=false
  }
};
$scope.ENPH131SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENPH131SoftwareCoopPlanTime <= 200) { 
        ENPH131SoftwareCoopPlanTime = currentTime;
        return;
    }
ENPH131SoftwareCoopPlanTime = currentTime;
  var ENPH131SoftwareCoopPlanelement = document.getElementById("ENPH131SoftwareCoopPlan");
 if (!ENPH131SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENPH131SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENPH131SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENPH131SoftwareCoopPlan")[i];
        if (ENPH131SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENPH131SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine186());
      that.addLine(getLine187());
      that.addLine(getLine188());
     that.highlightElement(ENPH131SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("ENPH131SoftwareCoopPlan", "NaturalSciences");
      ENPH131SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine186());
      that.removeLine(getLine187());
      that.removeLine(getLine188());
     that.unHighlightElement(ENPH131SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("ENPH131SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(ENPH131SoftwareCoopPlanelement, category);
}
      ENPH131SoftwareCoopPlanflag=false
  }
};
$scope.MATH101SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH101SoftwareCoopPlanTime <= 200) { 
        MATH101SoftwareCoopPlanTime = currentTime;
        return;
    }
MATH101SoftwareCoopPlanTime = currentTime;
  var MATH101SoftwareCoopPlanelement = document.getElementById("MATH101SoftwareCoopPlan");
 if (!MATH101SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("MATH101SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("MATH101SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("MATH101SoftwareCoopPlan")[i];
        if (MATH101SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH101SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine188());
      that.addLine(getLine189());
      that.addLine(getLine191());
      that.addLine(getLine194());
      that.addLine(getLine203());
      that.addLine(getLine209());
     that.highlightElement(MATH101SoftwareCoopPlanelement, "Math");
     that.addToClicked("MATH101SoftwareCoopPlan", "Math");
      MATH101SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine188());
      that.removeLine(getLine189());
      that.removeLine(getLine191());
      that.removeLine(getLine194());
      that.removeLine(getLine203());
      that.removeLine(getLine209());
     that.unHighlightElement(MATH101SoftwareCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH101SoftwareCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH101SoftwareCoopPlanelement, category);
}
      MATH101SoftwareCoopPlanflag=false
  }
};
$scope.MATH102SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH102SoftwareCoopPlanTime <= 200) { 
        MATH102SoftwareCoopPlanTime = currentTime;
        return;
    }
MATH102SoftwareCoopPlanTime = currentTime;
  var MATH102SoftwareCoopPlanelement = document.getElementById("MATH102SoftwareCoopPlan");
 if (!MATH102SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("MATH102SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("MATH102SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("MATH102SoftwareCoopPlan")[i];
        if (MATH102SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH102SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine190());
      that.addLine(getLine192());
      that.addLine(getLine195());
     that.highlightElement(MATH102SoftwareCoopPlanelement, "Math");
     that.addToClicked("MATH102SoftwareCoopPlan", "Math");
      MATH102SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine190());
      that.removeLine(getLine192());
      that.removeLine(getLine195());
     that.unHighlightElement(MATH102SoftwareCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH102SoftwareCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH102SoftwareCoopPlanelement, category);
}
      MATH102SoftwareCoopPlanflag=false
  }
};
$scope.CMPUT274SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT274SoftwareCoopPlanTime <= 200) { 
        CMPUT274SoftwareCoopPlanTime = currentTime;
        return;
    }
CMPUT274SoftwareCoopPlanTime = currentTime;
  var CMPUT274SoftwareCoopPlanelement = document.getElementById("CMPUT274SoftwareCoopPlan");
 if (!CMPUT274SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CMPUT274SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CMPUT274SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CMPUT274SoftwareCoopPlan")[i];
        if (CMPUT274SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT274SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine196());
      that.addLine(getLine197());
      that.addLine(getLine212());
     that.highlightElement(CMPUT274SoftwareCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT274SoftwareCoopPlan", "ComputingScience");
      CMPUT274SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine196());
      that.removeLine(getLine197());
      that.removeLine(getLine212());
     that.unHighlightElement(CMPUT274SoftwareCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT274SoftwareCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT274SoftwareCoopPlanelement, category);
}
      CMPUT274SoftwareCoopPlanflag=false
  }
};
$scope.ECE202SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE202SoftwareCoopPlanTime <= 200) { 
        ECE202SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE202SoftwareCoopPlanTime = currentTime;
  var ECE202SoftwareCoopPlanelement = document.getElementById("ECE202SoftwareCoopPlan");
 if (!ECE202SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE202SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE202SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE202SoftwareCoopPlan")[i];
        if (ECE202SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE202SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine191());
      that.addLine(getLine192());
      that.addLine(getLine199());
     that.highlightElement(ECE202SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE202SoftwareCoopPlan", "EngineeringSciences");
      ECE202SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine191());
      that.removeLine(getLine192());
      that.removeLine(getLine199());
     that.unHighlightElement(ECE202SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE202SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE202SoftwareCoopPlanelement, category);
}
      ECE202SoftwareCoopPlanflag=false
  }
};
$scope.ECE210SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE210SoftwareCoopPlanTime <= 200) { 
        ECE210SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE210SoftwareCoopPlanTime = currentTime;
  var ECE210SoftwareCoopPlanelement = document.getElementById("ECE210SoftwareCoopPlan");
 if (!ECE210SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE210SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE210SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE210SoftwareCoopPlan")[i];
        if (ECE210SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE210SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine198());
     that.highlightElement(ECE210SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE210SoftwareCoopPlan", "EngineeringSciences");
      ECE210SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine198());
     that.unHighlightElement(ECE210SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE210SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE210SoftwareCoopPlanelement, category);
}
      ECE210SoftwareCoopPlanflag=false
  }
};
$scope.ENGG299SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG299SoftwareCoopPlanTime <= 200) { 
        ENGG299SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGG299SoftwareCoopPlanTime = currentTime;
  var ENGG299SoftwareCoopPlanelement = document.getElementById("ENGG299SoftwareCoopPlan");
 if (!ENGG299SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGG299SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGG299SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGG299SoftwareCoopPlan")[i];
        if (ENGG299SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG299SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine204());
     that.highlightElement(ENGG299SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG299SoftwareCoopPlan", "EngineeringProfession");
      ENGG299SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine204());
     that.unHighlightElement(ENGG299SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG299SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG299SoftwareCoopPlanelement, category);
}
      ENGG299SoftwareCoopPlanflag=false
  }
};
$scope.MATH201SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH201SoftwareCoopPlanTime <= 200) { 
        MATH201SoftwareCoopPlanTime = currentTime;
        return;
    }
MATH201SoftwareCoopPlanTime = currentTime;
  var MATH201SoftwareCoopPlanelement = document.getElementById("MATH201SoftwareCoopPlan");
 if (!MATH201SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("MATH201SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("MATH201SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("MATH201SoftwareCoopPlan")[i];
        if (MATH201SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH201SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine193());
      that.addLine(getLine200());
     that.highlightElement(MATH201SoftwareCoopPlanelement, "Math");
     that.addToClicked("MATH201SoftwareCoopPlan", "Math");
      MATH201SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine193());
      that.removeLine(getLine200());
     that.unHighlightElement(MATH201SoftwareCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH201SoftwareCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH201SoftwareCoopPlanelement, category);
}
      MATH201SoftwareCoopPlanflag=false
  }
};
$scope.MATH209SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - MATH209SoftwareCoopPlanTime <= 200) { 
        MATH209SoftwareCoopPlanTime = currentTime;
        return;
    }
MATH209SoftwareCoopPlanTime = currentTime;
  var MATH209SoftwareCoopPlanelement = document.getElementById("MATH209SoftwareCoopPlan");
 if (!MATH209SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("MATH209SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("MATH209SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("MATH209SoftwareCoopPlan")[i];
        if (MATH209SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(MATH209SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine193());
      that.addLine(getLine194());
      that.addLine(getLine195());
     that.highlightElement(MATH209SoftwareCoopPlanelement, "Math");
     that.addToClicked("MATH209SoftwareCoopPlan", "Math");
      MATH209SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine193());
      that.removeLine(getLine194());
      that.removeLine(getLine195());
     that.unHighlightElement(MATH209SoftwareCoopPlanelement, "Math");
     var category = that.removeFromClicked("MATH209SoftwareCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(MATH209SoftwareCoopPlanelement, category);
}
      MATH209SoftwareCoopPlanflag=false
  }
};
$scope.CMPUT272SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT272SoftwareCoopPlanTime <= 200) { 
        CMPUT272SoftwareCoopPlanTime = currentTime;
        return;
    }
CMPUT272SoftwareCoopPlanTime = currentTime;
  var CMPUT272SoftwareCoopPlanelement = document.getElementById("CMPUT272SoftwareCoopPlan");
 if (!CMPUT272SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CMPUT272SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CMPUT272SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CMPUT272SoftwareCoopPlan")[i];
        if (CMPUT272SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT272SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine196());
      that.addLine(getLine213());
     that.highlightElement(CMPUT272SoftwareCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT272SoftwareCoopPlan", "ComputingScience");
      CMPUT272SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine196());
      that.removeLine(getLine213());
     that.unHighlightElement(CMPUT272SoftwareCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT272SoftwareCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT272SoftwareCoopPlanelement, category);
}
      CMPUT272SoftwareCoopPlanflag=false
  }
};
$scope.CMPUT275SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT275SoftwareCoopPlanTime <= 200) { 
        CMPUT275SoftwareCoopPlanTime = currentTime;
        return;
    }
CMPUT275SoftwareCoopPlanTime = currentTime;
  var CMPUT275SoftwareCoopPlanelement = document.getElementById("CMPUT275SoftwareCoopPlan");
 if (!CMPUT275SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CMPUT275SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CMPUT275SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CMPUT275SoftwareCoopPlan")[i];
        if (CMPUT275SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT275SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine197());
      that.addLine(getLine206());
      that.addLine(getLine207());
      that.addLine(getLine214());
      that.addLine(getLine215());
      that.addLine(getLine216());
      that.addLine(getLine218());
      that.addLine(getLine226());
     that.highlightElement(CMPUT275SoftwareCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT275SoftwareCoopPlan", "ComputingScience");
      CMPUT275SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine197());
      that.removeLine(getLine206());
      that.removeLine(getLine207());
      that.removeLine(getLine214());
      that.removeLine(getLine215());
      that.removeLine(getLine216());
      that.removeLine(getLine218());
      that.removeLine(getLine226());
     that.unHighlightElement(CMPUT275SoftwareCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT275SoftwareCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT275SoftwareCoopPlanelement, category);
}
      CMPUT275SoftwareCoopPlanflag=false
  }
};
$scope.ECE212SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE212SoftwareCoopPlanTime <= 200) { 
        ECE212SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE212SoftwareCoopPlanTime = currentTime;
  var ECE212SoftwareCoopPlanelement = document.getElementById("ECE212SoftwareCoopPlan");
 if (!ECE212SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE212SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE212SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE212SoftwareCoopPlan")[i];
        if (ECE212SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE212SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine198());
      that.addLine(getLine205());
      that.addLine(getLine217());
      that.addLine(getLine219());
     that.highlightElement(ECE212SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE212SoftwareCoopPlan", "EngineeringSciences");
      ECE212SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine198());
      that.removeLine(getLine205());
      that.removeLine(getLine217());
      that.removeLine(getLine219());
     that.unHighlightElement(ECE212SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE212SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE212SoftwareCoopPlanelement, category);
}
      ECE212SoftwareCoopPlanflag=false
  }
};
$scope.ECE240SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE240SoftwareCoopPlanTime <= 200) { 
        ECE240SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE240SoftwareCoopPlanTime = currentTime;
  var ECE240SoftwareCoopPlanelement = document.getElementById("ECE240SoftwareCoopPlan");
 if (!ECE240SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE240SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE240SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE240SoftwareCoopPlan")[i];
        if (ECE240SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE240SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine199());
      that.addLine(getLine200());
     that.highlightElement(ECE240SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE240SoftwareCoopPlan", "EngineeringSciences");
      ECE240SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine199());
      that.removeLine(getLine200());
     that.unHighlightElement(ECE240SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE240SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE240SoftwareCoopPlanelement, category);
}
      ECE240SoftwareCoopPlanflag=false
  }
};
$scope.PHYS230SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - PHYS230SoftwareCoopPlanTime <= 200) { 
        PHYS230SoftwareCoopPlanTime = currentTime;
        return;
    }
PHYS230SoftwareCoopPlanTime = currentTime;
  var PHYS230SoftwareCoopPlanelement = document.getElementById("PHYS230SoftwareCoopPlan");
 if (!PHYS230SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("PHYS230SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("PHYS230SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("PHYS230SoftwareCoopPlan")[i];
        if (PHYS230SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(PHYS230SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine201());
      that.addLine(getLine202());
      that.addLine(getLine203());
     that.highlightElement(PHYS230SoftwareCoopPlanelement, "NaturalSciences");
     that.addToClicked("PHYS230SoftwareCoopPlan", "NaturalSciences");
      PHYS230SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine201());
      that.removeLine(getLine202());
      that.removeLine(getLine203());
     that.unHighlightElement(PHYS230SoftwareCoopPlanelement, "NaturalSciences");
     var category = that.removeFromClicked("PHYS230SoftwareCoopPlan", "NaturalSciences");
  if (category != "") { 
     that.highlightElement(PHYS230SoftwareCoopPlanelement, category);
}
      PHYS230SoftwareCoopPlanflag=false
  }
};
$scope.ComplementaryElectiveSoftwareCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveSoftwareCoopPlan0Time <= 200) { 
        ComplementaryElectiveSoftwareCoopPlan0Time = currentTime;
        return;
    }
ComplementaryElectiveSoftwareCoopPlan0Time = currentTime;
  var ComplementaryElectiveSoftwareCoopPlan0element = document.getElementById("ComplementaryElectiveSoftwareCoopPlan0");
 if (!ComplementaryElectiveSoftwareCoopPlan0flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan0").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan0")[i];
        if (ComplementaryElectiveSoftwareCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveSoftwareCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveSoftwareCoopPlan0element, "COMP");
     that.addToClicked("ComplementaryElectiveSoftwareCoopPlan0", "COMP");
      ComplementaryElectiveSoftwareCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveSoftwareCoopPlan0element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveSoftwareCoopPlan0", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveSoftwareCoopPlan0element, category);
}
      ComplementaryElectiveSoftwareCoopPlan0flag=false
  }
};
$scope.WKEXP901SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP901SoftwareCoopPlanTime <= 200) { 
        WKEXP901SoftwareCoopPlanTime = currentTime;
        return;
    }
WKEXP901SoftwareCoopPlanTime = currentTime;
  var WKEXP901SoftwareCoopPlanelement = document.getElementById("WKEXP901SoftwareCoopPlan");
 if (!WKEXP901SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("WKEXP901SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("WKEXP901SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("WKEXP901SoftwareCoopPlan")[i];
        if (WKEXP901SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP901SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine204());
      that.addLine(getLine210());
     that.highlightElement(WKEXP901SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP901SoftwareCoopPlan", "EngineeringProfession");
      WKEXP901SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine204());
      that.removeLine(getLine210());
     that.unHighlightElement(WKEXP901SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP901SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP901SoftwareCoopPlanelement, category);
}
      WKEXP901SoftwareCoopPlanflag=false
  }
};
$scope.ECE311SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE311SoftwareCoopPlanTime <= 200) { 
        ECE311SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE311SoftwareCoopPlanTime = currentTime;
  var ECE311SoftwareCoopPlanelement = document.getElementById("ECE311SoftwareCoopPlan");
 if (!ECE311SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE311SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE311SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE311SoftwareCoopPlan")[i];
        if (ECE311SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE311SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine205());
     that.highlightElement(ECE311SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE311SoftwareCoopPlan", "EngineeringSciences");
      ECE311SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine205());
     that.unHighlightElement(ECE311SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE311SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE311SoftwareCoopPlanelement, category);
}
      ECE311SoftwareCoopPlanflag=false
  }
};
$scope.ECE321SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE321SoftwareCoopPlanTime <= 200) { 
        ECE321SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE321SoftwareCoopPlanTime = currentTime;
  var ECE321SoftwareCoopPlanelement = document.getElementById("ECE321SoftwareCoopPlan");
 if (!ECE321SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE321SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE321SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE321SoftwareCoopPlan")[i];
        if (ECE321SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE321SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine206());
     that.highlightElement(ECE321SoftwareCoopPlanelement, "course");
     that.addToClicked("ECE321SoftwareCoopPlan", "course");
      ECE321SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine206());
     that.unHighlightElement(ECE321SoftwareCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE321SoftwareCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE321SoftwareCoopPlanelement, category);
}
      ECE321SoftwareCoopPlanflag=false
  }
};
$scope.ECE325SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE325SoftwareCoopPlanTime <= 200) { 
        ECE325SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE325SoftwareCoopPlanTime = currentTime;
  var ECE325SoftwareCoopPlanelement = document.getElementById("ECE325SoftwareCoopPlan");
 if (!ECE325SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE325SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE325SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE325SoftwareCoopPlan")[i];
        if (ECE325SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE325SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine207());
      that.addLine(getLine221());
     that.highlightElement(ECE325SoftwareCoopPlanelement, "EngineeringDesign");
     that.addToClicked("ECE325SoftwareCoopPlan", "EngineeringDesign");
      ECE325SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine207());
      that.removeLine(getLine221());
     that.unHighlightElement(ECE325SoftwareCoopPlanelement, "EngineeringDesign");
     var category = that.removeFromClicked("ECE325SoftwareCoopPlan", "EngineeringDesign");
  if (category != "") { 
     that.highlightElement(ECE325SoftwareCoopPlanelement, category);
}
      ECE325SoftwareCoopPlanflag=false
  }
};
$scope.STAT235SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - STAT235SoftwareCoopPlanTime <= 200) { 
        STAT235SoftwareCoopPlanTime = currentTime;
        return;
    }
STAT235SoftwareCoopPlanTime = currentTime;
  var STAT235SoftwareCoopPlanelement = document.getElementById("STAT235SoftwareCoopPlan");
 if (!STAT235SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("STAT235SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("STAT235SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("STAT235SoftwareCoopPlan")[i];
        if (STAT235SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(STAT235SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine208());
      that.addLine(getLine209());
     that.highlightElement(STAT235SoftwareCoopPlanelement, "Math");
     that.addToClicked("STAT235SoftwareCoopPlan", "Math");
      STAT235SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine208());
      that.removeLine(getLine209());
     that.unHighlightElement(STAT235SoftwareCoopPlanelement, "Math");
     var category = that.removeFromClicked("STAT235SoftwareCoopPlan", "Math");
  if (category != "") { 
     that.highlightElement(STAT235SoftwareCoopPlanelement, category);
}
      STAT235SoftwareCoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveSoftwareCoopPlan0Time <= 200) { 
        ProgramTechnicalElectiveSoftwareCoopPlan0Time = currentTime;
        return;
    }
ProgramTechnicalElectiveSoftwareCoopPlan0Time = currentTime;
  var ProgramTechnicalElectiveSoftwareCoopPlan0element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan0");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan0flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan0").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan0")[i];
        if (ProgramTechnicalElectiveSoftwareCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan0element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan0", "PROG");
      ProgramTechnicalElectiveSoftwareCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan0element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan0", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan0element, category);
}
      ProgramTechnicalElectiveSoftwareCoopPlan0flag=false
  }
};
$scope.ComplementaryElectiveSoftwareCoopPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ComplementaryElectiveSoftwareCoopPlan1Time <= 200) { 
        ComplementaryElectiveSoftwareCoopPlan1Time = currentTime;
        return;
    }
ComplementaryElectiveSoftwareCoopPlan1Time = currentTime;
  var ComplementaryElectiveSoftwareCoopPlan1element = document.getElementById("ComplementaryElectiveSoftwareCoopPlan1");
 if (!ComplementaryElectiveSoftwareCoopPlan1flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan1").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ComplementaryElectiveSoftwareCoopPlan1")[i];
        if (ComplementaryElectiveSoftwareCoopPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ComplementaryElectiveSoftwareCoopPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ComplementaryElectiveSoftwareCoopPlan1element, "COMP");
     that.addToClicked("ComplementaryElectiveSoftwareCoopPlan1", "COMP");
      ComplementaryElectiveSoftwareCoopPlan1flag=true
  }
 else {
     that.unHighlightElement(ComplementaryElectiveSoftwareCoopPlan1element, "COMP");
     var category = that.removeFromClicked("ComplementaryElectiveSoftwareCoopPlan1", "COMP");
  if (category != "") { 
     that.highlightElement(ComplementaryElectiveSoftwareCoopPlan1element, category);
}
      ComplementaryElectiveSoftwareCoopPlan1flag=false
  }
};
$scope.WKEXP902SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP902SoftwareCoopPlanTime <= 200) { 
        WKEXP902SoftwareCoopPlanTime = currentTime;
        return;
    }
WKEXP902SoftwareCoopPlanTime = currentTime;
  var WKEXP902SoftwareCoopPlanelement = document.getElementById("WKEXP902SoftwareCoopPlan");
 if (!WKEXP902SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("WKEXP902SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("WKEXP902SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("WKEXP902SoftwareCoopPlan")[i];
        if (WKEXP902SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP902SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine210());
      that.addLine(getLine211());
     that.highlightElement(WKEXP902SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP902SoftwareCoopPlan", "EngineeringProfession");
      WKEXP902SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine210());
      that.removeLine(getLine211());
     that.unHighlightElement(WKEXP902SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP902SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP902SoftwareCoopPlanelement, category);
}
      WKEXP902SoftwareCoopPlanflag=false
  }
};
$scope.WKEXP903SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP903SoftwareCoopPlanTime <= 200) { 
        WKEXP903SoftwareCoopPlanTime = currentTime;
        return;
    }
WKEXP903SoftwareCoopPlanTime = currentTime;
  var WKEXP903SoftwareCoopPlanelement = document.getElementById("WKEXP903SoftwareCoopPlan");
 if (!WKEXP903SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("WKEXP903SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("WKEXP903SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("WKEXP903SoftwareCoopPlan")[i];
        if (WKEXP903SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP903SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine211());
      that.addLine(getLine224());
     that.highlightElement(WKEXP903SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP903SoftwareCoopPlan", "EngineeringProfession");
      WKEXP903SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine211());
      that.removeLine(getLine224());
     that.unHighlightElement(WKEXP903SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP903SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP903SoftwareCoopPlanelement, category);
}
      WKEXP903SoftwareCoopPlanflag=false
  }
};
$scope.CMPUT291SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT291SoftwareCoopPlanTime <= 200) { 
        CMPUT291SoftwareCoopPlanTime = currentTime;
        return;
    }
CMPUT291SoftwareCoopPlanTime = currentTime;
  var CMPUT291SoftwareCoopPlanelement = document.getElementById("CMPUT291SoftwareCoopPlan");
 if (!CMPUT291SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CMPUT291SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CMPUT291SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CMPUT291SoftwareCoopPlan")[i];
        if (CMPUT291SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT291SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine212());
      that.addLine(getLine213());
      that.addLine(getLine214());
     that.highlightElement(CMPUT291SoftwareCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT291SoftwareCoopPlan", "ComputingScience");
      CMPUT291SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine212());
      that.removeLine(getLine213());
      that.removeLine(getLine214());
     that.unHighlightElement(CMPUT291SoftwareCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT291SoftwareCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT291SoftwareCoopPlanelement, category);
}
      CMPUT291SoftwareCoopPlanflag=false
  }
};
$scope.CMPUT301SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT301SoftwareCoopPlanTime <= 200) { 
        CMPUT301SoftwareCoopPlanTime = currentTime;
        return;
    }
CMPUT301SoftwareCoopPlanTime = currentTime;
  var CMPUT301SoftwareCoopPlanelement = document.getElementById("CMPUT301SoftwareCoopPlan");
 if (!CMPUT301SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CMPUT301SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CMPUT301SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CMPUT301SoftwareCoopPlan")[i];
        if (CMPUT301SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT301SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine215());
      that.addLine(getLine222());
      that.addLine(getLine228());
     that.highlightElement(CMPUT301SoftwareCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT301SoftwareCoopPlan", "ComputingScience");
      CMPUT301SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine215());
      that.removeLine(getLine222());
      that.removeLine(getLine228());
     that.unHighlightElement(CMPUT301SoftwareCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT301SoftwareCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT301SoftwareCoopPlanelement, category);
}
      CMPUT301SoftwareCoopPlanflag=false
  }
};
$scope.CMPUT379SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - CMPUT379SoftwareCoopPlanTime <= 200) { 
        CMPUT379SoftwareCoopPlanTime = currentTime;
        return;
    }
CMPUT379SoftwareCoopPlanTime = currentTime;
  var CMPUT379SoftwareCoopPlanelement = document.getElementById("CMPUT379SoftwareCoopPlan");
 if (!CMPUT379SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("CMPUT379SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("CMPUT379SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("CMPUT379SoftwareCoopPlan")[i];
        if (CMPUT379SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(CMPUT379SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine216());
      that.addLine(getLine217());
      that.addLine(getLine223());
      that.addLine(getLine227());
     that.highlightElement(CMPUT379SoftwareCoopPlanelement, "ComputingScience");
     that.addToClicked("CMPUT379SoftwareCoopPlan", "ComputingScience");
      CMPUT379SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine216());
      that.removeLine(getLine217());
      that.removeLine(getLine223());
      that.removeLine(getLine227());
     that.unHighlightElement(CMPUT379SoftwareCoopPlanelement, "ComputingScience");
     var category = that.removeFromClicked("CMPUT379SoftwareCoopPlan", "ComputingScience");
  if (category != "") { 
     that.highlightElement(CMPUT379SoftwareCoopPlanelement, category);
}
      CMPUT379SoftwareCoopPlanflag=false
  }
};
$scope.ECE322SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE322SoftwareCoopPlanTime <= 200) { 
        ECE322SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE322SoftwareCoopPlanTime = currentTime;
  var ECE322SoftwareCoopPlanelement = document.getElementById("ECE322SoftwareCoopPlan");
 if (!ECE322SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE322SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE322SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE322SoftwareCoopPlan")[i];
        if (ECE322SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE322SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine218());
      that.addLine(getLine220());
     that.highlightElement(ECE322SoftwareCoopPlanelement, "course");
     that.addToClicked("ECE322SoftwareCoopPlan", "course");
      ECE322SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine218());
      that.removeLine(getLine220());
     that.unHighlightElement(ECE322SoftwareCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE322SoftwareCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE322SoftwareCoopPlanelement, category);
}
      ECE322SoftwareCoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan1Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveSoftwareCoopPlan1Time <= 200) { 
        ProgramTechnicalElectiveSoftwareCoopPlan1Time = currentTime;
        return;
    }
ProgramTechnicalElectiveSoftwareCoopPlan1Time = currentTime;
  var ProgramTechnicalElectiveSoftwareCoopPlan1element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan1");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan1flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan1").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan1").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan1")[i];
        if (ProgramTechnicalElectiveSoftwareCoopPlan1element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan1element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan1element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan1", "PROG");
      ProgramTechnicalElectiveSoftwareCoopPlan1flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan1element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan1", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan1element, category);
}
      ProgramTechnicalElectiveSoftwareCoopPlan1flag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan2Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveSoftwareCoopPlan2Time <= 200) { 
        ProgramTechnicalElectiveSoftwareCoopPlan2Time = currentTime;
        return;
    }
ProgramTechnicalElectiveSoftwareCoopPlan2Time = currentTime;
  var ProgramTechnicalElectiveSoftwareCoopPlan2element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan2");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan2flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan2").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan2").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan2")[i];
        if (ProgramTechnicalElectiveSoftwareCoopPlan2element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan2element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan2element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan2", "PROG");
      ProgramTechnicalElectiveSoftwareCoopPlan2flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan2element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan2", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan2element, category);
}
      ProgramTechnicalElectiveSoftwareCoopPlan2flag=false
  }
};
$scope.ECE315SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE315SoftwareCoopPlanTime <= 200) { 
        ECE315SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE315SoftwareCoopPlanTime = currentTime;
  var ECE315SoftwareCoopPlanelement = document.getElementById("ECE315SoftwareCoopPlan");
 if (!ECE315SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE315SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE315SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE315SoftwareCoopPlan")[i];
        if (ECE315SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE315SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine219());
     that.highlightElement(ECE315SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE315SoftwareCoopPlan", "EngineeringSciences");
      ECE315SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine219());
     that.unHighlightElement(ECE315SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE315SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE315SoftwareCoopPlanelement, category);
}
      ECE315SoftwareCoopPlanflag=false
  }
};
$scope.ECE421SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE421SoftwareCoopPlanTime <= 200) { 
        ECE421SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE421SoftwareCoopPlanTime = currentTime;
  var ECE421SoftwareCoopPlanelement = document.getElementById("ECE421SoftwareCoopPlan");
 if (!ECE421SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE421SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE421SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE421SoftwareCoopPlan")[i];
        if (ECE421SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE421SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine220());
      that.addLine(getLine221());
      that.addLine(getLine222());
      that.addLine(getLine223());
      that.addLine(getLine230());
     that.highlightElement(ECE421SoftwareCoopPlanelement, "course");
     that.addToClicked("ECE421SoftwareCoopPlan", "course");
      ECE421SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine220());
      that.removeLine(getLine221());
      that.removeLine(getLine222());
      that.removeLine(getLine223());
      that.removeLine(getLine230());
     that.unHighlightElement(ECE421SoftwareCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE421SoftwareCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE421SoftwareCoopPlanelement, category);
}
      ECE421SoftwareCoopPlanflag=false
  }
};
$scope.ECE487SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE487SoftwareCoopPlanTime <= 200) { 
        ECE487SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE487SoftwareCoopPlanTime = currentTime;
  var ECE487SoftwareCoopPlanelement = document.getElementById("ECE487SoftwareCoopPlan");
 if (!ECE487SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE487SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE487SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE487SoftwareCoopPlan")[i];
        if (ECE487SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE487SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine229());
     that.highlightElement(ECE487SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE487SoftwareCoopPlan", "EngineeringSciences");
      ECE487SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine229());
     that.unHighlightElement(ECE487SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE487SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE487SoftwareCoopPlanelement, category);
}
      ECE487SoftwareCoopPlanflag=false
  }
};
$scope.ENGG404SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG404SoftwareCoopPlanTime <= 200) { 
        ENGG404SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGG404SoftwareCoopPlanTime = currentTime;
  var ENGG404SoftwareCoopPlanelement = document.getElementById("ENGG404SoftwareCoopPlan");
 if (!ENGG404SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGG404SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGG404SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGG404SoftwareCoopPlan")[i];
        if (ENGG404SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG404SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG404SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG404SoftwareCoopPlan", "EngineeringProfession");
      ENGG404SoftwareCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG404SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG404SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG404SoftwareCoopPlanelement, category);
}
      ENGG404SoftwareCoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan3Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveSoftwareCoopPlan3Time <= 200) { 
        ProgramTechnicalElectiveSoftwareCoopPlan3Time = currentTime;
        return;
    }
ProgramTechnicalElectiveSoftwareCoopPlan3Time = currentTime;
  var ProgramTechnicalElectiveSoftwareCoopPlan3element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan3");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan3flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan3").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan3").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan3")[i];
        if (ProgramTechnicalElectiveSoftwareCoopPlan3element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan3element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan3element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan3", "PROG");
      ProgramTechnicalElectiveSoftwareCoopPlan3flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan3element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan3", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan3element, category);
}
      ProgramTechnicalElectiveSoftwareCoopPlan3flag=false
  }
};
$scope.ITSElectiveSoftwareCoopPlan0Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ITSElectiveSoftwareCoopPlan0Time <= 200) { 
        ITSElectiveSoftwareCoopPlan0Time = currentTime;
        return;
    }
ITSElectiveSoftwareCoopPlan0Time = currentTime;
  var ITSElectiveSoftwareCoopPlan0element = document.getElementById("ITSElectiveSoftwareCoopPlan0");
 if (!ITSElectiveSoftwareCoopPlan0flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ITSElectiveSoftwareCoopPlan0").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ITSElectiveSoftwareCoopPlan0").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ITSElectiveSoftwareCoopPlan0")[i];
        if (ITSElectiveSoftwareCoopPlan0element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ITSElectiveSoftwareCoopPlan0element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ITSElectiveSoftwareCoopPlan0element, "ITS");
     that.addToClicked("ITSElectiveSoftwareCoopPlan0", "ITS");
      ITSElectiveSoftwareCoopPlan0flag=true
  }
 else {
     that.unHighlightElement(ITSElectiveSoftwareCoopPlan0element, "ITS");
     var category = that.removeFromClicked("ITSElectiveSoftwareCoopPlan0", "ITS");
  if (category != "") { 
     that.highlightElement(ITSElectiveSoftwareCoopPlan0element, category);
}
      ITSElectiveSoftwareCoopPlan0flag=false
  }
};
$scope.WKEXP904SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP904SoftwareCoopPlanTime <= 200) { 
        WKEXP904SoftwareCoopPlanTime = currentTime;
        return;
    }
WKEXP904SoftwareCoopPlanTime = currentTime;
  var WKEXP904SoftwareCoopPlanelement = document.getElementById("WKEXP904SoftwareCoopPlan");
 if (!WKEXP904SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("WKEXP904SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("WKEXP904SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("WKEXP904SoftwareCoopPlan")[i];
        if (WKEXP904SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP904SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine224());
      that.addLine(getLine225());
     that.highlightElement(WKEXP904SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP904SoftwareCoopPlan", "EngineeringProfession");
      WKEXP904SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine224());
      that.removeLine(getLine225());
     that.unHighlightElement(WKEXP904SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP904SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP904SoftwareCoopPlanelement, category);
}
      WKEXP904SoftwareCoopPlanflag=false
  }
};
$scope.WKEXP905SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - WKEXP905SoftwareCoopPlanTime <= 200) { 
        WKEXP905SoftwareCoopPlanTime = currentTime;
        return;
    }
WKEXP905SoftwareCoopPlanTime = currentTime;
  var WKEXP905SoftwareCoopPlanelement = document.getElementById("WKEXP905SoftwareCoopPlan");
 if (!WKEXP905SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("WKEXP905SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("WKEXP905SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("WKEXP905SoftwareCoopPlan")[i];
        if (WKEXP905SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(WKEXP905SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine225());
     that.highlightElement(WKEXP905SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("WKEXP905SoftwareCoopPlan", "EngineeringProfession");
      WKEXP905SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine225());
     that.unHighlightElement(WKEXP905SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("WKEXP905SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(WKEXP905SoftwareCoopPlanelement, category);
}
      WKEXP905SoftwareCoopPlanflag=false
  }
};
$scope.ECE420SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE420SoftwareCoopPlanTime <= 200) { 
        ECE420SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE420SoftwareCoopPlanTime = currentTime;
  var ECE420SoftwareCoopPlanelement = document.getElementById("ECE420SoftwareCoopPlan");
 if (!ECE420SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE420SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE420SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE420SoftwareCoopPlan")[i];
        if (ECE420SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE420SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine226());
      that.addLine(getLine227());
     that.highlightElement(ECE420SoftwareCoopPlanelement, "EngineeringSciences");
     that.addToClicked("ECE420SoftwareCoopPlan", "EngineeringSciences");
      ECE420SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine226());
      that.removeLine(getLine227());
     that.unHighlightElement(ECE420SoftwareCoopPlanelement, "EngineeringSciences");
     var category = that.removeFromClicked("ECE420SoftwareCoopPlan", "EngineeringSciences");
  if (category != "") { 
     that.highlightElement(ECE420SoftwareCoopPlanelement, category);
}
      ECE420SoftwareCoopPlanflag=false
  }
};
$scope.ECE422SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE422SoftwareCoopPlanTime <= 200) { 
        ECE422SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE422SoftwareCoopPlanTime = currentTime;
  var ECE422SoftwareCoopPlanelement = document.getElementById("ECE422SoftwareCoopPlan");
 if (!ECE422SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE422SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE422SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE422SoftwareCoopPlan")[i];
        if (ECE422SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE422SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine228());
      that.addLine(getLine229());
     that.highlightElement(ECE422SoftwareCoopPlanelement, "course");
     that.addToClicked("ECE422SoftwareCoopPlan", "course");
      ECE422SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine228());
      that.removeLine(getLine229());
     that.unHighlightElement(ECE422SoftwareCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE422SoftwareCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE422SoftwareCoopPlanelement, category);
}
      ECE422SoftwareCoopPlanflag=false
  }
};
$scope.ECE493SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ECE493SoftwareCoopPlanTime <= 200) { 
        ECE493SoftwareCoopPlanTime = currentTime;
        return;
    }
ECE493SoftwareCoopPlanTime = currentTime;
  var ECE493SoftwareCoopPlanelement = document.getElementById("ECE493SoftwareCoopPlan");
 if (!ECE493SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ECE493SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ECE493SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ECE493SoftwareCoopPlan")[i];
        if (ECE493SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ECE493SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
      that.addLine(getLine230());
     that.highlightElement(ECE493SoftwareCoopPlanelement, "course");
     that.addToClicked("ECE493SoftwareCoopPlan", "course");
      ECE493SoftwareCoopPlanflag=true
  }
 else {
      that.removeLine(getLine230());
     that.unHighlightElement(ECE493SoftwareCoopPlanelement, "course");
     var category = that.removeFromClicked("ECE493SoftwareCoopPlan", "course");
  if (category != "") { 
     that.highlightElement(ECE493SoftwareCoopPlanelement, category);
}
      ECE493SoftwareCoopPlanflag=false
  }
};
$scope.ENGM310SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM310SoftwareCoopPlanTime <= 200) { 
        ENGM310SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGM310SoftwareCoopPlanTime = currentTime;
  var ENGM310SoftwareCoopPlanelement = document.getElementById("ENGM310SoftwareCoopPlan");
 if (!ENGM310SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGM310SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGM310SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGM310SoftwareCoopPlan")[i];
        if (ENGM310SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM310SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM310SoftwareCoopPlanelement, "Other");
     that.addToClicked("ENGM310SoftwareCoopPlan", "Other");
      ENGM310SoftwareCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM310SoftwareCoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGM310SoftwareCoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM310SoftwareCoopPlanelement, category);
}
      ENGM310SoftwareCoopPlanflag=false
  }
};
$scope.ENGM401SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGM401SoftwareCoopPlanTime <= 200) { 
        ENGM401SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGM401SoftwareCoopPlanTime = currentTime;
  var ENGM401SoftwareCoopPlanelement = document.getElementById("ENGM401SoftwareCoopPlan");
 if (!ENGM401SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGM401SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGM401SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGM401SoftwareCoopPlan")[i];
        if (ENGM401SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGM401SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGM401SoftwareCoopPlanelement, "Other");
     that.addToClicked("ENGM401SoftwareCoopPlan", "Other");
      ENGM401SoftwareCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGM401SoftwareCoopPlanelement, "Other");
     var category = that.removeFromClicked("ENGM401SoftwareCoopPlan", "Other");
  if (category != "") { 
     that.highlightElement(ENGM401SoftwareCoopPlanelement, category);
}
      ENGM401SoftwareCoopPlanflag=false
  }
};
$scope.ENGG400SoftwareCoopPlanListener = function () {
var currentTime = new Date().getTime();
if (currentTime - ENGG400SoftwareCoopPlanTime <= 200) { 
        ENGG400SoftwareCoopPlanTime = currentTime;
        return;
    }
ENGG400SoftwareCoopPlanTime = currentTime;
  var ENGG400SoftwareCoopPlanelement = document.getElementById("ENGG400SoftwareCoopPlan");
 if (!ENGG400SoftwareCoopPlanflag) {
     if (that.SoftwareCoopPlanClickedMap.get("ENGG400SoftwareCoopPlan").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ENGG400SoftwareCoopPlan").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ENGG400SoftwareCoopPlan")[i];
        if (ENGG400SoftwareCoopPlanelement.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ENGG400SoftwareCoopPlanelement, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ENGG400SoftwareCoopPlanelement, "EngineeringProfession");
     that.addToClicked("ENGG400SoftwareCoopPlan", "EngineeringProfession");
      ENGG400SoftwareCoopPlanflag=true
  }
 else {
     that.unHighlightElement(ENGG400SoftwareCoopPlanelement, "EngineeringProfession");
     var category = that.removeFromClicked("ENGG400SoftwareCoopPlan", "EngineeringProfession");
  if (category != "") { 
     that.highlightElement(ENGG400SoftwareCoopPlanelement, category);
}
      ENGG400SoftwareCoopPlanflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan4Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveSoftwareCoopPlan4Time <= 200) { 
        ProgramTechnicalElectiveSoftwareCoopPlan4Time = currentTime;
        return;
    }
ProgramTechnicalElectiveSoftwareCoopPlan4Time = currentTime;
  var ProgramTechnicalElectiveSoftwareCoopPlan4element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan4");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan4flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan4").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan4").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan4")[i];
        if (ProgramTechnicalElectiveSoftwareCoopPlan4element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan4element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan4element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan4", "PROG");
      ProgramTechnicalElectiveSoftwareCoopPlan4flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan4element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan4", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan4element, category);
}
      ProgramTechnicalElectiveSoftwareCoopPlan4flag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan5Listener = function () {
var currentTime = new Date().getTime();
if (currentTime - ProgramTechnicalElectiveSoftwareCoopPlan5Time <= 200) { 
        ProgramTechnicalElectiveSoftwareCoopPlan5Time = currentTime;
        return;
    }
ProgramTechnicalElectiveSoftwareCoopPlan5Time = currentTime;
  var ProgramTechnicalElectiveSoftwareCoopPlan5element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan5");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan5flag) {
     if (that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan5").length > 0) { 
 var trueCounter = 0;
          for (let i = 0; i < that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan5").length; i++) { 
        var cate = that.SoftwareCoopPlanClickedMap.get("ProgramTechnicalElectiveSoftwareCoopPlan5")[i];
        if (ProgramTechnicalElectiveSoftwareCoopPlan5element.classList.contains(cate + "-highlighted")) {
            trueCounter++;
            that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan5element, cate);
        }
    }
    if (trueCounter > 0) {
        return;
    }}
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan5element, "PROG");
     that.addToClicked("ProgramTechnicalElectiveSoftwareCoopPlan5", "PROG");
      ProgramTechnicalElectiveSoftwareCoopPlan5flag=true
  }
 else {
     that.unHighlightElement(ProgramTechnicalElectiveSoftwareCoopPlan5element, "PROG");
     var category = that.removeFromClicked("ProgramTechnicalElectiveSoftwareCoopPlan5", "PROG");
  if (category != "") { 
     that.highlightElement(ProgramTechnicalElectiveSoftwareCoopPlan5element, category);
}
      ProgramTechnicalElectiveSoftwareCoopPlan5flag=false
  }
};
$scope.CHEM103SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CHEM103SoftwareCoopPlandesc");
 if (!CHEM103SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM103SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM103SoftwareCoopPlanrflag=false
  }
};
$scope.ENGG100SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG100SoftwareCoopPlandesc");
 if (!ENGG100SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG100SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG100SoftwareCoopPlanrflag=false
  }
};
$scope.ENGG130SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG130SoftwareCoopPlandesc");
 if (!ENGG130SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG130SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG130SoftwareCoopPlanrflag=false
  }
};
$scope.ENGL199SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGL199SoftwareCoopPlandesc");
 if (!ENGL199SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGL199SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGL199SoftwareCoopPlanrflag=false
  }
};
$scope.MATH100SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("MATH100SoftwareCoopPlandesc");
 if (!MATH100SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH100SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH100SoftwareCoopPlanrflag=false
  }
};
$scope.PHYS130SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("PHYS130SoftwareCoopPlandesc");
 if (!PHYS130SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS130SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS130SoftwareCoopPlanrflag=false
  }
};
$scope.CHEM105SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CHEM105SoftwareCoopPlandesc");
 if (!CHEM105SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CHEM105SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CHEM105SoftwareCoopPlanrflag=false
  }
};
$scope.ENCMP100SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENCMP100SoftwareCoopPlandesc");
 if (!ENCMP100SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENCMP100SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENCMP100SoftwareCoopPlanrflag=false
  }
};
$scope.ENGG160SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG160SoftwareCoopPlandesc");
 if (!ENGG160SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG160SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG160SoftwareCoopPlanrflag=false
  }
};
$scope.ENPH131SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENPH131SoftwareCoopPlandesc");
 if (!ENPH131SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENPH131SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENPH131SoftwareCoopPlanrflag=false
  }
};
$scope.MATH101SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("MATH101SoftwareCoopPlandesc");
 if (!MATH101SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH101SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH101SoftwareCoopPlanrflag=false
  }
};
$scope.MATH102SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("MATH102SoftwareCoopPlandesc");
 if (!MATH102SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH102SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH102SoftwareCoopPlanrflag=false
  }
};
$scope.CMPUT274SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT274SoftwareCoopPlandesc");
 if (!CMPUT274SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT274SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT274SoftwareCoopPlanrflag=false
  }
};
$scope.ECE202SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE202SoftwareCoopPlandesc");
 if (!ECE202SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE202SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE202SoftwareCoopPlanrflag=false
  }
};
$scope.ECE210SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE210SoftwareCoopPlandesc");
 if (!ECE210SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE210SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE210SoftwareCoopPlanrflag=false
  }
};
$scope.ENGG299SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG299SoftwareCoopPlandesc");
 if (!ENGG299SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG299SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG299SoftwareCoopPlanrflag=false
  }
};
$scope.MATH201SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("MATH201SoftwareCoopPlandesc");
 if (!MATH201SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH201SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH201SoftwareCoopPlanrflag=false
  }
};
$scope.MATH209SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("MATH209SoftwareCoopPlandesc");
 if (!MATH209SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      MATH209SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      MATH209SoftwareCoopPlanrflag=false
  }
};
$scope.CMPUT272SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT272SoftwareCoopPlandesc");
 if (!CMPUT272SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT272SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT272SoftwareCoopPlanrflag=false
  }
};
$scope.CMPUT275SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT275SoftwareCoopPlandesc");
 if (!CMPUT275SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT275SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT275SoftwareCoopPlanrflag=false
  }
};
$scope.ECE212SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE212SoftwareCoopPlandesc");
 if (!ECE212SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE212SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE212SoftwareCoopPlanrflag=false
  }
};
$scope.ECE240SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE240SoftwareCoopPlandesc");
 if (!ECE240SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE240SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE240SoftwareCoopPlanrflag=false
  }
};
$scope.PHYS230SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("PHYS230SoftwareCoopPlandesc");
 if (!PHYS230SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      PHYS230SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      PHYS230SoftwareCoopPlanrflag=false
  }
};
$scope.ComplementaryElectiveSoftwareCoopPlan0RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveSoftwareCoopPlan0desc");
 if (!ComplementaryElectiveSoftwareCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveSoftwareCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveSoftwareCoopPlan0rflag=false
  }
};
$scope.WKEXP901SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP901SoftwareCoopPlandesc");
 if (!WKEXP901SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP901SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP901SoftwareCoopPlanrflag=false
  }
};
$scope.ECE311SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE311SoftwareCoopPlandesc");
 if (!ECE311SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE311SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE311SoftwareCoopPlanrflag=false
  }
};
$scope.ECE321SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE321SoftwareCoopPlandesc");
 if (!ECE321SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE321SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE321SoftwareCoopPlanrflag=false
  }
};
$scope.ECE325SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE325SoftwareCoopPlandesc");
 if (!ECE325SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE325SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE325SoftwareCoopPlanrflag=false
  }
};
$scope.STAT235SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("STAT235SoftwareCoopPlandesc");
 if (!STAT235SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      STAT235SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      STAT235SoftwareCoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan0RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan0desc");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan0rflag=false
  }
};
$scope.ComplementaryElectiveSoftwareCoopPlan1RCListener = function () {
  var element = document.getElementById("ComplementaryElectiveSoftwareCoopPlan1desc");
 if (!ComplementaryElectiveSoftwareCoopPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ComplementaryElectiveSoftwareCoopPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ComplementaryElectiveSoftwareCoopPlan1rflag=false
  }
};
$scope.WKEXP902SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP902SoftwareCoopPlandesc");
 if (!WKEXP902SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP902SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP902SoftwareCoopPlanrflag=false
  }
};
$scope.WKEXP903SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP903SoftwareCoopPlandesc");
 if (!WKEXP903SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP903SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP903SoftwareCoopPlanrflag=false
  }
};
$scope.CMPUT291SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT291SoftwareCoopPlandesc");
 if (!CMPUT291SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT291SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT291SoftwareCoopPlanrflag=false
  }
};
$scope.CMPUT301SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT301SoftwareCoopPlandesc");
 if (!CMPUT301SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT301SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT301SoftwareCoopPlanrflag=false
  }
};
$scope.CMPUT379SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("CMPUT379SoftwareCoopPlandesc");
 if (!CMPUT379SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      CMPUT379SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      CMPUT379SoftwareCoopPlanrflag=false
  }
};
$scope.ECE322SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE322SoftwareCoopPlandesc");
 if (!ECE322SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE322SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE322SoftwareCoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan1RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan1desc");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan1rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan1rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan1rflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan2RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan2desc");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan2rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan2rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan2rflag=false
  }
};
$scope.ECE315SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE315SoftwareCoopPlandesc");
 if (!ECE315SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE315SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE315SoftwareCoopPlanrflag=false
  }
};
$scope.ECE421SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE421SoftwareCoopPlandesc");
 if (!ECE421SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE421SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE421SoftwareCoopPlanrflag=false
  }
};
$scope.ECE487SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE487SoftwareCoopPlandesc");
 if (!ECE487SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE487SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE487SoftwareCoopPlanrflag=false
  }
};
$scope.ENGG404SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG404SoftwareCoopPlandesc");
 if (!ENGG404SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG404SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG404SoftwareCoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan3RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan3desc");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan3rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan3rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan3rflag=false
  }
};
$scope.ITSElectiveSoftwareCoopPlan0RCListener = function () {
  var element = document.getElementById("ITSElectiveSoftwareCoopPlan0desc");
 if (!ITSElectiveSoftwareCoopPlan0rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ITSElectiveSoftwareCoopPlan0rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ITSElectiveSoftwareCoopPlan0rflag=false
  }
};
$scope.WKEXP904SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP904SoftwareCoopPlandesc");
 if (!WKEXP904SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP904SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP904SoftwareCoopPlanrflag=false
  }
};
$scope.WKEXP905SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("WKEXP905SoftwareCoopPlandesc");
 if (!WKEXP905SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      WKEXP905SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      WKEXP905SoftwareCoopPlanrflag=false
  }
};
$scope.ECE420SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE420SoftwareCoopPlandesc");
 if (!ECE420SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE420SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE420SoftwareCoopPlanrflag=false
  }
};
$scope.ECE422SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE422SoftwareCoopPlandesc");
 if (!ECE422SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE422SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE422SoftwareCoopPlanrflag=false
  }
};
$scope.ECE493SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ECE493SoftwareCoopPlandesc");
 if (!ECE493SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ECE493SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ECE493SoftwareCoopPlanrflag=false
  }
};
$scope.ENGM310SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGM310SoftwareCoopPlandesc");
 if (!ENGM310SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM310SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM310SoftwareCoopPlanrflag=false
  }
};
$scope.ENGM401SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGM401SoftwareCoopPlandesc");
 if (!ENGM401SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGM401SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGM401SoftwareCoopPlanrflag=false
  }
};
$scope.ENGG400SoftwareCoopPlanRCListener = function () {
  var element = document.getElementById("ENGG400SoftwareCoopPlandesc");
 if (!ENGG400SoftwareCoopPlanrflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ENGG400SoftwareCoopPlanrflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ENGG400SoftwareCoopPlanrflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan4RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan4desc");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan4rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan4rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan4rflag=false
  }
};
$scope.ProgramTechnicalElectiveSoftwareCoopPlan5RCListener = function () {
  var element = document.getElementById("ProgramTechnicalElectiveSoftwareCoopPlan5desc");
 if (!ProgramTechnicalElectiveSoftwareCoopPlan5rflag) {
       if (element.classList.contains("tooltiptextleft")) {
        element.classList.remove("tooltiptextleft");
        element.classList.add("tooltiptextleft-locked");
    } else {
        element.classList.remove("tooltiptextright");
        element.classList.add("tooltiptextright-locked");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan5rflag=true
  }
 else {
       if (element.classList.contains("tooltiptextleft-locked")) {
        element.classList.remove("tooltiptextleft-locked");
        element.classList.add("tooltiptextleft");
    } else {
        element.classList.remove("tooltiptextright-locked");
        element.classList.add("tooltiptextright");
    }
      ProgramTechnicalElectiveSoftwareCoopPlan5rflag=false
  }
};
});
app.directive('ngRightClick', function($parse) {
    return function(scope, element, attrs) {
        var fn = $parse(attrs.ngRightClick);
        element.bind('contextmenu', function(event) {
            scope.$apply(function() {
                event.preventDefault();
                fn(scope, {$event:event});
            });
        });
    };
    });app.directive('ngChangeRadio', function($parse) {
    return function(scope, element, attrs) {
        var fn = $parse(attrs.ngChangeRadio);
        element.bind('change', function(event) {
            scope.$apply(function() {
                event.preventDefault();
                fn(scope, {$event:event});
            });
        });
    };
    });